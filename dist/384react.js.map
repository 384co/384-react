{
  "version": 3,
  "sources": ["../node_modules/lodash/lodash.js", "../node_modules/mobx/src/errors.ts", "../node_modules/mobx/src/utils/global.ts", "../node_modules/mobx/src/utils/utils.ts", "../node_modules/mobx/src/api/decorators.ts", "../node_modules/mobx/src/core/atom.ts", "../node_modules/mobx/src/utils/comparer.ts", "../node_modules/mobx/src/types/modifiers.ts", "../node_modules/mobx/src/types/overrideannotation.ts", "../node_modules/mobx/src/types/actionannotation.ts", "../node_modules/mobx/src/types/flowannotation.ts", "../node_modules/mobx/src/types/computedannotation.ts", "../node_modules/mobx/src/types/observableannotation.ts", "../node_modules/mobx/src/types/autoannotation.ts", "../node_modules/mobx/src/api/observable.ts", "../node_modules/mobx/src/api/computed.ts", "../node_modules/mobx/src/core/action.ts", "../node_modules/mobx/src/types/observablevalue.ts", "../node_modules/mobx/src/core/computedvalue.ts", "../node_modules/mobx/src/core/derivation.ts", "../node_modules/mobx/src/core/globalstate.ts", "../node_modules/mobx/src/core/observable.ts", "../node_modules/mobx/src/core/reaction.ts", "../node_modules/mobx/src/core/spy.ts", "../node_modules/mobx/src/api/action.ts", "../node_modules/mobx/src/api/autorun.ts", "../node_modules/mobx/src/api/become-observed.ts", "../node_modules/mobx/src/api/configure.ts", "../node_modules/mobx/src/api/extendobservable.ts", "../node_modules/mobx/src/api/extras.ts", "../node_modules/mobx/src/api/flow.ts", "../node_modules/mobx/src/api/intercept-read.ts", "../node_modules/mobx/src/api/intercept.ts", "../node_modules/mobx/src/api/iscomputed.ts", "../node_modules/mobx/src/api/isobservable.ts", "../node_modules/mobx/src/api/object-api.ts", "../node_modules/mobx/src/api/observe.ts", "../node_modules/mobx/src/api/tojs.ts", "../node_modules/mobx/src/api/trace.ts", "../node_modules/mobx/src/api/transaction.ts", "../node_modules/mobx/src/api/when.ts", "../node_modules/mobx/src/types/dynamicobject.ts", "../node_modules/mobx/src/types/intercept-utils.ts", "../node_modules/mobx/src/types/listen-utils.ts", "../node_modules/mobx/src/api/makeObservable.ts", "../node_modules/mobx/src/types/observablearray.ts", "../node_modules/mobx/src/types/observablemap.ts", "../node_modules/mobx/src/types/observableset.ts", "../node_modules/mobx/src/types/observableobject.ts", "../node_modules/mobx/src/types/legacyobservablearray.ts", "../node_modules/mobx/src/types/type-utils.ts", "../node_modules/mobx/src/utils/eq.ts", "../node_modules/mobx/src/utils/iterable.ts", "../node_modules/mobx/src/api/annotation.ts", "../node_modules/mobx/src/mobx.ts", "../node_modules/lib384/src/utils/b64.ts", "../node_modules/snackabra-jslib/src/snackabra.ts", "../node_modules/lib384/src/boot/loadShard.ts", "../node_modules/lib384/src/boot/tld.ts", "../node_modules/lib384/src/boot/loaderLoader.ts", "../node_modules/lib384/src/boot/serviceWorker.ts", "../node_modules/lib384/src/boot/index.ts", "../node_modules/lib384/src/crypto/strongpin.ts", "../node_modules/lib384/src/crypto/index.ts", "../node_modules/lib384/src/strongphrase/strongphrase.ts", "../node_modules/lib384/src/strongphrase/index.ts", "../node_modules/lib384/src/utils/simpleB64.ts", "../node_modules/lib384/src/utils/index.ts", "../node_modules/lib384/src/file/system.ts", "../node_modules/lib384/src/file/index.ts", "../node_modules/lib384/src/browser/files.ts", "../node_modules/lib384/src/browser/images.ts", "../node_modules/lib384/src/browser/fileTable.ts", "../node_modules/lib384/src/browser/index.ts", "../node_modules/lib384/src/channel/messageTypes.ts", "../node_modules/lib384/src/channel/index.ts", "../node_modules/lib384/src/snackabra/index.ts", "../node_modules/lib384/src/index.ts", "../src/stores/Channel.Store.ts", "../src/utils/Misc.ts", "../src/utils/Decorators.ts", "../src/utils/IndexedKV.ts", "../src/workers/MessageWorker.js", "../src/stores/Snackabra.Store.ts", "../src/stores/index.ts"],
  "sourcesContent": ["/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('d\u00E9j\u00E0 vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n", "const niceErrors = {\n    0: `Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'`,\n    1(annotationType, key: PropertyKey) {\n        return `Cannot apply '${annotationType}' to '${key.toString()}': Field not found.`\n    },\n    /*\n    2(prop) {\n        return `invalid decorator for '${prop.toString()}'`\n    },\n    3(prop) {\n        return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n    },\n    4(prop) {\n        return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n    },\n    */\n    5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n    6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n    7: \"'entries()' can only be used on observable objects, arrays and maps\",\n    8: \"'set()' can only be used on observable objects, arrays and maps\",\n    9: \"'remove()' can only be used on observable objects, arrays and maps\",\n    10: \"'has()' can only be used on observable objects, arrays and maps\",\n    11: \"'get()' can only be used on observable objects, arrays and maps\",\n    12: `Invalid annotation`,\n    13: `Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    14: \"Intercept handlers should return nothing or a change object\",\n    15: `Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    16: `Modification exception: the internal structure of an observable array was changed.`,\n    17(index, length) {\n        return `[mobx.array] Index out of bounds, ${index} is larger than ${length}`\n    },\n    18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n    19(other) {\n        return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name\n    },\n    20(other) {\n        return \"Cannot initialize map from \" + other\n    },\n    21(dataStructure) {\n        return `Cannot convert to map from '${dataStructure}'`\n    },\n    22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n    23: \"It is not possible to get index atoms from arrays\",\n    24(thing) {\n        return \"Cannot obtain administration from \" + thing\n    },\n    25(property, name) {\n        return `the entry '${property}' does not exist in the observable map '${name}'`\n    },\n    26: \"please specify a property\",\n    27(property, name) {\n        return `no observable property '${property.toString()}' found on the observable object '${name}'`\n    },\n    28(thing) {\n        return \"Cannot obtain atom from \" + thing\n    },\n    29: \"Expecting some object\",\n    30: \"invalid action stack. did you forget to finish an action?\",\n    31: \"missing option for computed: get\",\n    32(name, derivation) {\n        return `Cycle detected in computation ${name}: ${derivation}`\n    },\n    33(name) {\n        return `The setter of computed value '${name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`\n    },\n    34(name) {\n        return `[ComputedValue '${name}'] It is not possible to assign a new value to a computed value.`\n    },\n    35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n    36: \"isolateGlobalState should be called before MobX is running any reactions\",\n    37(method) {\n        return `[mobx] \\`observableArray.${method}()\\` mutates the array in-place, which is not allowed inside a derivation. Use \\`array.slice().${method}()\\` instead`\n    },\n    38: \"'ownKeys()' can only be used on observable objects\",\n    39: \"'defineProperty()' can only be used on observable objects\"\n} as const\n\nconst errors: typeof niceErrors = __DEV__ ? niceErrors : ({} as any)\n\nexport function die(error: string | keyof typeof errors, ...args: any[]): never {\n    if (__DEV__) {\n        let e: any = typeof error === \"string\" ? error : errors[error]\n        if (typeof e === \"function\") e = e.apply(null, args as any)\n        throw new Error(`[MobX] ${e}`)\n    }\n    throw new Error(\n        typeof error === \"number\"\n            ? `[MobX] minified error nr: ${error}${\n                  args.length ? \" \" + args.map(String).join(\",\") : \"\"\n              }. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts`\n            : `[MobX] ${error}`\n    )\n}\n", "declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n", "import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) {\n            return\n        }\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value: any) {\n    if (!isObject(value)) {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) {\n        return true\n    }\n    const protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n    return (\n        typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString\n    )\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) {\n        return false\n    }\n    if (\n        \"GeneratorFunction\" === constructor.name ||\n        \"GeneratorFunction\" === constructor.displayName\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing: any): thing is Map<any, any> {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing: any): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object: any) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) {\n        return keys\n    }\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) {\n        return keys\n    }\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => Array<string | symbol> =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") {\n        return key\n    }\n    if (typeof key === \"symbol\") {\n        return key.toString()\n    }\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value: any) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n", "import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nimport type { Decorator } from \"../types/decorator_fills\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation<D extends Decorator = Decorator>(\n    annotation: Annotation\n): PropertyDecorator & Annotation & D {\n    function decorator(target, property) {\n        if (is20223Decorator(property)) {\n            return annotation.decorate_20223_(target, property)\n        } else {\n            storeAnnotation(target, property, annotation)\n        }\n    }\n    return Object.assign(decorator, annotation) as any\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overridden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        // if (__DEV__ && !target[storedAnnotationsSymbol]) {\n        //     die(\n        //         `No annotations were passed to makeObservable, but no decorated members have been found either`\n        //     )\n        // }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n\nexport function is20223Decorator(context): context is DecoratorContext {\n    return typeof context == \"object\" && typeof context[\"kind\"] == \"string\"\n}\n\nexport function assert20223DecoratorType(\n    context: DecoratorContext,\n    types: DecoratorContext[\"kind\"][]\n) {\n    if (__DEV__ && !types.includes(context.kind)) {\n        die(\n            `The decorator applied to '${String(context.name)}' cannot be used on a ${\n                context.kind\n            } element`\n        )\n    }\n}\n", "import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved(): boolean\n    reportChanged(): void\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n", "import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) {\n        return Object.is(a, b)\n    }\n\n    return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n", "import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) {\n        return v\n    }\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) {\n        return observable.array(v, { name })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name })\n    }\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) {\n        return v\n    }\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n        return v\n    }\n    if (Array.isArray(v)) {\n        return observable.array(v, { name, deep: false })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name, deep: false })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name, deep: false })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name, deep: false })\n    }\n\n    if (__DEV__) {\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n    }\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v)) {\n        die(`observable.struct should not be used with observable values`)\n    }\n    if (deepEqual(v, oldValue)) {\n        return oldValue\n    }\n    return v\n}\n", "import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nimport type { ClassMethodDecorator } from \"./decorator_fills\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator & ClassMethodDecorator =\n    createDecoratorAnnotation({\n        annotationType_: OVERRIDE,\n        make_,\n        extend_,\n        decorate_20223_\n    })\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(this: Annotation, adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(this: Annotation, adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n\nfunction decorate_20223_(this: Annotation, desc, context: DecoratorContext) {\n    console.warn(`'${this.annotationType_}' cannot be used with decorators - this is a no-op`)\n}\n", "import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult,\n    assert20223DecoratorType,\n    storeAnnotation\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_,\n        decorate_20223_\n    }\n}\n\nfunction make_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction decorate_20223_(this: Annotation, mthd, context: DecoratorContext) {\n    if (__DEV__) {\n        assert20223DecoratorType(context, [\"method\", \"field\"])\n    }\n    const { kind, name, addInitializer } = context\n    const ann = this\n\n    const _createAction = m =>\n        createAction(ann.options_?.name ?? name!.toString(), m, ann.options_?.autoAction ?? false)\n\n    // Backwards/Legacy behavior, expects makeObservable(this)\n    if (kind == \"field\") {\n        addInitializer(function () {\n            storeAnnotation(this, name, ann)\n        })\n        return\n    }\n\n    if (kind == \"method\") {\n        if (!isAction(mthd)) {\n            mthd = _createAction(mthd)\n        }\n\n        if (this.options_?.bound) {\n            addInitializer(function () {\n                const self = this as any\n                const bound = self[name].bind(self)\n                bound.isMobxAction = true\n                self[name] = bound\n            })\n        }\n\n        return mthd\n    }\n\n    die(\n        `Cannot apply '${ann.annotationType_}' to '${String(name)}' (kind: ${kind}):` +\n            `\\n'${ann.annotationType_}' can only be used on properties with a function value.`\n    )\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? adm.proxy_ ?? adm.target_ : undefined\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult,\n    hasProp,\n    assert20223DecoratorType\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_,\n        decorate_20223_\n    }\n}\n\nfunction make_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n        if (this.extend_(adm, key, descriptor, false) === null) {\n            return MakeResult.Cancel\n        }\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction decorate_20223_(this: Annotation, mthd, context: ClassMethodDecoratorContext) {\n    if (__DEV__) {\n        assert20223DecoratorType(context, [\"method\"])\n    }\n    const { name, addInitializer } = context\n\n    if (!isFlow(mthd)) {\n        mthd = flow(mthd)\n    }\n\n    if (this.options_?.bound) {\n        addInitializer(function () {\n            const self = this as any\n            const bound = self[name].bind(self)\n            bound.isMobXFlow = true\n            self[name] = bound\n        })\n    }\n\n    return mthd\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    // In case of flow.bound, the descriptor can be from already annotated prototype\n    if (!isFlow(value)) {\n        value = flow(value)\n    }\n    if (bound) {\n        // We do not keep original function around, so we bind the existing flow\n        value = value.bind(adm.proxy_ ?? adm.target_)\n        // This is normally set by `flow`, but `bind` returns new function...\n        value.isMobXFlow = true\n    }\n    return {\n        value,\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    die,\n    Annotation,\n    MakeResult,\n    assert20223DecoratorType,\n    $mobx,\n    asObservableObject,\n    ComputedValue\n} from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_,\n        decorate_20223_\n    }\n}\n\nfunction make_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction decorate_20223_(this: Annotation, get, context: ClassGetterDecoratorContext) {\n    if (__DEV__) {\n        assert20223DecoratorType(context, [\"getter\"])\n    }\n    const ann = this\n    const { name: key, addInitializer } = context\n\n    addInitializer(function () {\n        const adm: ObservableObjectAdministration = asObservableObject(this)[$mobx]\n        const options = {\n            ...ann.options_,\n            get,\n            context: this\n        }\n        options.name ||= __DEV__\n            ? `${adm.name_}.${key.toString()}`\n            : `ObservableObject.${key.toString()}`\n        adm.values_.set(key, new ComputedValue(options))\n    })\n\n    return function () {\n        return this[$mobx].getObservablePropValue_(key)\n    }\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult,\n    assert20223DecoratorType,\n    ObservableValue,\n    asObservableObject,\n    $mobx\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_,\n        decorate_20223_\n    }\n}\n\nfunction make_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    this: Annotation,\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction decorate_20223_(\n    this: Annotation,\n    desc,\n    context: ClassAccessorDecoratorContext | ClassFieldDecoratorContext\n) {\n    if (__DEV__) {\n        if (context.kind === \"field\") {\n            throw die(\n                `Please use \\`@observable accessor ${String(\n                    context.name\n                )}\\` instead of \\`@observable ${String(context.name)}\\``\n            )\n        }\n        assert20223DecoratorType(context, [\"accessor\"])\n    }\n\n    const ann = this\n    const { kind, name } = context\n\n    // The laziness here is not ideal... It's a workaround to how 2022.3 Decorators are implemented:\n    //   `addInitializer` callbacks are executed _before_ any accessors are defined (instead of the ideal-for-us right after each).\n    //   This means that, if we were to do our stuff in an `addInitializer`, we'd attempt to read a private slot\n    //   before it has been initialized. The runtime doesn't like that and throws a `Cannot read private member\n    //   from an object whose class did not declare it` error.\n    // TODO: it seems that this will not be required anymore in the final version of the spec\n    // See TODO: link\n    const initializedObjects = new WeakSet()\n\n    function initializeObservable(target, value) {\n        const adm: ObservableObjectAdministration = asObservableObject(target)[$mobx]\n        const observable = new ObservableValue(\n            value,\n            ann.options_?.enhancer ?? deepEnhancer,\n            __DEV__ ? `${adm.name_}.${name.toString()}` : `ObservableObject.${name.toString()}`,\n            false\n        )\n        adm.values_.set(name, observable)\n        initializedObjects.add(target)\n    }\n\n    if (kind == \"accessor\") {\n        return {\n            get() {\n                if (!initializedObjects.has(this)) {\n                    initializeObservable(this, desc.get.call(this))\n                }\n                return this[$mobx].getObservablePropValue_(name)\n            },\n            set(value) {\n                if (!initializedObjects.has(this)) {\n                    initializeObservable(this, value)\n                }\n                return this[$mobx].setObservablePropValue_(name, value)\n            },\n            init(value) {\n                if (!initializedObjects.has(this)) {\n                    initializeObservable(this, value)\n                }\n                return value\n            }\n        }\n    }\n\n    return\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult,\n    die\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_,\n        decorate_20223_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n\nfunction decorate_20223_(this: Annotation, desc, context: ClassGetterDecoratorContext) {\n    die(`'${this.annotationType_}' cannot be used as a decorator`)\n}\n", "import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation,\n    is20223Decorator,\n    initObservable\n} from \"../internal\"\n\nimport type { ClassAccessorDecorator, ClassFieldDecorator } from \"../types/decorator_fills\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation =\n    createDecoratorAnnotation<ClassAccessorDecorator>(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp; (2022.3 Decorators)\n    if (is20223Decorator(arg2)) {\n        return observableAnnotation.decorate_20223_(v, arg2)\n    }\n\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) {\n        return v\n    }\n\n    // plain object\n    if (isPlainObject(v)) {\n        return observable.object(v, arg2, arg3)\n    }\n\n    // Array\n    if (Array.isArray(v)) {\n        return observable.array(v, arg2)\n    }\n\n    // Map\n    if (isES6Map(v)) {\n        return observable.map(v, arg2)\n    }\n\n    // Set\n    if (isES6Set(v)) {\n        return observable.set(v, arg2)\n    }\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) {\n        return v\n    }\n\n    // anything else\n    return observable.box(v, arg2)\n}\nassign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableValueFactory {\n    <T>(value: T, options?: CreateObservableOptions): IObservableValue<T>\n    <T>(value?: T, options?: CreateObservableOptions): IObservableValue<T | undefined>\n}\n\nexport interface IObservableFactory\n    extends Annotation,\n        PropertyDecorator,\n        ClassAccessorDecorator,\n        ClassFieldDecorator {\n    // TODO: remove ClassFieldDecorator, this is only temporarily support for legacy decorators\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: IObservableValueFactory\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator & ClassAccessorDecorator & ClassFieldDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator & ClassAccessorDecorator & ClassFieldDecorator\n    deep: Annotation & PropertyDecorator & ClassAccessorDecorator & ClassFieldDecorator\n    struct: Annotation & PropertyDecorator & ClassAccessorDecorator & ClassFieldDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (\n            globalState.useProxies === false || o.proxy === false\n                ? createLegacyArray\n                : createObservableArray\n        )(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T extends object = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return initObservable(() =>\n            extendObservable(\n                globalState.useProxies === false || options?.proxy === false\n                    ? asObservableObject({}, options)\n                    : asDynamicObservableObject({}, options),\n                props,\n                decorators\n            )\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n", "import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer,\n    is20223Decorator\n} from \"../internal\"\n\nimport type { ClassGetterDecorator } from \"../types/decorator_fills\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator, ClassGetterDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator & ClassGetterDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator & ClassGetterDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (is20223Decorator(arg2)) {\n        // @computed (2022.3 Decorators)\n        return computedAnnotation.decorate_20223_(arg1, arg2)\n    }\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) {\n            die(\"First argument to `computed` should be an expression.\")\n        }\n        if (isFunction(arg2)) {\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n        }\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n", "import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor,\n    defineProperty\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) {\n            die(\"`action` can only be invoked on functions\")\n        }\n        if (typeof actionName !== \"string\" || !actionName) {\n            die(`actions should have valid names, got: '${actionName}'`)\n        }\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    res.toString = () => fn.toString()\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) {\n        untrackedEnd(runInfo.prevDerivation_)\n    }\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n", "import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: T\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable\n{\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) {\n                return globalState.UNCHANGED\n            }\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately) {\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n", "import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean | undefined\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) {\n            die(31)\n        }\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) {\n            die(32, this.name_, this.derivation)\n        }\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) {\n                    globalState.trackingContext = this\n                }\n                if (this.trackAndCompute()) {\n                    propagateChangeConfirmed(this)\n                }\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) {\n            throw result.cause\n        }\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) {\n                die(33, this.name_)\n            }\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else {\n            die(34, this.name_)\n        }\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) {\n            return\n        }\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (\n            typeof this.requiresReaction_ === \"boolean\"\n                ? this.requiresReaction_\n                : globalState.computedRequiresReaction\n        ) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n", "import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (\n        !globalState.allowStateChanges &&\n        (hasObservers || globalState.enforceActions === \"always\")\n    ) {\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n    }\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) {\n        return\n    }\n\n    if (derivation.observing_.length !== 0) {\n        return\n    }\n\n    if (\n        typeof derivation.requiresObservable_ === \"boolean\"\n            ? derivation.requiresObservable_\n            : globalState.reactionRequiresObservable\n    ) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) {\n                observing[i0] = dep\n            }\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if ((dep as any as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = (dep as any as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) {\n        removeObserver(obs[i], derivation)\n    }\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) {\n        obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    }\n}\n", "import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n        canMergeGlobalState = false\n    }\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n        canMergeGlobalState = false\n    }\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) {\n            global.__mobxGlobals.UNCHANGED = {}\n        } // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    ) {\n        die(36)\n    }\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) {\n            global.__mobxGlobals = undefined\n        }\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals) {\n        if (persistentKeys.indexOf(key as any) === -1) {\n            globalState[key] = defaultGlobals[key]\n        }\n    }\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n", "import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_) {\n        observable.lowestObserverState_ = node.dependenciesState_\n    }\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return observable.isBeingObserved_\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) {\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n    }\n}\n", "import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction, GenericAbortSignal\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_?\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) {\n            this.reportExceptionInDerivation_(result.cause)\n        }\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) {\n            throw error\n        }\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) { console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) } // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(abortSignal?: GenericAbortSignal): IReactionDisposer {\n        const dispose = (() => {\n            this.dispose()\n            abortSignal?.removeEventListener?.(\"abort\", dispose)\n        }) as IReactionDisposer\n        abortSignal?.addEventListener?.(\"abort\", dispose)\n        dispose[$mobx] = this\n\n        return dispose\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) {\n            globalState.globalReactionErrorHandlers.splice(idx, 1)\n        }\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n        return\n    }\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++) {\n            remainingReactions[i].runReaction_()\n        }\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n", "import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) {\n        return\n    } // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) {\n        return\n    }\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](event)\n    }\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) {\n        return\n    }\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) {\n        return\n    }\n    if (change) {\n        spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    } else {\n        spyReport(END_EVENT)\n    }\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n", "import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation,\n    is20223Decorator\n} from \"../internal\"\n\nimport type { ClassFieldDecorator, ClassMethodDecorator } from \"../types/decorator_fills\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory\n    extends Annotation,\n        PropertyDecorator,\n        ClassMethodDecorator,\n        ClassFieldDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator &\n        Annotation &\n        ClassMethodDecorator &\n        ClassFieldDecorator\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator & ClassMethodDecorator & ClassFieldDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1)) {\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        }\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) {\n            return createAction(arg1, arg2, autoAction)\n        }\n        // @action (2022.3 Decorators)\n        if (is20223Decorator(arg2)) {\n            return (autoAction ? autoActionAnnotation : actionAnnotation).decorate_20223_(\n                arg1,\n                arg2\n            )\n        }\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) {\n            die(\"Invalid arguments for `action`\")\n        }\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n", "import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges,\n    GenericAbortSignal\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n    signal?: GenericAbortSignal\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) {\n            die(\"Autorun expects a function as first argument\")\n        }\n        if (isAction(view)) {\n            die(\"Autorun does not accept actions since actions are untrackable\")\n        }\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) {\n                            reaction.track(reactionRunner)\n                        }\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    if(!opts?.signal?.aborted) {\n        reaction.schedule_()\n    }\n    return reaction.getDisposer_(opts?.signal)\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect)) {\n            die(\"First and second argument to reaction should be functions\")\n        }\n        if (!isPlainObject(opts)) {\n            die(\"Third argument of reactions should be an object\")\n        }\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) {\n            return\n        }\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) {\n            effectAction(value, oldValue as OldValue, r)\n        } else if (!firstTime && changed) {\n            effectAction(value, oldValue as OldValue, r)\n        }\n        firstTime = false\n    }\n\n    if(!opts?.signal?.aborted) {\n        r.schedule_()\n    }\n    return r.getDisposer_(opts?.signal)\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n", "import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n", "import { globalState, isolateGlobalState, setReactionScheduler } from \"../internal\"\n\nconst NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"\n\nexport function configure(options: {\n    enforceActions?: \"never\" | \"always\" | \"observed\"\n    computedRequiresReaction?: boolean\n    /**\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable?: boolean\n    /**\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction?: boolean\n    isolateGlobalState?: boolean\n    disableErrorBoundaries?: boolean\n    safeDescriptors?: boolean\n    reactionScheduler?: (f: () => void) => void\n    useProxies?: \"always\" | \"never\" | \"ifavailable\"\n}): void {\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState()\n    }\n    const { useProxies, enforceActions } = options\n    if (useProxies !== undefined) {\n        globalState.useProxies =\n            useProxies === ALWAYS\n                ? true\n                : useProxies === NEVER\n                ? false\n                : typeof Proxy !== \"undefined\"\n    }\n    if (useProxies === \"ifavailable\") {\n        globalState.verifyProxies = true\n    }\n    if (enforceActions !== undefined) {\n        const ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED\n        globalState.enforceActions = ea\n        globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true\n    }\n    ;[\n        \"computedRequiresReaction\",\n        \"reactionRequiresObservable\",\n        \"observableRequiresReaction\",\n        \"disableErrorBoundaries\",\n        \"safeDescriptors\"\n    ].forEach(key => {\n        if (key in options) {\n            globalState[key] = !!options[key]\n        }\n    })\n    globalState.allowStateReads = !globalState.observableRequiresReaction\n    if (__DEV__ && globalState.disableErrorBoundaries === true) {\n        console.warn(\n            \"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\"\n        )\n    }\n    if (options.reactionScheduler) {\n        setReactionScheduler(options.reactionScheduler)\n    }\n}\n", "import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys,\n    initObservable\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) {\n            die(\"'extendObservable' expected 2-4 arguments\")\n        }\n        if (typeof target !== \"object\") {\n            die(\"'extendObservable' expects an object as first argument\")\n        }\n        if (isObservableMap(target)) {\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        }\n        if (!isPlainObject(properties)) {\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        }\n        if (isObservable(properties) || isObservable(annotations)) {\n            die(`Extending an object with another observable (object) is not supported`)\n        }\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    initObservable(() => {\n        const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    })\n\n    return target as any\n}\n", "import { IDepTreeNode, getAtom, getObservers, hasObservers } from \"../internal\"\n\nexport interface IDependencyTree {\n    name: string\n    dependencies?: IDependencyTree[]\n}\n\nexport interface IObserverTree {\n    name: string\n    observers?: IObserverTree[]\n}\n\nexport function getDependencyTree(thing: any, property?: string): IDependencyTree {\n    return nodeToDependencyTree(getAtom(thing, property))\n}\n\nfunction nodeToDependencyTree(node: IDepTreeNode): IDependencyTree {\n    const result: IDependencyTree = {\n        name: node.name_\n    }\n    if (node.observing_ && node.observing_.length > 0) {\n        result.dependencies = unique(node.observing_).map(nodeToDependencyTree)\n    }\n    return result\n}\n\nexport function getObserverTree(thing: any, property?: string): IObserverTree {\n    return nodeToObserverTree(getAtom(thing, property))\n}\n\nfunction nodeToObserverTree(node: IDepTreeNode): IObserverTree {\n    const result: IObserverTree = {\n        name: node.name_\n    }\n    if (hasObservers(node as any)) {\n        result.observers = Array.from(<any>getObservers(node as any)).map(<any>nodeToObserverTree)\n    }\n    return result\n}\n\nfunction unique<T>(list: T[]): T[] {\n    return Array.from(new Set(list))\n}\n", "import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation,\n    is20223Decorator\n} from \"../internal\"\n\nimport type { ClassMethodDecorator } from \"../types/decorator_fills\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator, ClassMethodDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator & ClassMethodDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow (2022.3 Decorators)\n        if (is20223Decorator(arg2)) {\n            return flowAnnotation.decorate_20223_(arg1, arg2)\n        }\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1) {\n            die(`Flow expects single argument with generator function`)\n        }\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) {\n                        return resolve(ret.value)\n                    }\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) {\n                        cancelPromise(pendingPromise)\n                    }\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) {\n        promise.cancel()\n    }\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n", "import {\n    IObservableArray,\n    IObservableValue,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isObservableValue,\n    ObservableSet,\n    die,\n    isStringish\n} from \"../internal\"\n\nexport type ReadInterceptor<T> = (value: any) => T\n\n/** Experimental feature right now, tested indirectly via Mobx-State-Tree */\nexport function interceptReads<T>(value: IObservableValue<T>, handler: ReadInterceptor<T>): Lambda\nexport function interceptReads<T>(\n    observableArray: IObservableArray<T>,\n    handler: ReadInterceptor<T>\n): Lambda\nexport function interceptReads<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads<V>(\n    observableSet: ObservableSet<V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads(\n    object: Object,\n    property: string,\n    handler: ReadInterceptor<any>\n): Lambda\nexport function interceptReads(thing, propOrHandler?, handler?): Lambda {\n    let target\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing)\n    } else if (isObservableObject(thing)) {\n        if (__DEV__ && !isStringish(propOrHandler)) {\n            return die(\n                `InterceptReads can only be used with a specific property, not with an object in general`\n            )\n        }\n        target = getAdministration(thing, propOrHandler)\n    } else if (__DEV__) {\n        return die(`Expected observable map, object or array as first array`)\n    }\n    if (__DEV__ && target.dehancer !== undefined) {\n        return die(`An intercept reader was already established`)\n    }\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler\n    return () => {\n        target.dehancer = undefined\n    }\n}\n", "import {\n    IArrayWillChange,\n    IArrayWillSplice,\n    IInterceptor,\n    IMapWillChange,\n    IObjectWillChange,\n    IObservableArray,\n    IObservableValue,\n    IValueWillChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetWillChange,\n    isFunction\n} from \"../internal\"\n\nexport function intercept<T>(\n    value: IObservableValue<T>,\n    handler: IInterceptor<IValueWillChange<T>>\n): Lambda\nexport function intercept<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    handler: IInterceptor<IArrayWillChange<T> | IArrayWillSplice<T>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    handler: IInterceptor<IMapWillChange<K, V>>\n): Lambda\nexport function intercept<V>(\n    observableSet: ObservableSet<V> | Set<V>,\n    handler: IInterceptor<ISetWillChange<V>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    handler: IInterceptor<IValueWillChange<V>>\n): Lambda\nexport function intercept(object: object, handler: IInterceptor<IObjectWillChange>): Lambda\nexport function intercept<T extends object, K extends keyof T>(\n    object: T,\n    property: K,\n    handler: IInterceptor<IValueWillChange<T[K]>>\n): Lambda\nexport function intercept(thing, propOrHandler?, handler?): Lambda {\n    if (isFunction(handler)) {\n        return interceptProperty(thing, propOrHandler, handler)\n    } else {\n        return interceptInterceptable(thing, propOrHandler)\n    }\n}\n\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept_(handler)\n}\n\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept_(handler)\n}\n", "import { $mobx, getAtom, isComputedValue, isObservableObject, die, isStringish } from \"../internal\"\n\nexport function _isComputed(value, property?: PropertyKey): boolean {\n    if (property === undefined) {\n        return isComputedValue(value)\n    }\n    if (isObservableObject(value) === false) {\n        return false\n    }\n    if (!value[$mobx].values_.has(property)) {\n        return false\n    }\n    const atom = getAtom(value, property)\n    return isComputedValue(atom)\n}\n\nexport function isComputed(value: any): boolean {\n    if (__DEV__ && arguments.length > 1) {\n        return die(\n            `isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property`\n        )\n    }\n    return _isComputed(value)\n}\n\nexport function isComputedProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`isComputed expected a property name as second argument`)\n    }\n    return _isComputed(value, propName)\n}\n", "import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) {\n        return false\n    }\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value))) {\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        }\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1) {\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    }\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`expected a property name as second argument`)\n    }\n    return _isObservable(value, propName)\n}\n", "import {\n    $mobx,\n    IIsObservableObject,\n    IObservableArray,\n    ObservableMap,\n    ObservableSet,\n    ObservableObjectAdministration,\n    endBatch,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    startBatch,\n    die\n} from \"../internal\"\n\nexport function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>\nexport function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>\nexport function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>\nexport function keys(obj: any): any {\n    if (isObservableObject(obj)) {\n        return (\n            (obj as any as IIsObservableObject)[$mobx] as ObservableObjectAdministration\n        ).keys_()\n    }\n    if (isObservableMap(obj) || isObservableSet(obj)) {\n        return Array.from(obj.keys())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index)\n    }\n    die(5)\n}\n\nexport function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>\nexport function values<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>\nexport function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>\nexport function values(obj: any): string[] {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key))\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values())\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice()\n    }\n    die(6)\n}\n\nexport function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>\nexport function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>\nexport function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>\nexport function entries<T = any>(\n    obj: T\n): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>\nexport function entries(obj: any): any {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)])\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key])\n    }\n    die(7)\n}\n\nexport function set<V>(obj: ObservableMap<PropertyKey, V>, values: { [key: string]: V })\nexport function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V)\nexport function set<T>(obj: ObservableSet<T>, value: T)\nexport function set<T>(obj: IObservableArray<T>, index: number, value: T)\nexport function set<T extends Object>(obj: T, values: { [key: string]: any })\nexport function set<T extends Object>(obj: T, key: PropertyKey, value: any)\nexport function set(obj: any, key: any, value?: any): void {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch()\n        const values = key\n        try {\n            for (let key in values) {\n                set(obj, key, values[key])\n            }\n        } finally {\n            endBatch()\n        }\n        return\n    }\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].set_(key, value)\n    } else if (isObservableMap(obj)) {\n        obj.set(key, value)\n    } else if (isObservableSet(obj)) {\n        obj.add(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        if (key < 0) {\n            die(`Invalid index: '${key}'`)\n        }\n        startBatch()\n        if (key >= obj.length) {\n            obj.length = key + 1\n        }\n        obj[key] = value\n        endBatch()\n    } else {\n        die(8)\n    }\n}\n\nexport function remove<K, V>(obj: ObservableMap<K, V>, key: K)\nexport function remove<T>(obj: ObservableSet<T>, key: T)\nexport function remove<T>(obj: IObservableArray<T>, index: number)\nexport function remove<T extends Object>(obj: T, key: string)\nexport function remove(obj: any, key: any): void {\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].delete_(key)\n    } else if (isObservableMap(obj)) {\n        obj.delete(key)\n    } else if (isObservableSet(obj)) {\n        obj.delete(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        obj.splice(key, 1)\n    } else {\n        die(9)\n    }\n}\n\nexport function has<K>(obj: ObservableMap<K, any>, key: K): boolean\nexport function has<T>(obj: ObservableSet<T>, key: T): boolean\nexport function has<T>(obj: IObservableArray<T>, index: number): boolean\nexport function has<T extends Object>(obj: T, key: string): boolean\nexport function has(obj: any, key: any): boolean {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].has_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.has(key)\n    } else if (isObservableSet(obj)) {\n        return obj.has(key)\n    } else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length\n    }\n    die(10)\n}\n\nexport function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined\nexport function get<T>(obj: IObservableArray<T>, index: number): T | undefined\nexport function get<T extends Object>(obj: T, key: string): any\nexport function get(obj: any, key: any): any {\n    if (!has(obj, key)) {\n        return undefined\n    }\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].get_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.get(key)\n    } else if (isObservableArray(obj)) {\n        return obj[key]\n    }\n    die(11)\n}\n\nexport function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].defineProperty_(key, descriptor)\n    }\n    die(39)\n}\n\nexport function apiOwnKeys(obj: Object) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].ownKeys_()\n    }\n    die(38)\n}\n", "import {\n    IArrayDidChange,\n    IComputedValue,\n    IMapDidChange,\n    IObjectDidChange,\n    IObservableArray,\n    IObservableValue,\n    IValueDidChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetDidChange,\n    isFunction\n} from \"../internal\"\n\nexport function observe<T>(\n    value: IObservableValue<T> | IComputedValue<T>,\n    listener: (change: IValueDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    listener: (change: IArrayDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<V>(\n    // ObservableSet/ObservableMap are required despite they implement Set/Map: https://github.com/mobxjs/mobx/pull/3180#discussion_r746542929\n    observableSet: ObservableSet<V> | Set<V>,\n    listener: (change: ISetDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    listener: (change: IMapDidChange<K, V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    listener: (change: IValueDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(\n    object: Object,\n    listener: (change: IObjectDidChange) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T, K extends keyof T>(\n    object: T,\n    property: K,\n    listener: (change: IValueDidChange<T[K]>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(thing, propOrCb?, cbOrFire?, fireImmediately?): Lambda {\n    if (isFunction(cbOrFire)) {\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately)\n    } else {\n        return observeObservable(thing, propOrCb, cbOrFire)\n    }\n}\n\nfunction observeObservable(thing, listener, fireImmediately: boolean) {\n    return getAdministration(thing).observe_(listener, fireImmediately)\n}\n\nfunction observeObservableProperty(thing, property, listener, fireImmediately: boolean) {\n    return getAdministration(thing, property).observe_(listener, fireImmediately)\n}\n", "import {\n    isObservable,\n    isObservableArray,\n    isObservableValue,\n    isObservableMap,\n    isObservableSet,\n    isComputedValue,\n    die,\n    apiOwnKeys,\n    objectPrototype\n} from \"../internal\"\n\nfunction cache<K, V>(map: Map<any, any>, key: K, value: V): V {\n    map.set(key, value)\n    return value\n}\n\nfunction toJSHelper(source, __alreadySeen: Map<any, any>) {\n    if (\n        source == null ||\n        typeof source !== \"object\" ||\n        source instanceof Date ||\n        !isObservable(source)\n    ) {\n        return source\n    }\n\n    if (isObservableValue(source) || isComputedValue(source)) {\n        return toJSHelper(source.get(), __alreadySeen)\n    }\n    if (__alreadySeen.has(source)) {\n        return __alreadySeen.get(source)\n    }\n    if (isObservableArray(source)) {\n        const res = cache(__alreadySeen, source, new Array(source.length))\n        source.forEach((value, idx) => {\n            res[idx] = toJSHelper(value, __alreadySeen)\n        })\n        return res\n    }\n    if (isObservableSet(source)) {\n        const res = cache(__alreadySeen, source, new Set())\n        source.forEach(value => {\n            res.add(toJSHelper(value, __alreadySeen))\n        })\n        return res\n    }\n    if (isObservableMap(source)) {\n        const res = cache(__alreadySeen, source, new Map())\n        source.forEach((value, key) => {\n            res.set(key, toJSHelper(value, __alreadySeen))\n        })\n        return res\n    } else {\n        // must be observable object\n        const res = cache(__alreadySeen, source, {})\n        apiOwnKeys(source).forEach((key: any) => {\n            if (objectPrototype.propertyIsEnumerable.call(source, key)) {\n                res[key] = toJSHelper(source[key], __alreadySeen)\n            }\n        })\n        return res\n    }\n}\n\n/**\n * Recursively converts an observable to it's non-observable native counterpart.\n * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.\n * Computed and other non-enumerable properties are completely ignored.\n * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.\n */\nexport function toJS<T>(source: T, options?: any): T {\n    if (__DEV__ && options) {\n        die(\"toJS no longer supports options\")\n    }\n    return toJSHelper(source, new Map())\n}\n", "import { TraceMode, die, getAtom, globalState } from \"../internal\"\n\nexport function trace(thing?: any, prop?: string, enterBreakPoint?: boolean): void\nexport function trace(thing?: any, enterBreakPoint?: boolean): void\nexport function trace(enterBreakPoint?: boolean): void\nexport function trace(...args: any[]): void {\n    if (!__DEV__) {\n        return\n    }\n    let enterBreakPoint = false\n    if (typeof args[args.length - 1] === \"boolean\") {\n        enterBreakPoint = args.pop()\n    }\n    const derivation = getAtomFromArgs(args)\n    if (!derivation) {\n        return die(\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`\n        )\n    }\n    if (derivation.isTracing_ === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name_}' tracing enabled`)\n    }\n    derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG\n}\n\nfunction getAtomFromArgs(args): any {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation\n        case 1:\n            return getAtom(args[0])\n        case 2:\n            return getAtom(args[0], args[1])\n    }\n}\n", "import { endBatch, startBatch } from \"../internal\"\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nexport function transaction<T>(action: () => T, thisArg = undefined): T {\n    startBatch()\n    try {\n        return action.apply(thisArg)\n    } finally {\n        endBatch()\n    }\n}\n", "import {\n    $mobx,\n    IReactionDisposer,\n    Lambda,\n    autorun,\n    createAction,\n    getNextId,\n    die,\n    allowStateChanges,\n    GenericAbortSignal\n} from \"../internal\"\n\nexport interface IWhenOptions {\n    name?: string\n    timeout?: number\n    onError?: (error: any) => void\n    signal?: GenericAbortSignal\n}\n\nexport function when(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void }\nexport function when(\n    predicate: () => boolean,\n    effect: Lambda,\n    opts?: IWhenOptions\n): IReactionDisposer\nexport function when(predicate: any, arg1?: any, arg2?: any): any {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\")) {\n        return whenPromise(predicate, arg1)\n    }\n    return _when(predicate, arg1, arg2 || {})\n}\n\nfunction _when(predicate: () => boolean, effect: Lambda, opts: IWhenOptions): IReactionDisposer {\n    let timeoutHandle: any\n    if (typeof opts.timeout === \"number\") {\n        const error = new Error(\"WHEN_TIMEOUT\")\n        timeoutHandle = setTimeout(() => {\n            if (!disposer[$mobx].isDisposed_) {\n                disposer()\n                if (opts.onError) {\n                    opts.onError(error)\n                } else {\n                    throw error\n                }\n            }\n        }, opts.timeout)\n    }\n\n    opts.name = __DEV__ ? opts.name || \"When@\" + getNextId() : \"When\"\n    const effectAction = createAction(\n        __DEV__ ? opts.name + \"-effect\" : \"When-effect\",\n        effect as Function\n    )\n    // eslint-disable-next-line\n    var disposer = autorun(r => {\n        // predicate should not change state\n        let cond = allowStateChanges(false, predicate)\n        if (cond) {\n            r.dispose()\n            if (timeoutHandle) {\n                clearTimeout(timeoutHandle)\n            }\n            effectAction()\n        }\n    }, opts)\n    return disposer\n}\n\nfunction whenPromise(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void } {\n    if (__DEV__ && opts && opts.onError) {\n        return die(`the options 'onError' and 'promise' cannot be combined`)\n    }\n    if (opts?.signal?.aborted) {\n        return Object.assign(Promise.reject(new Error(\"WHEN_ABORTED\")), { cancel: () => null })\n    }\n    let cancel\n    let abort\n    const res = new Promise((resolve, reject) => {\n        let disposer = _when(predicate, resolve as Lambda, { ...opts, onError: reject })\n        cancel = () => {\n            disposer()\n            reject(new Error(\"WHEN_CANCELLED\"))\n        }\n        abort = () => {\n            disposer()\n            reject(new Error(\"WHEN_ABORTED\"))\n        }\n        opts?.signal?.addEventListener?.(\"abort\", abort)\n    }).finally(() => opts?.signal?.removeEventListener?.(\"abort\", abort))\n    ;(res as any).cancel = cancel\n    return res as any\n}\n", "import {\n    $mobx,\n    IIsObservableObject,\n    ObservableObjectAdministration,\n    warnAboutProxyRequirement,\n    assertProxies,\n    die,\n    isStringish,\n    globalState,\n    CreateObservableOptions,\n    asObservableObject\n} from \"../internal\"\n\nfunction getAdm(target): ObservableObjectAdministration {\n    return target[$mobx]\n}\n\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps: ProxyHandler<any> = {\n    has(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).has_(name)\n    },\n    get(target: IIsObservableObject, name: PropertyKey): any {\n        return getAdm(target).get_(name)\n    },\n    set(target: IIsObservableObject, name: PropertyKey, value: any): boolean {\n        if (!isStringish(name)) {\n            return false\n        }\n        if (__DEV__ && !getAdm(target).values_.has(name)) {\n            warnAboutProxyRequirement(\n                \"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).set_(name, value, true) ?? true\n    },\n    deleteProperty(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"delete properties from an observable object. Use 'remove' from 'mobx' instead.\"\n            )\n        }\n        if (!isStringish(name)) {\n            return false\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).delete_(name, true) ?? true\n    },\n    defineProperty(\n        target: IIsObservableObject,\n        name: PropertyKey,\n        descriptor: PropertyDescriptor\n    ): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).defineProperty_(name, descriptor) ?? true\n    },\n    ownKeys(target: IIsObservableObject): ArrayLike<string | symbol> {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).ownKeys_()\n    },\n    preventExtensions(target) {\n        die(13)\n    }\n}\n\nexport function asDynamicObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    assertProxies()\n    target = asObservableObject(target, options)\n    return (target[$mobx].proxy_ ??= new Proxy(target, objectProxyTraps))\n}\n", "import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) {\n            interceptors.splice(idx, 1)\n        }\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) {\n                die(14)\n            }\n            if (!change) {\n                break\n            }\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n", "import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) {\n            listeners.splice(idx, 1)\n        }\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) {\n        return\n    }\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n", "import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol,\n    initObservable\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\ntype MakeObservableOptions = Omit<CreateObservableOptions, \"proxy\">\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: MakeObservableOptions\n): T {\n    initObservable(() => {\n        const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    })\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: MakeObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        }\n        if (isObservableObject(target)) {\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n        }\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    initObservable(() => {\n        const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n        // Optimization: cache keys on proto\n        // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n        if (!target[keysSymbol]) {\n            const proto = Object.getPrototypeOf(target)\n            const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n            keys.delete(\"constructor\")\n            keys.delete($mobx)\n            addHiddenProp(proto, keysSymbol, keys)\n        }\n\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    })\n\n    return target\n}\n", "import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState,\n    initObservable\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) {\n            return adm\n        }\n        if (name === \"length\") {\n            return adm.getArrayLength_()\n        }\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable\n{\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0) {\n            return values.map(this.dehancer) as any\n        }\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n            die(\"Out of range: \" + newLength)\n        }\n        let currentLength = this.values_.length\n        if (newLength === currentLength) {\n            return\n        } else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else {\n            this.spliceWithArray_(newLength, currentLength - newLength)\n        }\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) {\n            die(16)\n        }\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) {\n            reserveArrayBuffer(oldLength + delta + 1)\n        }\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) {\n            index = 0\n        } else if (index > length) {\n            index = length\n        } else if (index < 0) {\n            index = Math.max(0, length + index)\n        }\n\n        if (arguments.length === 1) {\n            deleteCount = length - index\n        } else if (deleteCount === undefined || deleteCount === null) {\n            deleteCount = 0\n        } else {\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n        }\n\n        if (newItems === undefined) {\n            newItems = EMPTY_ARRAY\n        }\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) {\n                return EMPTY_ARRAY\n            }\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0) {\n            this.notifyArraySplice_(index, newItems, res)\n        }\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            // The items removed by the splice\n            const res = this.values_.slice(index, index + deleteCount)\n            // The items that that should remain at the end of the array\n            let oldItems = this.values_.slice(index + deleteCount)\n            // New length is the previous length + addition count - deletion count\n            this.values_.length += newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) {\n                this.values_[index + i] = newItems[i]\n            }\n            for (let i = 0; i < oldItems.length; i++) {\n                this.values_[index + newItems.length + i] = oldItems[i]\n            }\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get_(index: number): any | undefined {\n        if (this.legacyMode_ && index >= this.values_.length) {\n            console.warn(\n                __DEV__\n                    ? `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n                    : `[mobx] Out of bounds read: ${index}`\n            )\n            return undefined\n        }\n        this.atom_.reportObserved()\n        return this.dehanceValue_(this.values_[index])\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (this.legacyMode_ && index > values.length) {\n            // out of bounds\n            die(17, index, values.length)\n        }\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) {\n                    return\n                }\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else {\n            // For out of bound index, we don't create an actual sparse array,\n            // but rather fill the holes with undefined (same as setArrayLength_).\n            // This could be considered a bug.\n            const newItems = new Array(index + 1 - values.length)\n            for (let i = 0; i < newItems.length - 1; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            newItems[newItems.length - 1] = newValue\n            this.spliceWithArray_(values.length, 0, newItems)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    return initObservable(() => {\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n        addHiddenFinalProp(adm.values_, $mobx, adm)\n        const proxy = new Proxy(adm.values_, arrayTraps) as any\n        adm.proxy_ = proxy\n        if (initialValues && initialValues.length) {\n            adm.spliceWithArray_(0, 0, initialValues)\n        }\n        return proxy\n    })\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"at\", simpleFunc)\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\naddArrayExtension(\"toSorted\", simpleFunc)\naddArrayExtension(\"toSpliced\", simpleFunc)\naddArrayExtension(\"with\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"findLast\", mapLikeFunc)\naddArrayExtension(\"findLastIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\naddArrayExtension(\"toReversed\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n", "import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom,\n    PureSpyEvent,\n    initObservable\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IReadonlyMapEntry<K = any, V = any> = readonly [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\nexport type IReadonlyMapEntries<K = any, V = any> = IReadonlyMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IReadonlyMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable\n{\n    [$mobx] = ObservableMapMarker\n    data_!: Map<K, ObservableValue<V>>\n    hasMap_!: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_!: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        initObservable(() => {\n            this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n            this.data_ = new Map()\n            this.hasMap_ = new Map()\n            if (initialData) {\n                this.merge(initialData)\n            }\n        })\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) {\n            return this.has_(key)\n        }\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) {\n                return this\n            }\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            observable.setNewValue_(newValue as V)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change! as PureSpyEvent)\n        } // TODO fix type\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) {\n            return this.dehanceValue_(this.data_.get(key)!.get())\n        }\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) {\n            callback.call(thisArg, value, key, this)\n        }\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other?: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other)) {\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set(key as K, (other as IKeyValueMap)[key])\n                )\n            } else if (Array.isArray(other)) {\n                other.forEach(([key, value]) => this.set(key, value))\n            } else if (isES6Map(other)) {\n                if (other.constructor !== Map) {\n                    die(19, other)\n                }\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) {\n                die(20, other)\n            }\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) {\n                    this.delete(key)\n                }\n            })\n        })\n    }\n\n    replace(values: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n", "import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction,\n    initObservable\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    atom_!: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        initObservable(() => {\n            this.atom_ = createAtom(this.name_)\n            if (initialData) {\n                this.replace(initialData)\n            }\n        })\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) {\n                    this.delete(value)\n                }\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) {\n                return this\n            }\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n        }\n\n        return this\n    }\n\n    delete(value: T) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    has(value: T) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n", "import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult,\n    checkIfStateModificationsAreAllowed\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable\n{\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) {\n                return null\n            }\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) {\n                    return\n                }\n                if (outcome === MakeResult.Break) {\n                    break\n                }\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) {\n                    return null\n                }\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) {\n                    return null\n                }\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) {\n                    return null\n                }\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) {\n                return null\n            }\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportStart(change!)\n                }\n                if (notify) {\n                    notifyListeners(this, change)\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportEnd()\n                }\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        }\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): ArrayLike<string | symbol> {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target)) {\n        die(\"Cannot make the designated object observable; it is not extensible\")\n    }\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overridden by subclass.`\n        )\n    }\n}\n", "import {\n    getNextId,\n    addHiddenFinalProp,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty,\n    initObservable\n} from \"../internal\"\n\n// Bug in safari 9.* (or iOS 9 safari mobile). See #364\nconst ENTRY_0 = createArrayEntryDescriptor(0)\n\nconst safariPrototypeSetterInheritanceBug = (() => {\n    let v = false\n    const p = {}\n    Object.defineProperty(p, \"0\", {\n        set: () => {\n            v = true\n        }\n    })\n    Object.create(p)[\"0\"] = 1\n    return v === false\n})()\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nexport class LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n        initObservable(() => {\n            const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n            adm.proxy_ = this as any\n            addHiddenFinalProp(this, $mobx, adm)\n\n            if (initialValues && initialValues.length) {\n                // @ts-ignore\n                this.spliceWithArray(0, 0, initialValues)\n            }\n\n            if (safariPrototypeSetterInheritanceBug) {\n                // Seems that Safari won't use numeric prototype setter untill any * numeric property is\n                // defined on the instance. After that it works fine, even if this property is deleted.\n                Object.defineProperty(this, \"0\", ENTRY_0)\n            }\n        })\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") {\n        addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n    }\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n            createArrayBufferItem(index)\n        }\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n", "import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction,\n    allowStateChangesStart,\n    untrackedStart,\n    allowStateChangesEnd,\n    untrackedEnd,\n    startBatch,\n    endBatch\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) {\n                die(23)\n            }\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return thing.atom_\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) {\n                return thing.keysAtom_\n            }\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) {\n                die(25, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (property && !thing[$mobx]) {\n            thing[property]\n        } // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) {\n                return die(26)\n            }\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) {\n                die(27, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) {\n        die(29)\n    }\n    if (property !== undefined) {\n        return getAdministration(getAtom(thing, property))\n    }\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n        return thing\n    }\n    if (isObservableMap(thing) || isObservableSet(thing)) {\n        return thing\n    }\n    if (thing[$mobx]) {\n        return thing[$mobx]\n    }\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n\n/**\n * Helper function for initializing observable structures, it applies:\n * 1. allowStateChanges so we don't violate enforceActions.\n * 2. untracked so we don't accidentaly subscribe to anything observable accessed during init in case the observable is created inside derivation.\n * 3. batch to avoid state version updates\n */\nexport function initObservable<T>(cb: () => T): T {\n    const derivation = untrackedStart()\n    const allowStateChanges = allowStateChangesStart(true)\n    startBatch()\n    try {\n        return cb()\n    } finally {\n        endBatch()\n        allowStateChangesEnd(allowStateChanges)\n        untrackedEnd(derivation)\n    }\n}\n", "import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) {\n        return a !== 0 || 1 / a === 1 / b\n    }\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) {\n        return false\n    }\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) {\n        return b !== b\n    }\n    // Exhaust primitive checks\n    const type = typeof a\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n        return false\n    }\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) {\n        return false\n    }\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) {\n                return +b !== +b\n            }\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") {\n            return false\n        }\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) {\n            return bStack[length] === b\n        }\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) {\n            return false\n        }\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n                return false\n            }\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) {\n            return false\n        }\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n                return false\n            }\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) {\n        return a.slice()\n    }\n    if (isES6Map(a) || isObservableMap(a)) {\n        return Array.from(a.entries())\n    }\n    if (isES6Set(a) || isObservableSet(a)) {\n        return Array.from(a.entries())\n    }\n    return a\n}\n", "export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n", "import { ObservableObjectAdministration, isFunction } from \"../internal\"\n\nexport const enum MakeResult {\n    Cancel,\n    Break,\n    Continue\n}\n\nexport type Annotation = {\n    annotationType_: string\n    make_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        source: object\n    ): MakeResult\n    extend_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean\n    ): boolean | null\n    decorate_20223_(value: any, context: DecoratorContext)\n    options_?: any\n}\n\nexport type AnnotationMapEntry =\n    | Annotation\n    | true /* follow the default decorator, usually deep */\n    | false /* don't decorate this property */\n\n// AdditionalFields can be used to declare additional keys that can be used, for example to be able to\n// declare annotations for private/ protected members, see #2339\nexport type AnnotationsMap<T, AdditionalFields extends PropertyKey> = {\n    [P in Exclude<keyof T, \"toString\">]?: AnnotationMapEntry\n} & Record<AdditionalFields, AnnotationMapEntry>\n\nexport function isAnnotation(thing: any) {\n    return (\n        // Can be function\n        thing instanceof Object &&\n        typeof thing.annotationType_ === \"string\" &&\n        isFunction(thing.make_) &&\n        isFunction(thing.extend_)\n    )\n}\n\nexport function isAnnotationMapEntry(thing: any) {\n    return typeof thing === \"boolean\" || isAnnotation(thing)\n}\n", "/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get a global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n", "// (c) 2023 384 (tm)\n\nconst b64lookup: Array<string> = [], urlLookup: Array<string> = [], revLookup: Array<number> = []\nconst CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nconst CODE_B64 = CODE + '+/', CODE_URL = CODE + '-_', PAD = '='\nfor (let i = 0, len = CODE_B64.length; i < len; ++i) {\n    b64lookup[i] = CODE_B64[i]\n    urlLookup[i] = CODE_URL[i]\n    revLookup[CODE_B64.charCodeAt(i)] = i\n}\nrevLookup['-'.charCodeAt(0)] = 62 // minus\nrevLookup['_'.charCodeAt(0)] = 63 // underscore\n\nfunction getLens(b64: string) {\n    const len = b64.length\n    let validLen = b64.indexOf(PAD)\n    if (validLen === -1) validLen = len\n    const placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)\n    return [validLen, placeHoldersLen]\n}\n\nexport function base64ToArrayBuffer(str: string) {\n    switch (str.length % 4) {\n        case 2: str += '=='; break;\n        case 3: str += '='; break;\n    }\n    const [validLen, placeHoldersLen] = getLens(str);\n    const arr = new Uint8Array(((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen);\n    let tmp = 0, curByte = 0, i = 0;\n    const len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    for (i = 0; i < len; i += 4) {\n        const r0 = revLookup[str.charCodeAt(i)];\n        const r1 = revLookup[str.charCodeAt(i + 1)];\n        const r2 = revLookup[str.charCodeAt(i + 2)];\n        const r3 = revLookup[str.charCodeAt(i + 3)];\n        tmp = (r0 << 18) | (r1 << 12) | (r2 << 6) | (r3);\n        arr[curByte++] = (tmp >> 16) & 0xff;\n        arr[curByte++] = (tmp >> 8) & 0xff;\n        arr[curByte++] = (tmp) & 0xff;\n    }\n    if (placeHoldersLen === 2) {\n        const r0 = revLookup[str.charCodeAt(i)];\n        const r1 = revLookup[str.charCodeAt(i + 1)];\n        tmp = (r0 << 2) | (r1 >> 4);\n        arr[curByte++] = tmp & 0xff;\n    }\n    if (placeHoldersLen === 1) {\n        const r0 = revLookup[str.charCodeAt(i)];\n        const r1 = revLookup[str.charCodeAt(i + 1)];\n        const r2 = revLookup[str.charCodeAt(i + 2)];\n        tmp = (r0 << 10) | (r1 << 4) | (r2 >> 2);\n        arr[curByte++] = (tmp >> 8) & 0xff;\n        arr[curByte++] = tmp & 0xff;\n    }\n    return arr;\n}\n\nconst MAX_CHUNK_LENGTH = 16383 // must be multiple of 3\n\nfunction tripletToBase64(lookup: string[], num: number) {\n    return (\n        lookup[num >> 18 & 0x3f] +\n        lookup[num >> 12 & 0x3f] +\n        lookup[num >> 6 & 0x3f] +\n        lookup[num & 0x3f]\n    );\n}\n\nfunction encodeChunk(lookup: string[], view: DataView, start: number, end: number) {\n    let tmp: number;\n    const output = new Array((end - start) / 3);\n    for (let i = start, j = 0; i < end; i += 3, j++) {\n        tmp =\n            ((view.getUint8(i) << 16) & 0xff0000) +\n            ((view.getUint8(i + 1) << 8) & 0x00ff00) +\n            (view.getUint8(i + 2) & 0x0000ff);\n        output[j] = tripletToBase64(lookup, tmp);\n    }\n    return output.join('');\n}\n\nconst bs2dv = (bs: BufferSource) => bs instanceof ArrayBuffer\n    ? new DataView(bs)\n    : new DataView(bs.buffer, bs.byteOffset, bs.byteLength)\n\nexport function arrayBufferToBase64(buffer: ArrayBuffer | Uint8Array | null, variant: 'b64' | 'url' = 'url'): string {\n    if (buffer == null) throw new Error('arrayBufferToBase64() -> null paramater')\n    const view = bs2dv(buffer)\n    const len = view.byteLength\n    const extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    const len2 = len - extraBytes\n    const parts = new Array(\n        Math.floor(len2 / MAX_CHUNK_LENGTH) + Math.sign(extraBytes)\n    )\n    const lookup = variant == 'url' ? urlLookup : b64lookup // defaults to url-safe except when overriden\n    const pad = ''\n    let j = 0\n    for (let i = 0; i < len2; i += MAX_CHUNK_LENGTH) {\n        parts[j++] = encodeChunk(\n            lookup,\n            view,\n            i,\n            (i + MAX_CHUNK_LENGTH) > len2 ? len2 : (i + MAX_CHUNK_LENGTH),\n        )\n    }\n    if (extraBytes === 1) {\n        const tmp = view.getUint8(len - 1);\n        parts[j] = (\n            lookup[tmp >> 2] +\n            lookup[(tmp << 4) & 0x3f] +\n            pad + pad\n        )\n    } else if (extraBytes === 2) {\n        const tmp = (view.getUint8(len - 2) << 8) + view.getUint8(len - 1)\n        parts[j] = (\n            lookup[tmp >> 10] +\n            lookup[(tmp >> 4) & 0x3f] +\n            lookup[(tmp << 2) & 0x3f] +\n            pad\n        );\n    }\n    return parts.join('')\n}", "/*\n   Copyright (C) 2020-2023 Magnusson Institute, All Rights Reserved\n\n   \"Snackabra\" is a registered trademark\n\n   Snackabra SDK - Server\n   See https://snackabra.io for more information.\n\n   This program is free software: you can redistribute it and/or\n   modify it under the terms of the GNU Affero General Public License\n   as published by the Free Software Foundation, either version 3 of\n   the License, or (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful, but\n   WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Affero General Public License for more details.\n\n   You should have received a copy of the GNU Affero General Public\n   License along with this program.  If not, see www.gnu.org/licenses/\n\n*/\n\n/*\n  TODO\n  - add \"server\" to the channel descriptor\n*/\n\n// update package.json too; we flag 'pre' if it's a pre-release of \n// a version, e.g. if it's not published to npm etc yet\n// eg: const version = '1.1.25 (pre) build 02'\n// will be labeled '1.1.25' upon publishing\n\n// working on 2.0.0\nconst version = '2.0.0-alpha.5 (build 07)'\n\n/******************************************************************************************************/\n//#region Interfaces - Types\n\n// minimum when creating a new channel\nconst NEW_CHANNEL_MINIMUM_BUDGET = 32 * 1024 * 1024; // 8 MB\n\n\nexport interface SBServer {\n  /**\n   * The channel server is the server that handles channel creation,\n   * channel deletion, and channel access. It is also the server that\n   * handles channel messages.\n   */\n  channel_server: string,\n  /**\n   * The channel websocket is the websocket that handles channel\n   * messages. It is the same as the channel server, but with a\n   * different protocol.\n   */\n  channel_ws: string,\n  /**\n   * The storage server is the server that all \"shard\" (blob) storage\n   */\n  storage_server: string,\n  /**\n   * \"shard\" server is a more modern version of the storage server,\n   * generally acting as a caching and/or mirroring layer. It proxies\n   * any new storage to one or more storage servers, and handles\n   * it's own caching behavior. Generally, this will be the fastest\n   * interface, in particular for reading.\n   */\n  shard_server?: string\n}\n\n/**\n * SBChannelHandle\n *\n * Complete descriptor of a channel. 'key' is stringified 'jwk' key.\n * The key is always private. If it matches the channelId, then it's\n * an 'owner' key.\n */\nexport interface SBChannelHandle {\n  channelId: SBChannelId,\n  key: JsonWebKey,\n  server?: string\n}\n\ninterface WSProtocolOptions {\n  version?: number,\n  url: string, // not the user (client) url, but where the socket is\n  websocket?: WebSocket, // will have a value if we've connected\n  onOpen?: null | CallableFunction,\n  ready: boolean,\n  // onMessage?: null | CallableFunction,\n  onClose?: null | CallableFunction,\n  onError?: null | CallableFunction,\n  timeout?: number,\n  closed: boolean,\n  init?: { name: string },\n  // identity?: Identity,\n  // keys?: ChannelKeys,\n  // motd?: string,\n  // locked?: boolean,\n}\n\n// for future use / tighter typing\n// type StorableDataType = string | number | bigint | boolean | symbol | object\n\n// TODO: there are many uses of 'Dictionary<any>' that should be tightened up\ninterface Dictionary<T> {\n  [index: string]: T;\n}\n\n// These are 384 bit identifiers encoded as 48x ~b64 characters\n// (see SB384.hash for details)\nexport type SB384Hash = string\nexport type SBChannelId = SB384Hash\nexport type SBUserId = SB384Hash\n\ninterface ChannelData {\n  roomId?: SBChannelId\n  channelId?: SBChannelId;\n  ownerKey: string;\n  encryptionKey: string;\n  signKey: string;\n  motherChannel?: SBChannelId;\n  storageToken?: string; // used internally for storage budget authentication\n  SERVER_SECRET?: string; // used internally for storage budget authentication (dev or local servers only)\n  size?: number; // used internally\n}\n\ninterface ImageMetaData {\n  imgObjVersion?: SBObjectHandleVersions, // if empty is type '1', new objects need to be '2'\n  imageId?: string,\n  imageKey?: string,\n  previewId?: string,\n  previewKey?: string,\n  // nonce and salt not needed, but if it's there, we do extra checks\n  previewNonce?: string,\n  previewSalt?: string\n}\n\n/**\n   for example the incoming message will look like this (after decryption)\n\n   @example\n  ```ts\n    {\n      \"encrypted\":false,\n      \"contents\":\"Hello from test04d!\",\n      \"sign\":\"u7zAM-1fNLZjmuayOkwWvXTBGqMEimOuzp1DJGX4ECg\",\n      \"image\":\"\",\n      \"imageMetaData\":{},\n      \"sender_pubKey\":\n          {\n            \"crv\":\"P-384\",\"ext\":true,\"key_ops\":[],\"kty\":\"EC\",\n            \"x\":\"edqHd4aUn7dGsuDMQxtvzuw-Q2N7l77HBW81KvWj9qtzU7ab-sFHUBqogg2PKihj\",\n            \"y\":\"Oqp27bXL4RUcAHpWUEFHZdyEuhTo8_8oyTsAKJDk1g_NQOA0FR5Sy_8ViTTWS9wT\"\n          },\n      \"sender_username\":\"TestBot\",\n      \"image_sign\":\"3O0AYKthtWWYUX3AWDmdU4kTR49UyNyaA937CfKtcQw\",\n      \"imageMetadata_sign\":\"4LmewpsH6TcRhHYQLivd4Ce87SI1AJIaezhJB5sdD7M\"\n    }\n    ```\n\n  */\nexport interface ChannelMessage {\n  type?: ChannelMessageTypes,\n  keys?: ChannelKeyStrings,\n  _id?: string,\n  id?: string,\n  timestamp?: number,\n  timestampPrefix?: string, // '0'/'1' - 42 of them\n  channelID?: SBChannelId, // base64 - 64 chars (512 bits)\n  control?: boolean,\n  encrypted?: boolean,\n  encrypted_contents?: EncryptedContents,\n  contents?: string, // if present means unencrypted\n  text?: string, // backwards compat, same as contents, TODO: should be removed\n  sign?: string,\n  image?: string,\n  image_sign?: string,\n  imageMetaData?: ImageMetaData,\n  imageMetadata_sign?: string,\n  motd?: string,\n  ready?: boolean,\n  roomLocked?: boolean,\n  sender_pubKey?: JsonWebKey,\n  sender_username?: string,\n  system?: boolean,\n  user?: { name: string, _id?: JsonWebKey },\n  verificationToken?: string,\n  replyTo?: JsonWebKey, // used for old design for whispers.  todo: clean up\n  // whisper: if present, it's the unwrapped 1:1 contents\n  whisper?: string,\n  whispered?: boolean,\n  // 'new': intended recipient; means contents are further encrypted\n  //        using key derived from 'sender_pubKey' and our own (private) key;\n  //        jslib will only decode if it's intended for us (that's the only\n  //        way we can decrypt it anyway)\n  sendTo?: SBUserId, // public (hash) of recipient\n}\n\n// interface ChannelAckMessage {\n//   type: 'ack',\n//   _id: string,\n// }\n\n/**\n * ChannelKeys\n * \n * All keys relevant for a given channel, in decoded (CryptoKey) form.\n * They are sent over channels as a message (see ChannelKeysMessage);\n * in export/import code they may be in the intermediary form of\n * strings (see ChannelKeyStrings).\n * \n *\n * @example\n *\n * { \"ready\": true,\n *    \"keys\": {\n *            \"ownerKey\": \"{\\\"crv\\\":\\\"P-384\\\",\\\"ext\\\":true,\\\"key_ops\\\":[],\\\"kty\\\":\\\"EC\\\",\n *                        \\\"x\\\":\\\"9s17B4i0Cuf_w9XN_uAq2DFePOr6S3sMFMA95KjLN8akBUWEhPAcuMEMwNUlrrkN\\\",\n *                        \\\"y\\\":\\\"6dAtcyMbtsO5ufKvlhxRsvjTmkABGlTYG1BrEjTpwrAgtmn6k25GR7akklz9klBr\\\"}\",\n *            \"guestKey\": \"{\\\"crv\\\":\\\"P-384\\\",\\\"ext\\\":true,\\\"key_ops\\\":[],\\\"kty\\\":\\\"EC\\\",\n *                         \\\"x\\\":\\\"Lx0eJcbNuyEfHDobWaZqgy9UO7ppxVIsEpEtvbzkAlIjySh9lY2AvgnACREO6QXD\\\",\n *                         \\\"y\\\":\\\"zEHPgpsl4jge_Q-K6ekuzi2bQOybnaPT1MozCFQJnXEePBX8emkHriOiwl6P8BAS\\\"}\",\n *            \"encryptionKey\": \"{\\\"alg\\\":\\\"A256GCM\\\",\\\"ext\\\":true,\n *                             \\\"k\\\":\\\"F0sQTTLXDhuvvmgGQLzMoeHPD-SJlFyhfOD-cqejEOU\\\",\n *                             \\\"key_ops\\\":[\\\"encrypt\\\",\\\"decrypt\\\"],\\\"kty\\\":\\\"oct\\\"}\",\n *            \"signKey\": \"{\\\"crv\\\":\\\"P-384\\\",\n *                        \\\"d\\\":\\\"KCJHDZ34XgVFsS9-sU09HFzXZhnGCvnDgJ5a8GTSfjuJQaq-1N2acvchPRhknk8B\\\",\n *                        \\\"ext\\\":true,\\\"key_ops\\\":[\\\"deriveKey\\\"],\\\"kty\\\":\\\"EC\\\",\n *                        \\\"x\\\":\\\"rdsyBle0DD1hvp2OE2mINyyI87Cyg7FS3tCQUIeVkfPiNOACtFxi6iP8oeYt-Dge\\\",\n *                        \\\"y\\\":\\\"qW9VP72uf9rgUU117G7AfTkCMncJbT5scIaIRwBXfqET6FYcq20fwSP7R911J2_t\\\"}\"\n *             },\n * \"motd\": \"\",\n * \"roomLocked\": false}\n */\nexport interface ChannelKeys {\n  // these come from the channel server;\n  ownerKey: CryptoKey,\n  ownerPubKeyX: string, // the 'x' part of ownerKey, used as channelID / name\n  guestKey?: CryptoKey,\n  encryptionKey: CryptoKey,\n  signKey: CryptoKey,\n  lockedKey?: JsonWebKey,\n  // derived from the above and used for signing messages we send:\n  // channelSignKey: CryptoKey, // moved to ChannelApi\n  publicSignKey: CryptoKey,\n  // our identity in case we want easy access to that:\n  // update: not generic enough, servers don't have this\n  privateKey?: CryptoKey\n}\n\n// // Roughly what it looks like on the wire from a client:\n// {\n//   \"roomId\": \"DL5hgKneBl_...tMLCv4fEyWnxE01O\",\n//   \"ownerKey\": \"{\\\"crv\\\":\\\"P-384\\\",\\\"ext\\\":true,\\\"key_ops\\\":[],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"A0rUue9TlSgK...Nx54d3\\\",\\\"y\\\":\\\"uGfIqc....fP1tF66jL\\\"}\",\n//   \"encryptionKey\": \"{\\\"alg\\\":\\\"A256GCM\\\",\\\"ext\\\":true,\\\"k\\\":\\\"62mgVb...Shmc\\\",\\\"key_ops\\\":[\\\"encrypt\\\",\\\"decrypt\\\"],\\\"kty\\\":\\\"oct\\\"}\",\n//   \"signKey\": \"{\\\"crv\\\":\\\"P-384\\\",\\\"d\\\":\\\"Vw2HwY...oYl6qJ\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"deriveKey\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"6lz3m...v9J2IjCj8\\\",\\\"y\\\":\\\"M6Ta8...ncnH1G\\\"}\",\n//   \"SERVER_SECRET\": \"...\"\n// }\n\ninterface ChannelKeyStrings {\n  encryptionKey: string,\n  guestKey?: string,\n  ownerKey: string,\n  signKey: string,\n  lockedKey?: string,\n  error?: string,\n}\n\ninterface ChannelKeysMessage {\n  type: 'channelKeys',\n  ready: boolean,\n  keys: ChannelKeyStrings,\n  motd: string,\n  roomLocked: boolean,\n}\n\nexport interface ChannelAdminData {\n  room_id?: SBChannelId,\n  join_requests: Array<JsonWebKey>,\n  capacity: number,\n}\n\n/** Encryptedcontents\n\n    SB standard wrapping encrypted messages.\n\n    Encryption is done with AES-GCM, 16 bytes of salt, The\n    ``contents`` are url-safe base64, same thing with the nonce (iv),\n    depending on if it's internal or over wire.\n */\nexport interface EncryptedContents {\n  content: string | ArrayBuffer,\n  iv: string | Uint8Array\n  // salt: string | Uint8Array,\n}\n\n/**\n * Same as EncryptedContents interface, but binary view enforced\n */\nexport interface EncryptedContentsBin {\n  content: ArrayBuffer,\n  iv: Uint8Array,\n}\n\n// set by creation of Snackabra object\nvar DBG = false; // this should not be checked in as 'true'\nvar DBG2 = false; // internal detailed debugging\n\n/**\n * This is the standard (most common) channel message. It matches\n * directly to a 'chat' message. But the contents can be anything.\n */\ninterface ChannelEncryptedMessage {\n  type?: 'encrypted',\n\n  // base64 - 64 chars (512 bits), e.g:\n  // 'wDUMRbcfFhdmByuwMhFyR46MRlcZh-6gKRUhSPkWEQLSRUPE8_jqixV3VQevTDBy'\n  channelID?: SBChannelId,\n\n  // fourty-two (42) 0s and 1s as string, e.g.:\n  // '011000001110001011010110101010000100000110'\n  timestampPrefix?: string,\n\n  _id: string, // backwards compatibility (channelID + timestampPrefix)\n\n  encrypted_contents?: EncryptedContentsBin, // enforcing binary view internally\n\n  contents?: string,\n\n}\n\nexport type ChannelMessageTypes = 'ack' | 'keys' | 'invalid' | 'ready' | 'encrypted'\n\n/**\n * SBMessageContents\n * \n * SBMessage contents are either a string, or SBMessageContents;\n * the general case is the latter, which can have a message text,\n * and an image. The image should be in a format such that the\n * thumbnail is embedded ('image'), and the full image is referenced\n * by 'imageId' (full image or document), and optionally 'previewId',\n * which is a smaller version of the image (or whatever is in 'image'),\n * with the presumption that apps can chose an intermediate view\n * of whatever is in 'image'. \n */\ninterface SBMessageContents {\n  contents: string,\n  imgObjVersion?: SBObjectHandleVersions, // if empty is type '1', new objects need to be '2'\n  image: string,\n  imageMetaData?: ImageMetaData,\n  image_sign?: string,\n  imageMetadata_sign?: string,\n  sender_pubKey?: JsonWebKey,\n  sender_username?: string,\n  encrypted: boolean,\n  isVerfied: boolean,\n  sign: string,\n}\n\n\n\n/**\n * SBObjectType\n * \n * SBObjectType is a single character string that indicates the\n * type of object. Currently, the following types are supported:\n * \n * - 'f' : full object (e.g. image, this is the most common)\n * - 'p' : preview object (e.g. thumbnail)\n * - 'b' : block/binary object (e.g. 64KB block)\n * - 't' : test object (for testing purposes)\n * \n * The 't' type is used for testing purposes, and you should\n * not expect it to have any particular SLA or longevity.\n * \n * Note that when you retrieve any object, you must have the\n * matching object type.\n */\nexport type SBObjectType = 'f' | 'p' | 'b' | 't'\nexport type SBObjectHandleVersions = '1' | '2'\nconst currentSBOHVersion: SBObjectHandleVersions = '2'\n\n// TODO: we haven't modularized jslib yet, when we do this\n//       will be superfluous\nexport namespace Interfaces {\n\n  // this exists as both interface and class, but the class\n  // is mostly used internally, and the interface is what\n  // you'll use to communicate with the API\n  export interface SBObjectHandle_base {\n    [SB_OBJECT_HANDLE_SYMBOL]?: boolean,\n    version?: SBObjectHandleVersions,\n    type?: SBObjectType,\n    // and currently you also need to keep track of this,\n    // but you can start sharing / communicating the\n    // object before it's resolved: among other things it\n    // serves as a 'write-through' verification\n    verification?: Promise<string> | string,\n    // you'll need these in case you want to track an object\n    // across future (storage) servers, but as long as you\n    // are within the same SB servers you can request them.\n    iv?: Uint8Array | string,\n    salt?: Uint8Array | string,\n    // the following are optional and not tracked by\n    // shard servers etc, but facilitates app usage\n    fileName?: string, // by convention will be \"PAYLOAD\" if it's a set of objects\n    dateAndTime?: string, // optional: time of shard creation\n    shardServer?: string, // optionally direct a shard to a specific server (especially for reads)\n    fileType?: string, // optional: file type (mime)\n    lastModified?: number, // optional: last modified time (of underlying file, if any)\n    actualSize?: number, // optional: actual size of underlying file, if any\n    savedSize?: number, // optional: size of shard (may be different from actualSize)\n  }\n\n  // for long-term storage you only need these:\n  //   id: string, key: string, // b64 encoding (being deprecated)\n  //   id32?: Base62Encoded, key32?: Base62Encoded, // array32 format of key (new default)\n\n  export interface SBObjectHandle_v1 extends SBObjectHandle_base {\n    version: '1',\n    id: string, // in v1 these are base64 encoded\n    key: string,\n    // some handles were created with version 1 and id32/key32 as well\n    id32?: Base62Encoded,\n    key32?: Base62Encoded,\n  }\n\n  export interface SBObjectHandle_v2 extends SBObjectHandle_base {\n    version: '2',\n    // in v2 these are base62 encoded only\n    id: Base62Encoded,\n    key: Base62Encoded,\n  }\n\n  export type SBObjectHandle = SBObjectHandle_v1 | SBObjectHandle_v2\n}\n\nexport interface SBObjectMetadata {\n  [SB_OBJECT_HANDLE_SYMBOL]: boolean;\n  version: SBObjectHandleVersions;\n  type: SBObjectType;\n  id: Base62Encoded;\n  key: Base62Encoded;\n  paddedBuffer: ArrayBuffer;\n  iv: Uint8Array;\n  salt: Uint8Array;\n}\n\n//#endregion - Interfaces - Types\n\n/******************************************************************************************************/\n//#region - MessageBus class\n\n/**\n * SB simple events (mesage bus) class\n */\nexport class MessageBus {\n  bus: Dictionary<any> = {}\n\n  /**\n   * Safely returns handler for any event\n   */\n  #select(event: string) {\n    return this.bus[event] || (this.bus[event] = []);\n  }\n\n  /**\n   * Subscribe. 'event' is a string, special case '*' means everything\n   *  (in which case the handler is also given the message)\n   */\n  subscribe(event: string, handler: CallableFunction) {\n    this.#select(event).push(handler);\n  }\n\n  /**\n   * Unsubscribe\n   */\n  unsubscribe(event: string, handler: CallableFunction) {\n    let i = -1;\n    if (this.bus[event]) {\n      if ((i = this.bus[event].findLastIndex((e: unknown) => e == handler)) != -1) {\n        this.bus[event].splice(i, 1);\n      } else {\n        console.info(`fyi: asked to remove a handler but it's not there`);\n      }\n    } else {\n      console.info(`fyi: asked to remove a handler but the event is not there`);\n    }\n  }\n\n  /**\n   * Publish\n   */\n  publish(event: string, ...args: unknown[]) {\n    for (const handler of this.#select('*')) {\n      handler(event, ...args);\n    }\n    for (const handler of this.#select(event)) {\n      handler(...args);\n    }\n  }\n}\n\n//#endregion\n\n/******************************************************************************************************/\n//#region - SB internal utility functions\n\n/**\n * SBFetch()\n *\n * A \"safe\" fetch() that over time integrates with SB mesh.\n *\n * @param input - the URL to fetch\n * @param init - the options for the request\n */\nfunction SBFetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response> {\n  return new Promise((resolve, reject) => {\n    try {\n      const url = typeof input === 'string' ? input : input instanceof URL ? input.href : input.url;\n      if (url.includes(\"a32.\")) // for code transitioning, 'a32' prefix should be only internal to jslib\n        reject(`[SBFetch] ERROR: url contains substring 'a32.' (${url})`);\n      fetch(input, init ?? { method: 'GET' })\n        .then((response) => {\n          resolve(response); // we don't check for status here, we'll do that in the caller\n        }).catch((error) => {\n          const msg = `[SBFetch] Error (fetch through a reject, might be normal): ${error}`;\n          console.warn(msg); // not necessarily an error but helps trace up through callee\n          reject(msg);\n        });\n    } catch (e) {\n      const msg = `[SBFetch] Error (fetch exception, might be normal operation): ${e}`;\n      console.warn(msg); // not necessarily an error but helps trace up through callee\n      reject();\n    }\n  });\n}\n\n/** @private */\nfunction WrapError(e: any) {\n  if (e instanceof Error) return e;\n  else return new Error(String(e));\n}\n\n/** @private */\nfunction _sb_exception(loc: string, msg: string) {\n  const m = '<< SB lib error (' + loc + ': ' + msg + ') >>';\n  // for now disabling this to keep node testing less noisy\n  // console.error(m);\n  throw new Error(m);\n}\n\n// internal - general handling of paramaters that might be promises\n// (basically the \"anti\" of resolve, if it's *not* a promise then\n// it becomes one\n/** @private */\n\n// function _sb_resolve(val: any) {\n//   if (val.then) {\n//     // it's already a promise\n//     // console.log('it is a promise')\n//     return val;\n//   } else {\n//     // console.log('it was not a promise')\n//     return new Promise((resolve) => resolve(val));\n//   }\n// }\n\n// internal - handle assertions\n/** @private */\nfunction _sb_assert(val: unknown, msg: string) {\n  if (!(val)) {\n    const m = `<< SB assertion error: ${msg} >>`;\n    // debugger;\n    throw new Error(m);\n  }\n}\n\n// used to create NEW channel\n/** @private */\nasync function newChannelData(keys: JsonWebKey | null): Promise<{ channelData: ChannelData, exportable_privateKey: Dictionary<any> }> {\n  const owner384 = new SB384(keys)\n  await owner384.ready\n  // const ownerKeyPair = await owner384.ready.then((x) => x.keyPair!)\n  // const exportable_privateKey: Dictionary<any> = await crypto.subtle.exportKey('jwk', ownerKeyPair.privateKey);\n  // const exportable_pubKey: Dictionary<any> = await crypto.subtle.exportKey('jwk', ownerKeyPair.publicKey);\n  const exportable_pubKey = owner384.exportable_pubKey\n  const exportable_privateKey = owner384.exportable_privateKey\n  const channelId = owner384.hash\n  const encryptionKey: CryptoKey = await crypto.subtle.generateKey({\n    name: 'AES-GCM',\n    length: 256\n  }, true, ['encrypt', 'decrypt']);\n  const exportable_encryptionKey: Dictionary<any> = await crypto.subtle.exportKey('jwk', encryptionKey);\n  const signKeyPair: CryptoKeyPair = await crypto.subtle.generateKey({\n    name: 'ECDH', namedCurve: 'P-384'\n  }, true, ['deriveKey']);\n  const exportable_signKey: Dictionary<any> = await crypto.subtle.exportKey('jwk', signKeyPair.privateKey);\n  const channelData: ChannelData = {\n    roomId: channelId,\n    ownerKey: JSON.stringify(exportable_pubKey),\n    encryptionKey: JSON.stringify(exportable_encryptionKey),\n    signKey: JSON.stringify(exportable_signKey),\n  };\n  return { channelData: channelData, exportable_privateKey: exportable_privateKey }\n}\n\n//#endregion - SB internal utility functions\n\n/******************************************************************************************************/\n//#region - SBCryptoUtils - crypto and translation stuff used by SBCrypto etc\n\n/**\n * Force EncryptedContents object to binary (interface\n * supports either string or arrays). String contents\n * implies base64 encoding.\n */\nexport function encryptedContentsMakeBinary(o: EncryptedContents): EncryptedContentsBin {\n  try {\n    let t: ArrayBuffer\n    let iv: Uint8Array\n    if (DBG2) {\n      console.log(\"=+=+=+=+ processing content\")\n      console.log(o.content.constructor.name)\n    }\n    if (typeof o.content === 'string') {\n      try {\n        t = base64ToArrayBuffer(decodeURIComponent(o.content))\n      } catch (e) {\n        throw new Error(\"EncryptedContents is string format but not base64 (?)\")\n      }\n    } else {\n      // console.log(structuredClone(o))\n      const ocn = o.content.constructor.name\n      _sb_assert((ocn === 'ArrayBuffer') || (ocn === 'Uint8Array'), 'undetermined content type in EncryptedContents object')\n      t = o.content\n    }\n    if (DBG2) console.log(\"=+=+=+=+ processing nonce\")\n    if (typeof o.iv === 'string') {\n      if (DBG2) { console.log(\"got iv as string:\"); console.log(structuredClone(o.iv)); }\n      iv = base64ToArrayBuffer(decodeURIComponent(o.iv))\n      if (DBG2) { console.log(\"this was turned into array:\"); console.log(structuredClone(iv)) }\n    } else if ((o.iv.constructor.name === 'Uint8Array') || (o.iv.constructor.name === 'ArrayBuffer')) {\n      if (DBG2) { console.log(\"it's an array already\") }\n      iv = new Uint8Array(o.iv)\n    } else {\n      if (DBG2) console.log(\"probably a dictionary\");\n      try {\n        iv = new Uint8Array(Object.values(o.iv))\n      } catch (e: any) {\n        if (DBG) { console.error(\"ERROR: cannot figure out format of iv (nonce), here's the input object:\"); console.error(o.iv); }\n        _sb_assert(false, \"undetermined iv (nonce) type, see console\")\n      }\n    }\n    if (DBG2) { console.log(\"decided on nonce as:\"); console.log(iv!) }\n    _sb_assert(iv!.length == 12, `encryptedContentsMakeBinary(): nonce should be 12 bytes but is not (${iv!.length})`)\n    return { content: t, iv: iv! }\n  } catch (e: any) {\n    console.error('encryptedContentsMakeBinary() failed:')\n    console.error(e)\n    console.trace()\n    console.log(e.stack)\n    throw e\n  }\n}\n\n/**\n * Fills buffer with random data\n */\nexport function getRandomValues(buffer: Uint8Array) {\n  if (buffer.byteLength < (4096)) {\n    return crypto.getRandomValues(buffer)\n  } else {\n    // larger blocks should really only be used for testing\n    _sb_assert(!(buffer.byteLength % 1024), 'getRandomValues(): large requested blocks must be multiple of 1024 in size')\n    // console.log(`will set ${buffer.byteLength} random bytes`)\n    // const t0 = Date.now()\n    let i = 0\n    try {\n      for (i = 0; i < buffer.byteLength; i += 1024) {\n        let t = new Uint8Array(1024)\n        // this doesn't actually have enough entropy, we should just hash here anyweay\n        crypto.getRandomValues(t)\n        // console.log(`offset is ${i}`)\n        buffer.set(t, i)\n      }\n    } catch (e: any) {\n      console.log(`got an error on index i=${i}`)\n      console.log(e)\n      console.trace()\n    }\n    // console.log(`created ${buffer.byteLength} random byte buffer in ${Date.now() - t0} millisends`)\n    return buffer\n  }\n}\n\n// for later use - message ID formats\nconst messageIdRegex = /([A-Za-z0-9+/_\\-=]{64})([01]{42})/\n\n// Strict b64 check:\n// const b64_regex = new RegExp('^(?:[A-Za-z0-9+/_\\-]{4})*(?:[A-Za-z0-9+/_\\-]{2}==|[A-Za-z0-9+/_\\-]{3}=)?$')\n// But we will go (very) lenient:\nconst b64_regex = /^([A-Za-z0-9+/_\\-=]*)$/\n// stricter - only accepts URI friendly:\n// const url_regex = /^([A-Za-z0-9_\\-=]*)$/\n\n/**\n * Returns 'true' if (and only if) string is well-formed base64.\n * Works same on browsers and nodejs.\n */\nfunction _assertBase64(base64: string) {\n  return b64_regex.test(base64)\n  // // return (b64_regex.exec(base64)?.[0] === base64);\n  // const z = b64_regex.exec(base64)\n  // if (z) return (z[0] === base64); else return false;\n}\nconst isBase64Encoded = _assertBase64 // alias\n\n// refactor helper - replace encodeURIComponent everywhere\n/** @private */\nfunction ensureSafe(base64: string): string {\n  const z = b64_regex.exec(base64)\n  _sb_assert((z) && (z[0] === base64), 'ensureSafe() tripped: something is not URI safe')\n  return base64\n}\n\n// this also functions as a place to identify \"internal\" from\n// \"external\" uses of A32 format (eg users of the library should\n// never see the 'a32.' prefix directly)\nfunction stripA32(value: string | Base62Encoded): string {\n  if ((value) && (value !== '')) {\n    if (value.startsWith('a32.'))\n      console.warn(\"[stripA32] removing 'a32.' prefix, these should be cleaned up by now\")\n    return value.replace(/^a32\\./, '')\n  } else {\n    console.warn(\"[stripA32] asked to strip an empty/missing string?\")\n    return ''\n  }\n}\n\n/*\n  we use URI/URL 'safe' characters in our b64 encoding to avoid having\n  to perform URI encoding, which also avoids issues with composed URI\n  strings (such as when copy-pasting). however, that means we break\n  code that tries to use 'regular' atob(), because it's not as forgiving.\n  this is also referred to as RFC4648 (section 5). note also that when\n  we generate GUID from public keys, we iterate hashing until '-' and '_'\n  are not present in the hash, which does reduce entropy by about three\n  (3) bits (out of 384).\n*/\n\n// For possible future use:\n// RFC 3986 (updates 1738 and obsoletes 1808, 2396, and 2732)\n// type ALPHA = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\n// type alpha = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'\n// type digit = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'\n// type genDelims = ':' | '/' | '?' | '#' | '[' | ']' | '@'\n// type subDelims = '!' | '$' | '&' | \"'\" | '(' | ')' | '*' | '+' | ',' | ';' | '='\n// type unReserved = ALPHA | alpha | digit | '-' | '.' | '_' | '~'\n\n/**\n * based on https://github.com/qwtel/base64-encoding/blob/master/base64-js.ts\n */\nconst b64lookup: string[] = []\nconst urlLookup: string[] = []\nconst revLookup: number[] = []\nconst CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nconst CODE_B64 = CODE + '+/'\nconst CODE_URL = CODE + '-_'\nconst PAD = '='\nconst MAX_CHUNK_LENGTH = 16383 // must be multiple of 3\nfor (let i = 0, len = CODE_B64.length; i < len; ++i) {\n  b64lookup[i] = CODE_B64[i]\n  urlLookup[i] = CODE_URL[i]\n  revLookup[CODE_B64.charCodeAt(i)] = i\n}\nrevLookup['-'.charCodeAt(0)] = 62 // minus\nrevLookup['_'.charCodeAt(0)] = 63 // underscore\n\nfunction getLens(b64: string) {\n  const len = b64.length\n  let validLen = b64.indexOf(PAD)\n  if (validLen === -1) validLen = len\n  const placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)\n  return [validLen, placeHoldersLen]\n}\n\n/** @private */\nfunction _byteLength(validLen: number, placeHoldersLen: number) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen;\n}\n\n/**\n * Standardized 'atob()' function, e.g. takes the a Base64 encoded\n * input and decodes it. Note: always returns Uint8Array.\n * Accepts both regular Base64 and the URL-friendly variant,\n * where `+` => `-`, `/` => `_`, and the padding character is omitted.\n *\n * @param str - string in either regular or URL-friendly representation.\n * @return - returns decoded binary result\n */\nexport function base64ToArrayBuffer(str: string): Uint8Array {\n  if (!_assertBase64(str)) throw new Error(`invalid character in string '${str}'`)\n  let tmp: number\n  switch (str.length % 4) {\n    case 2: str += '=='; break;\n    case 3: str += '='; break;\n  }\n  const [validLen, placeHoldersLen] = getLens(str);\n  const arr = new Uint8Array(_byteLength(validLen, placeHoldersLen));\n  let curByte = 0;\n  const len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  let i: number;\n  for (i = 0; i < len; i += 4) {\n    const r0: number = revLookup[str.charCodeAt(i)];\n    const r1: number = revLookup[str.charCodeAt(i + 1)];\n    const r2: number = revLookup[str.charCodeAt(i + 2)];\n    const r3: number = revLookup[str.charCodeAt(i + 3)];\n    tmp = (r0 << 18) | (r1 << 12) | (r2 << 6) | (r3);\n    arr[curByte++] = (tmp >> 16) & 0xff;\n    arr[curByte++] = (tmp >> 8) & 0xff;\n    arr[curByte++] = (tmp) & 0xff;\n  }\n  if (placeHoldersLen === 2) {\n    const r0 = revLookup[str.charCodeAt(i)];\n    const r1 = revLookup[str.charCodeAt(i + 1)];\n    tmp = (r0 << 2) | (r1 >> 4);\n    arr[curByte++] = tmp & 0xff;\n  }\n  if (placeHoldersLen === 1) {\n    const r0 = revLookup[str.charCodeAt(i)];\n    const r1 = revLookup[str.charCodeAt(i + 1)];\n    const r2 = revLookup[str.charCodeAt(i + 2)];\n    tmp = (r0 << 10) | (r1 << 4) | (r2 >> 2);\n    arr[curByte++] = (tmp >> 8) & 0xff;\n    arr[curByte++] = tmp & 0xff;\n  }\n  return arr;\n}\n\nfunction tripletToBase64(lookup: string[], num: number) {\n  return (\n    lookup[num >> 18 & 0x3f] +\n    lookup[num >> 12 & 0x3f] +\n    lookup[num >> 6 & 0x3f] +\n    lookup[num & 0x3f]\n  );\n}\n\nfunction encodeChunk(lookup: string[], view: DataView, start: number, end: number) {\n  let tmp: number;\n  const output = new Array((end - start) / 3);\n  for (let i = start, j = 0; i < end; i += 3, j++) {\n    tmp =\n      ((view.getUint8(i) << 16) & 0xff0000) +\n      ((view.getUint8(i + 1) << 8) & 0x00ff00) +\n      (view.getUint8(i + 2) & 0x0000ff);\n    output[j] = tripletToBase64(lookup, tmp);\n  }\n  return output.join('');\n}\n\nconst bs2dv = (bs: BufferSource) => bs instanceof ArrayBuffer\n  ? new DataView(bs)\n  : new DataView(bs.buffer, bs.byteOffset, bs.byteLength)\n\n/**\n * Compare buffers\n */\nexport function compareBuffers(a: Uint8Array | ArrayBuffer | null, b: Uint8Array | ArrayBuffer | null): boolean {\n  if (typeof a != typeof b) return false\n  if ((a == null) || (b == null)) return false\n  const av = bs2dv(a)\n  const bv = bs2dv(b)\n  if (av.byteLength !== bv.byteLength) return false\n  for (let i = 0; i < av.byteLength; i++)  if (av.getUint8(i) !== bv.getUint8(i)) return false\n  return true\n}\n\n/**\n * Standardized 'btoa()'-like function, e.g., takes a binary string\n * ('b') and returns a Base64 encoded version ('a' used to be short\n * for 'ascii').\n *\n * @param buffer - binary string\n * @param variant - 'b64' or 'url'\n * @return - returns Base64 encoded string\n */\nfunction arrayBufferToBase64(buffer: ArrayBuffer | Uint8Array | null, variant: 'b64' | 'url' = 'url'): string {\n  if (buffer == null) {\n    _sb_exception('L509', 'arrayBufferToBase64() -> null paramater')\n    return ''\n  } else {\n    // const view = bs2dv(bufferSource)\n    // const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    // console.log(buffer)\n    // const view = new DataView(buffer)\n    const view = bs2dv(buffer)\n    const len = view.byteLength\n    const extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    const len2 = len - extraBytes\n    const parts = new Array(\n      Math.floor(len2 / MAX_CHUNK_LENGTH) + Math.sign(extraBytes)\n    )\n    const lookup = variant == 'url' ? urlLookup : b64lookup // defaults to url-safe except when overriden\n    const pad = ''\n    let j = 0\n    for (let i = 0; i < len2; i += MAX_CHUNK_LENGTH) {\n      parts[j++] = encodeChunk(\n        lookup,\n        view,\n        i,\n        (i + MAX_CHUNK_LENGTH) > len2 ? len2 : (i + MAX_CHUNK_LENGTH),\n      )\n    }\n    if (extraBytes === 1) {\n      const tmp = view.getUint8(len - 1);\n      parts[j] = (\n        lookup[tmp >> 2] +\n        lookup[(tmp << 4) & 0x3f] +\n        pad + pad\n      )\n    } else if (extraBytes === 2) {\n      const tmp = (view.getUint8(len - 2) << 8) + view.getUint8(len - 1)\n      parts[j] = (\n        lookup[tmp >> 10] +\n        lookup[(tmp >> 4) & 0x3f] +\n        lookup[(tmp << 2) & 0x3f] +\n        pad\n      );\n    }\n    return parts.join('')\n  }\n}\n\n// Define the base62 dictionary\n// We want the same sorting order as ASCII, so we go with 0-9A-Za-z\nconst base62 = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\nconst base62Regex = /^(a32\\.)?[0-9A-Za-z]{43}$/;\n// branded string type\n\n/**\n   A 'branded' string type for base62 encoded strings.\n   This is used to ensure that the string is a valid base62\n   encoded string.\n   \n   \"ArrayBuffer32\" is a 256-bit array buffer. We use this\n    as the ASCII representation of binary objects that are\n    designed to be multiples of 256 bits. This has a number\n    of advantages, and leverages the facts that 43 characters\n    of base62 is slightly more than 256 bits (99.99% efficient).\n\n    Note that this approach was not practical prior to es2020,\n    when BigInt was added to JavaScript. BigInt allows us to\n    work natively with 256-bit integers.\n\n    The 'a32.' prefix is used to distinguish these from\n    other base64 or other encodings. This is not strictly\n    necessary, but it makes it easier to distinguish.\n    Note that '.' is not a valid base62 nor base64 character.\n    'a32.' refers to 'ArrayBuffer32' (256 bits), which we use\n    as a basic type to represent 256-bit integers in 43\n    characters of base62 [0-9A-Za-z]\n */\ntype Base62Encoded = string & { _brand?: 'Base62Encoded' };\n\n/**\n * base62ToArrayBuffer32 converts a base62 encoded string to an ArrayBuffer32.\n * \n * @param s base62 encoded string\n * @returns ArrayBuffer32\n */\nexport function base62ToArrayBuffer32(s: Base62Encoded): ArrayBuffer {\n  if (!base62Regex.test(s)) throw new Error(`base62ToArrayBuffer32: string must match: ${base62Regex}, value provided was ${s}`);\n  // remove the 'a32.' prefix, if present\n  if (s.startsWith('a32.')) s = s.slice(4);\n  let n = BigInt(0);\n  for (let i = 0; i < s.length; i++)\n    n = n * 62n + BigInt(base62.indexOf(s[i]));\n  // base62 x 43 is slightly more than 256 bits, so we need to check for overflow\n  if (n > 2n ** 256n - 1n) throw new Error(`base62ToArrayBuffer32: value exceeds 256 bits.`);\n  const buffer = new ArrayBuffer(32);\n  const view = new DataView(buffer);\n  for (let i = 0; i < 8; i++, n = n >> 32n)\n    view.setUint32((8 - i - 1) * 4, Number(BigInt.asUintN(32, n)));\n  return buffer;\n}\n\n\n/**\n * arrayBufferToBase62 converts an ArrayBuffer32 to a base62 encoded string.\n * Does not include a32. prefix.\n * \n * @param buffer ArrayBuffer32\n * @returns base62 encoded string\n */\nexport function arrayBufferToBase62(buffer: ArrayBuffer): Base62Encoded {\n  if (buffer.byteLength !== 32)\n    throw new Error('arrayBufferToBase62: buffer must be exactly 32 bytes (256 bits).');\n  let result = '';\n  for (let n = BigInt('0x' + Array.from(new Uint8Array(buffer)).map(b => b.toString(16).padStart(2, '0')).join(''));\n    n > 0n;\n    n = n / 62n)\n    result = base62[Number(n % 62n)] + result;\n  return result.padStart(43, '0');\n}\n\n/**\n * arrayBuffer32ToBase62 converts an ArrayBuffer32 to a base62 encoded string.\n * Inlcudes a32. prefix, was used internally while transitioning from base64.\n * \n * @param buffer ArrayBuffer32\n * @returns base62 encoded string\n */\nexport function arrayBuffer32ToBase62(buffer: ArrayBuffer): Base62Encoded {\n  return 'a32.' + arrayBufferToBase62(buffer);\n}\n\n/**\n * base62ToBase64 converts a base62 encoded string to a base64 encoded string.\n * \n * @param s base62 encoded string\n * @returns base64 encoded string\n * \n * @throws Error if the string is not a valid base62 encoded string\n */\nexport function base62ToBase64(s: Base62Encoded): string {\n  return arrayBufferToBase64(base62ToArrayBuffer32(s));\n}\n\n/**\n * base64ToBase62 converts a base64 encoded string to a base62 encoded string.\n * \n * @param s base64 encoded string\n * @returns base62 encoded string\n * \n * @throws Error if the string is not a valid base64 encoded string\n */\nexport function base64ToBase62(s: string): Base62Encoded {\n  return arrayBufferToBase62(base64ToArrayBuffer(s));\n}\n\n// and a type guard\nexport function isBase62Encoded(value: string | Base62Encoded): value is Base62Encoded {\n  return base62Regex.test(value);\n}\n\n/**\n * Appends two buffers and returns a new buffer\n * \n * @param {Uint8Array | ArrayBuffer} buffer1\n * @param {Uint8Array | ArrayBuffer} buffer2\n * @return {ArrayBuffer} new buffer\n *\n */\nfunction _appendBuffer(buffer1: Uint8Array | ArrayBuffer, buffer2: Uint8Array | ArrayBuffer): ArrayBuffer {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\n// /**\n//  * Returns random number\n//  *\n//  * @return {int} integer 0..255\n//  *\n//  */\n// export function simpleRand256() {\n//   return crypto.getRandomValues(new Uint8Array(1))[0];\n// }\n\n// const base32mi = '0123456789abcdefyhEjkLmNHpFrRTUW';\n\n// /**\n//  * Returns a random string in requested encoding\n//  *\n//  * @param {n} number of characters\n//  * @param {code} encoding, supported types: 'base32mi'\n//  * @return {string} random string\n//  *\n//  * base32mi: ``0123456789abcdefyhEjkLmNHpFrRTUW``\n//  */\n// export function simpleRandomString(n: number, code: string): string {\n//   if (code == 'base32mi') {\n//     // yeah, of course we need to add base64 etc\n//     const z = crypto.getRandomValues(new Uint8Array(n));\n//     let r = '';\n//     for (let i = 0; i < n; i++) r += base32mi[z[i] & 31];\n//     return r;\n//   }\n//   _sb_exception('simpleRandomString', 'code ' + code + ' not supported');\n//   return '';\n// }\n\n// /**\n//  * This function disambiguates strings that are known to be 'base32mi' type.\n//  * Below is the list of base32 characters, and the disambiguation table.\n//  * base32mi is designed to be human-friendly, so this function can be \n//  * safely called anywhere you have human input - including as an \n//  * event on an input field that immediately makes any correction. \n//  * \n//  * You can think of the translation either in terms of many-to-one\n//  * (all entered characters that map to a specific base32mi character),\n//  * or as a one-to-one correspondence (where '.' means 'no change').\n//  *\n//  * @example\n//  *\n//  *     'base32mi': '0123456789abcdefyhEjkLmNHpFrRTUW'\n//  * \n//  *     Disambiguation transformations:\n//  * \n//  *     [OoQD] -> '0'\n//  *     [lIiJ] -> '1'\n//  *     [Zz] -> '2'\n//  *     [A] -> '4'\n//  *     [Ss] -> '5'\n//  *     [G] -> '6'\n//  *     [t] -> '7'\n//  *     [B] -> '8'\n//  *     [gq] -> '9'\n//  *     [C] -> 'c'\n//  *     [Y] -> 'y'\n//  *     [KxX] -> 'k'\n//  *     [M] -> 'm'\n//  *     [n] -> 'N'\n//  *     [P] -> 'p'\n//  *     [uvV] -> 'U'\n//  *     [w] -> 'W'\n//  *\n//  *     0123456789abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\n//  *     ................9.1..1.N0.9.57UUk.248c0EF6.11kLm.0p0.5..Uky2\n//  *\n//  */\n// export function cleanBase32mi(s: string) {\n//   // this of course is not the most efficient\n//   return s.replace(/[OoQD]/g, '0').replace(/[lIiJ]/g, '1').replace(/[Zz]/g, '2').replace(/[A]/g, '4').replace(/[Ss]/g, '5').replace(/[G]/g, '6').replace(/[t]/g, '7').replace(/[B]/g, '8').replace(/[gq]/g, '9').replace(/[C]/g, 'c').replace(/[Y]/g, 'y').replace(/[KxX]/g, 'k').replace(/[M]/g, 'm').replace(/[n]/g, 'N').replace(/[P]/g, 'p').replace(/[uvV]/g, 'U').replace(/[w]/g, 'w');\n// }\n\n/**\n * Partition\n */\nexport function partition(str: string, n: number) {\n  throw (`partition() not tested on TS yet - (${str}, ${n})`)\n}\n\n/**\n * There are many problems with JSON parsing, adding a wrapper to capture more info.\n * The 'loc' parameter should be a (unique) string that allows you to find the usage\n * in the code; one approach is the line number in the file (at some point).\n */\nexport function jsonParseWrapper(str: string | null, loc: string) {\n  if (str == null) return null;\n  try {\n    return JSON.parse(str);\n  } catch (error) {\n    // sometimes it's an embedded string\n    try {\n      // This would be simple: 'return JSON.parse(eval(str));'\n      // But eval() not safe. Instead we iteratively strip possible wrapping\n      // single or double quotation marks. There are various cases where this\n      // will not be enough, but we'll add \"unwrapping\" logic as we find\n      // the examples.\n      let s2 = '';\n      let s3 = '';\n      let str2: string | undefined = str\n      while (str2 != (s3 = s2, s2 = str2, str2 = str2?.match(/^(['\"])(.*)\\1$/m)?.[2]))\n        return JSON.parse(`'${s3}'`);\n    } catch {\n      // let's try one more thing\n      try {\n        return JSON.parse(str.slice(1, -1));\n      } catch {\n        // i am beginning to dislike TS .. ugh no simple way to get error message\n        // see: https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\n        throw new Error(`JSON.parse() error at ${loc} (tried eval and slice)\\nString was: ${str}`);\n      }\n    }\n  }\n}\n\n/** Essentially a dictionary where each entry is an arraybuffer. */\nexport interface SBPayload {\n  [index: string]: ArrayBuffer;\n}\n\n/**\n * Deprecated (older version of payloads, for older channels)\n */\n/** @private */\nexport function extractPayloadV1(payload: ArrayBuffer): SBPayload {\n  try {\n    const metadataSize = new Uint32Array(payload.slice(0, 4))[0];\n    const decoder = new TextDecoder();\n    const metadata: Dictionary<any> = jsonParseWrapper(decoder.decode(payload.slice(4, 4 + metadataSize)), 'L476');\n    let startIndex = 4 + metadataSize;\n    const data: SBPayload = {};\n    for (const key in metadata) {\n      if (data.key) {\n        data[key] = payload.slice(startIndex, startIndex + metadata[key]);\n        startIndex += metadata[key];\n      }\n    }\n    return data;\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n}\n\n/**\n * Assemble payload. This creates a single binary (wire) format\n * of an arbitrary set of (named) binary objects.\n */\nexport function assemblePayload(data: SBPayload): BodyInit | null {\n  try {\n    const metadata: Dictionary<any> = {};\n    metadata['version'] = '002';\n    let keyCount = 0;\n    let startIndex = 0;\n    for (const key in data) {\n      keyCount++;\n      metadata[keyCount.toString()] = { name: key, start: startIndex, size: data[key].byteLength };\n      startIndex += data[key].byteLength;\n    }\n    const encoder = new TextEncoder();\n    const metadataBuffer: ArrayBuffer = encoder.encode(JSON.stringify(metadata));\n    const metadataSize = new Uint32Array([metadataBuffer.byteLength]);\n    let payload = _appendBuffer(new Uint8Array(metadataSize.buffer), new Uint8Array(metadataBuffer));\n    for (const key in data)\n      payload = _appendBuffer(new Uint8Array(payload), data[key]);\n    return payload;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\n/**\n * Extract payload - this decodes from our binary (wire) format\n * to a JS object. This provides a binary encoding of any JSON,\n * and it allows some elements of the JSON to be raw (binary).\n */\nexport function extractPayload(payload: ArrayBuffer): SBPayload {\n  try {\n    // number of bytes of meta data (encoded as a 32-bit Uint)\n    const metadataSize = new Uint32Array(payload.slice(0, 4))[0];\n    const decoder = new TextDecoder();\n    // extracts the string of meta data and parses\n    const _metadata: Dictionary<any> = jsonParseWrapper(decoder.decode(payload.slice(4, 4 + metadataSize)), 'L533');\n    // calculate start of actual contents\n    const startIndex: number = 4 + metadataSize;\n    if (!_metadata.version) _metadata['version'] = '001' // backwards compat\n    switch (_metadata['version']) {\n      case '001': {\n        // deprecated, older format\n        return extractPayloadV1(payload);\n      }\n      case '002': {\n        const data: Dictionary<any> = [];\n        for (let i = 1; i < Object.keys(_metadata).length; i++) {\n          const _index = i.toString();\n          if (_metadata[_index]) {\n            const propertyStartIndex: number = _metadata[_index]['start'];\n            // start (in bytes) of contents\n            const size: number = _metadata[_index]['size'];\n            // where to put it\n            const entry: Dictionary<any> = _metadata[_index]\n            // extracts contents - this supports raw data\n            data[entry['name']] = payload.slice(startIndex + propertyStartIndex, startIndex + propertyStartIndex + size);\n          } else {\n            console.log(`found nothing for index ${i}`)\n          }\n        }\n        return data;\n      }\n      default: {\n        throw new Error('Unsupported payload version (' + _metadata['version'] + ') - fatal');\n      }\n    }\n  } catch (e) {\n    throw new Error('extractPayload() exception (' + e + ')');\n  }\n}\n\n/**\n * Encode into b64 URL\n */\nexport function encodeB64Url(input: string) {\n  return input.replaceAll('+', '-').replaceAll('/', '_');\n}\n\n/**\n * Decode b64 URL\n */\nexport function decodeB64Url(input: string) {\n  input = input.replaceAll('-', '+').replaceAll('_', '/');\n\n  // Pad out with standard base64 required padding characters\n  const pad: number = input.length % 4;\n  if (pad) {\n    if (pad === 1) {\n      throw new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\n    }\n    input += new Array(5 - pad).join('=');\n  }\n\n  return input;\n}\n\n//#endregion - SBCryptoUtils\n\n/******************************************************************************************************/\n//#region - SBCrypto Class - this is instantiated into 'sbCrypto' global\n\ntype knownKeysInfo = {\n  hash: SB384Hash, // also the map hash\n  pubKeyJson?: JsonWebKey, // if we only have crypto key and it's not extractable, this will be undefined\n  key?: CryptoKey, // exists iff it's a private key\n}\n\n\n\n/**\n * SBCrypto\n *\n * SBCrypto contains all the SB specific crypto functions,\n * as well as some general utility functions.\n *\n * @class\n * @constructor\n * @public\n */\n\n/**\n * \n  * Typically a jsonwebkey (JWK) will look something like this:\n  *\n  *                        \"{\\\"crv\\\":\\\"P-384\\\",\\\"ext\\\":true,\\\"key_ops\\\":[],\\\"kty\\\":\\\"EC\\\",\n  *                        \\\"x\\\":\\\"9s17B4i0Cuf_w9XN_uAq2DFePOr6S3sMFMA95KjLN8akBUWEhPAcuMEMwNUlrrkN\\\",\n  *                        \\\"y\\\":\\\"6dAtcyMbtsO5ufKvlhxRsvjTmkABGlTYG1BrEjTpwrAgtmn6k25GR7akklz9klBr\\\"}\"\n  * \n  * (public key), or this:\n  * \n  *                       \"{\\\"crv\\\":\\\"P-384\\\",\n  *                       \\\"d\\\":\\\"KCJHDZ34XgVFsS9-sU09HFzXZhnGCvnDgJ5a8GTSfjuJQaq-1N2acvchPRhknk8B\\\",\n  *                       \\\"ext\\\":true,\\\"key_ops\\\":[\\\"deriveKey\\\"],\\\"kty\\\":\\\"EC\\\",\n  *                       \\\"x\\\":\\\"rdsyBle0DD1hvp2OE2mINyyI87Cyg7FS3tCQUIeVkfPiNOACtFxi6iP8oeYt-Dge\\\",\n  *                       \\\"y\\\":\\\"qW9VP72uf9rgUU117G7AfTkCMncJbT5scIaIRwBXfqET6FYcq20fwSP7R911J2_t\\\"}\"\n  * \n  * (private key). These are elliptic curve keys encoded in \"JWK\" format. \n  * The main RFC is 7518 (https://datatracker.ietf.org/doc/html/rfc7518#section-6.2),\n  * supervised by IESG except for a tiny addition of one parameter (\"ext\") that is \n  * supervised by the W3C Crypto WG (https://w3c.github.io/webcrypto/#ecdsa).\n  * \n  * We define an internal SB format that encodes/decodes any sort of key to a variable-\n  * length (a32) string. The most important case are JWK keys.\n  * \n  * EC in JWK has a number of parameters, but in this case the only required ones are:\n  * \n  *  crv: the curve (P-384 in this case)\n  *  x: the x coordinate of the public key\n  *  y: the y coordinate of the public key\n  *  d: the private key (if it's a private key)\n  *  kty: the key type (EC in this case)\n  *  ext: the 'extractable' flag\n  *  key_ops: (optional) permitted the key operations\n  * \n  * We define ''SBKey'' as a variable length string with a four-character prefix,\n  * which encodes as follows:\n  * \n  *  \"pNkk\": public key; only x and y are present, the rest implied\n  *  \"Aj3p\": private key: x, y, d are present, the rest implied\n  *  \"T881\": AES 256 key (32 bytes)\n  * \n  * For the AES key, properties will include:\n  * \n  * \"k\": the key itself, encoded as base64\n  * \"alg\": \"A256GCM\"\n  * \"key_ops\": [\"encrypt\", \"decrypt\"]\n  * \"kty\": \"oct\"\n  * \n  * Only the \"k\" property is required, the rest are implied.\n  * \n  * In JWK, x, y, and d are all encoded as 64 characters, or 384 bits.\n  * \n  *\n  *\n*/\n\nenum KeyPrefix {\n  SBAES256Key = \"T881\",\n  SBPrivateKey = \"Aj3p\",\n  SBPublicKey = \"pNkk\"\n}\n\ninterface SBAES256Key {\n  prefix: KeyPrefix.SBAES256Key,\n  k: Base62Encoded\n}\n\ninterface SBPrivateKey {\n  prefix: KeyPrefix.SBPrivateKey,\n  x: Base62Encoded,\n  y: Base62Encoded,\n  d: Base62Encoded\n}\n\ninterface SBPublicKey {\n  prefix: KeyPrefix.SBPublicKey,\n  x: Base62Encoded,\n  y: Base62Encoded\n}\n\nfunction isSBKey(key: any): key is SBKey {\n  return key && Object.values(KeyPrefix).includes(key.prefix);\n}\n\nexport type SBKey = SBAES256Key | SBPrivateKey | SBPublicKey\n\n// private .. only for our code when it is omniscient on types\ntype Key = JsonWebKey | SB384 | CryptoKey | SBKey\n\nclass SBCrypto {  /************************************************************************************/\n\n  #knownKeys: Map<SB384Hash, knownKeysInfo> = new Map()\n\n  /**\n   * Converts a SBKey to a JsonWebKey, if the input is already a JsonWebKey\n   * then it's returned as is.\n   * \n   */\n  SBKeyToJWK(key: SBKey | JsonWebKey): JsonWebKey {\n    if (!isSBKey(key))\n      return key as JsonWebKey\n    switch (key.prefix) {\n      case 'pNkk': {\n        return {\n          crv: \"P-384\",\n          ext: true,\n          key_ops: [],\n          kty: \"EC\",\n          x: key.x,\n          y: key.y\n        }\n      }\n      case 'Aj3p': {\n        return {\n          crv: \"P-384\",\n          d: key.d,\n          ext: true,\n          key_ops: [\"deriveKey\"],\n          kty: \"EC\",\n          x: key.x,\n          y: key.y\n        }\n      }\n      case 'T881': {\n        return {\n          k: key.k,\n          alg: \"A256GCM\",\n          key_ops: [\"encrypt\", \"decrypt\"],\n          kty: \"oct\"\n        }\n      }\n      default: {\n        throw new Error(`SBKeyToJWK() - unknown key prefix: ${(key as SBKey).prefix}`)\n      }\n    }\n  }\n\n  /**\n   * Converts a JsonWebKey to a SBKey, if the input is already a SBKey\n   * then it's returned as is. If the input is not well-formed, then\n   * we return undefined. \n   */\n  JWKToSBKey(key: JsonWebKey): SBKey | undefined {\n    if (!key) return undefined;\n    // Check and convert for AES256 key\n    if (key.kty === \"oct\" && key.alg === \"A256GCM\" && key.k && key.k.length === 43) {\n      return {\n        prefix: KeyPrefix.SBAES256Key,\n        k: base64ToBase62(key.k)\n      };\n    }\n    // Check and convert for EC keys\n    if (key.kty === \"EC\" && key.crv === \"P-384\" && key.x && key.y) {\n      if (key.x.length !== 64 || key.y.length !== 64) return undefined;\n      if (key.d && key.d.length === 64) {\n        return {\n          prefix: KeyPrefix.SBPrivateKey,\n          x: key.x,\n          y: key.y,\n          d: key.d\n        };\n      }\n      return {\n        prefix: KeyPrefix.SBPublicKey,\n        x: key.x,\n        y: key.y\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Here we convert SBKey to a serialized string, it's a single\n   * string that begins with the four-character identifying prefix,\n   * and then just a string. The way that string is encoded is as\n   * follows:\n   * \n   * - AES256 key: it is 43x base64, so 256 bits, so can be base62 encoded straight up\n   * \n   * - private key: this is x, y, and d, each are 384 bits, so that's a total \n   *   of 768 bis, which can be encoded as three strings of 43 base62 characters.\n   *   BUT we need to convert all of them to BINARY, and then concatenate them\n   *   as binary, then split that to three equal-length buffers (32 bytes) and\n   *   then convert each to base62.\n   * \n   * - public key: this is x and y, each are 384 bits, and we need to figure out a \n   *   way to encode as a32 (base62) - remember we can only encode a32 in chunks of 256 bits.\n   *   perhaps we do as above but append 128 \"zero\" bits to it, for a total of 1280\n   *   bits, which we can split into four chunks of 256 bits, and do as above.\n   *   \n   *\n   */\n  SBKeyToString(key: SBKey): string {\n    const prefix = key.prefix;\n    // remember throughout that our constraint on base62 is that it's always\n    // a multiple of 256 bits, so we need to split and pad things.\n    // we also consistently need to strip/add the \"a32.\" prefix\n    switch (prefix) {\n      case KeyPrefix.SBAES256Key: {\n        // AES keys are conveniently already 256 bits\n        const buffer = base64ToArrayBuffer((key as SBAES256Key).k);\n        return prefix + arrayBufferToBase62(buffer).slice(4);\n      }\n      case KeyPrefix.SBPublicKey: {\n        // public keys are two 384-bit numbers, which splits into 3x 256 bits\n        const publicKey = key as SBPublicKey;\n        const combined = new Uint8Array(48 * 2);\n        combined.set(base64ToArrayBuffer(publicKey.x), 0);\n        combined.set(base64ToArrayBuffer(publicKey.y), 48);\n        return prefix +\n          arrayBufferToBase62(combined.slice(0, 32).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(32, 64).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(64, 96).buffer).slice(4);\n      }\n      case KeyPrefix.SBPrivateKey: {\n        // private keys are a bit cumbersome, we pad with 128 bits of zero\n        const privateKey = key as SBPrivateKey;\n        const combined = new Uint8Array(3 * 48 + 16); // this is 5x 256 bits\n        combined.set(base64ToArrayBuffer(privateKey.x).slice(4), 0);\n        combined.set(base64ToArrayBuffer(privateKey.y).slice(4), 48);\n        combined.set(base64ToArrayBuffer(privateKey.d).slice(4), 96);\n        // it will already be zero-padded\n        return prefix +\n          arrayBufferToBase62(combined.slice(0, 32).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(32, 64).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(64, 96).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(96, 128).buffer).slice(4) +\n          arrayBufferToBase62(combined.slice(128, 160).buffer).slice(4);\n      }\n      default: {\n        throw new Error(\"Unknown SBKey type.\");\n      }\n    }\n  }\n\n  StringToSBKey(input: string): SBKey | undefined {\n    try {\n      if (input.length < 4) return undefined;\n      const prefix = input.slice(0, 4);\n      const data = input.slice(4);\n      switch (prefix) {\n        case KeyPrefix.SBAES256Key: {\n          if (data.length !== 43) return undefined;\n          const k = base62ToArrayBuffer32(\"a32.\" + data);\n          return {\n            prefix: KeyPrefix.SBAES256Key,\n            k: arrayBufferToBase64(k)\n          };\n        }\n        case KeyPrefix.SBPublicKey: {\n          if (data.length !== 86) return undefined;\n          const p1 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(0, 43)));\n          const p2 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(43, 86)));\n          const p3 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(86)));\n          const combined = new Uint8Array(48 * 2);\n          combined.set(p1, 0);\n          combined.set(p2, 32);\n          combined.set(p3, 64);\n          return {\n            prefix: KeyPrefix.SBPublicKey,\n            x: arrayBufferToBase64(combined.slice(0, 48).buffer),\n            y: arrayBufferToBase64(combined.slice(48, 96).buffer)\n          };\n        }\n        case KeyPrefix.SBPrivateKey: {\n          if (data.length !== 215) return undefined;\n          const p1 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(0, 43)));\n          const p2 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(43, 86)));\n          const p3 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(86, 129)));\n          const p4 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(129, 172)));\n          const p5 = new Uint8Array(base62ToArrayBuffer32(\"a32.\" + data.slice(172, 215)));\n          const combined = new Uint8Array(3 * 48 + 16); // this is 5x 256 bits\n          combined.set(p1, 0);\n          combined.set(p2, 32);\n          combined.set(p3, 64);\n          combined.set(p4, 96);\n          combined.set(p5, 128);\n          return {\n            prefix: KeyPrefix.SBPrivateKey,\n            x: arrayBufferToBase64(combined.slice(0, 48).buffer),\n            y: arrayBufferToBase64(combined.slice(48, 96).buffer),\n            d: arrayBufferToBase64(combined.slice(96, 144).buffer)\n          };\n        }\n        default: {\n          return undefined;\n        }\n      }\n    } catch (e) {\n      console.error(\"StringToSBKey() - malformed input, exception: \", e);\n      return undefined;\n    }\n  }\n\n  /**\n   * SBCrypto.addKnownKey()\n   * \n   * Adds any key to the list of known keys; if it's known\n   * but only as a public key, then it will be 'upgraded'.\n   */\n  async addKnownKey(key: Key) {\n    if (!key)\n      // various valid cases are no ops\n      return\n    // check on types first\n    if (isSBKey(key))\n      key = await this.SBKeyToJWK(key)\n    if (typeof key === 'string') {\n      // JsonWebKey can be private or public\n      const hash = await sbCrypto.sb384Hash(key)\n      if (!hash)\n        return\n      if (this.#knownKeys.has(hash)) {\n        // ToDo: check if it's a private key that would upgrade what's there\n        if (DBG) console.log(`addKnownKey() - key already known: ${hash}, skipping upgrade check`)\n      } else {\n        const newInfo: knownKeysInfo = {\n          hash: hash, // also the map hash\n          pubKeyJson: key,\n          key: await sbCrypto.importKey('jwk', key, 'ECDH', true, ['deriveKey'])\n        }\n        this.#knownKeys.set(hash, newInfo)\n      }\n    } else if (key instanceof SB384) {\n      // SB384 is always private\n      await key.ready // just in case\n      const hash = key.hash\n      // todo: perhaps check if it's there, but for now just overwrite\n      const newInfo: knownKeysInfo = {\n        hash: hash, // also the map hash\n        pubKeyJson: key.exportable_pubKey,\n        key: key.privateKey, // exists iff it's a private key\n      }\n      this.#knownKeys.set(hash, newInfo)\n    } else if (key instanceof CryptoKey) {\n      // CryptoKey can be private or public\n      const hash = await this.sb384Hash(key)\n      if (!hash)\n        return\n      if (!this.#knownKeys.has(hash)) {\n        const newInfo: knownKeysInfo = {\n          hash: hash, // also the map hash\n          pubKeyJson: await sbCrypto.exportKey('jwk', key),\n          key: key, // todo: could be public\n        }\n        this.#knownKeys.set(hash, newInfo)\n      }\n    } else {\n      throw new Error(\"addKnownKey() - invalid key type (must be string or SB384-derived)\")\n    }\n  }\n\n  /**\n   * SBCrypto.lookupKeyGlobal()\n   * \n   * Given any sort of SB384Hash, returns the corresponding known key, if any\n   */\n  lookupKeyGlobal(hash: SB384Hash): knownKeysInfo | undefined {\n    return this.#knownKeys.get(hash)\n  }\n  /**\n   * Hashes and splits into two (h1 and h1) signature of data, h1\n   * is used to request (salt, iv) pair and then h2 is used for\n   * encryption (h2, salt, iv).\n   * \n   * Transitioning to internal binary format\n   *\n   * @param buf blob of data to be stored\n   *\n   */\n  generateIdKey(buf: ArrayBuffer): Promise<{ id_binary: ArrayBuffer, key_material: ArrayBuffer }> {\n    return new Promise((resolve, reject) => {\n      try {\n        crypto.subtle.digest('SHA-512', buf).then((digest) => {\n          const _id = digest.slice(0, 32);\n          const _key = digest.slice(32);\n          resolve({\n            id_binary: _id,\n            key_material: _key\n          })\n\n          // resolve({\n          //   id32: stripA32(arrayBuffer32ToBase62(_id)),\n          //   key32: stripA32(arrayBuffer32ToBase62(_key))\n          // })\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  /**\n   * Extracts (generates) public key from a private key.\n   */\n  extractPubKey(privateKey: JsonWebKey): JsonWebKey | null {\n    try {\n      const pubKey: JsonWebKey = { ...privateKey };\n      delete pubKey.d;\n      delete pubKey.dp;\n      delete pubKey.dq;\n      delete pubKey.q;\n      delete pubKey.qi;\n      pubKey.key_ops = [];\n      return pubKey;\n    } catch (e) {\n      console.error(e)\n      return null\n    }\n  }\n\n  /** @private */\n  async #generateHash(rawBytes: ArrayBuffer): Promise<SB384Hash> {\n    try {\n      const MAX_REHASH_ITERATIONS = 160\n      const b62regex = /^[0-9A-Za-z]+$/;\n      let count = 0\n      let hash = arrayBufferToBase64(rawBytes)\n      while (!b62regex.test(hash)) {\n        if (count++ > MAX_REHASH_ITERATIONS) throw new Error(`generateChannelHash() - exceeded ${MAX_REHASH_ITERATIONS} iterations:`)\n        rawBytes = await crypto.subtle.digest('SHA-384', rawBytes)\n        hash = arrayBufferToBase64(rawBytes)\n      }\n      return arrayBufferToBase64(rawBytes)\n    } catch (e) {\n      console.error(\"sb384Hash() failed\", e)\n      console.error(\"tried working from channelBytes:\")\n      console.error(rawBytes)\n      throw new Error(`sb384Hash() exception (${e})`)\n    }\n  }\n\n  // nota bene this does, and should, permanently be backwards compatible.\n  /** @private */\n  async #testHash(channelBytes: ArrayBuffer, channel_id: SBChannelId): Promise<boolean> {\n    const MAX_REHASH_ITERATIONS = 160\n    let count = 0\n    let hash = arrayBufferToBase64(channelBytes)\n    while (hash !== channel_id) {\n      if (count++ > MAX_REHASH_ITERATIONS) return false\n      channelBytes = await crypto.subtle.digest('SHA-384', channelBytes)\n      hash = arrayBufferToBase64(channelBytes)\n    }\n    return true\n  }\n\n  /**\n   * SBCrypto.sb384Hash()\n   * \n   * Takes a JsonWebKey and returns a SB384Hash. If there's a problem, returns undefined.\n   * \n   */\n  async sb384Hash(key?: JsonWebKey | CryptoKey): Promise<SB384Hash | undefined> {\n    if (key instanceof CryptoKey)\n      key = await this.exportKey('jwk', key)\n        .catch(() => {\n          // typically it's a restricted key\n          return undefined\n        })\n    if (!key)\n      return undefined\n    if (key && key.x && key.y) {\n      const xBytes = base64ToArrayBuffer(decodeB64Url(key!.x!))\n      const yBytes = base64ToArrayBuffer(decodeB64Url(key!.y!))\n      const channelBytes = _appendBuffer(xBytes, yBytes)\n      return await this.#generateHash(channelBytes)\n    } else {\n      throw new Error('sb384Hash() - invalid JsonWebKey (missing x and/or y)')\n    }\n  }\n\n  /**\n   * SBCrypto.compareHashWithKey()\n   * \n   * Checks if an existing SB384Hash is 'compatible' with a given key.\n   * \n   * Note that you CAN NOT have a hash, and a key, generate a hash\n   * from that key, and then compare the two. The hash generation per\n   * se will be deterministic and specific AT ANY POINT IN TIME,\n   * but may change over time, and this comparison function will \n   * maintain ability to compare over versions.\n   * \n   * For example, this comparison will accept a simple straight\n   * b64-encoded hash without iteration or other processing.\n   * \n   */\n  async compareHashWithKey(hash: SB384Hash, key: JsonWebKey | null) {\n    if (!hash || !key) return false\n    let x = key.x\n    let y = key.y\n    if (!(x && y)) {\n      try {\n        // we try to be tolerant of code that loses track of if JWK has been parsed or not\n        const tryParse = JSON.parse(key as unknown as string);\n        if (tryParse.x) x = tryParse.x;\n        if (tryParse.y) y = tryParse.y;\n      } catch {\n        return false;\n      }\n    }\n    const xBytes = base64ToArrayBuffer(decodeB64Url(x!))\n    const yBytes = base64ToArrayBuffer(decodeB64Url(y!))\n    const channelBytes = _appendBuffer(xBytes, yBytes)\n    return await this.#testHash(channelBytes, hash)\n  }\n\n\n  /**\n   * 'Compare' two channel IDs. Note that this is not constant time.\n   */\n  async verifyChannelId(owner_key: JsonWebKey, channel_id: SBChannelId): Promise<boolean> {\n    return await this.compareHashWithKey(channel_id, owner_key)\n  }\n\n  /**\n   * SBCrypto.generatekeys()\n   *\n   * Generates standard ``ECDH`` keys using ``P-384``.\n   */\n  async generateKeys() {\n    try {\n      return await crypto.subtle.generateKey({ name: 'ECDH', namedCurve: 'P-384' }, true, ['deriveKey']);\n    } catch (e) {\n      throw new Error('generateKeys() exception (' + e + ')');\n    }\n  }\n\n  /**\n   * SBCrypto.importKey()\n   *\n   * Import keys\n   */\n  async importKey(format: KeyFormat, key: BufferSource | JsonWebKey, type: 'ECDH' | 'AES' | 'PBKDF2', extractable: boolean, keyUsages: KeyUsage[]) {\n    try {\n      let importedKey: CryptoKey\n      const keyAlgorithms = {\n        ECDH: { name: 'ECDH', namedCurve: 'P-384' },\n        AES: { name: 'AES-GCM' },\n        PBKDF2: 'PBKDF2'\n      }\n      if (format === 'jwk') {\n        // sanity check it's a JsonWebKey and not a BufferSource or something else\n        const jsonKey = key as JsonWebKey\n        if (jsonKey.kty === undefined) throw new Error('importKey() - invalid JsonWebKey');\n        if (jsonKey.alg === 'ECDH')\n          jsonKey.alg = undefined; // todo: this seems to be a Deno mismatch w crypto standards?\n        importedKey = await crypto.subtle.importKey('jwk', jsonKey, keyAlgorithms[type], extractable, keyUsages)\n      } else {\n        importedKey = await crypto.subtle.importKey(format, key as BufferSource, keyAlgorithms[type], extractable, keyUsages)\n      }\n      this.addKnownKey(importedKey)\n      return (importedKey)\n    } catch (e) {\n      console.error(`... importKey() error: ${e}:`)\n      console.log(format)\n      console.log(key)\n      console.log(type)\n      console.log(extractable)\n      console.log(keyUsages)\n      throw new Error('importKey() exception (' + e + ')');\n    }\n  }\n\n  /**\n   * SBCrypto.exportKey()\n   * \n   * Export key; note that if there's an issue, this will return undefined.\n   * That can happen normally if for example the key is restricted (and\n   * not extractable).\n   */\n  async exportKey(format: 'jwk', key: CryptoKey) {\n    return await crypto.subtle\n      .exportKey(format, key)\n      .catch(() => {\n        if (DBG) console.warn(`... exportKey() protested, this just means we treat this as undefined`)\n        return undefined\n      })\n  }\n\n  /**\n   * SBCrypto.deriveKey()\n   *\n   * Derive key. Takes a private and public key, and returns a Promise to a cryptoKey for 1:1 communication.\n   */\n  deriveKey(privateKey: CryptoKey, publicKey: CryptoKey, type: string, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey> {\n    return new Promise(async (resolve, reject) => {\n      const keyAlgorithms: Dictionary<any> = {\n        AES: {\n          name: 'AES-GCM', length: 256\n        }, HMAC: {\n          name: 'HMAC', hash: 'SHA-256', length: 256\n        }\n      };\n      try {\n        resolve(await crypto.subtle.deriveKey({\n          name: 'ECDH',\n          public: publicKey\n        },\n          privateKey,\n          keyAlgorithms[type],\n          extractable,\n          keyUsages));\n      } catch (e) {\n        console.error(e, privateKey, publicKey, type, extractable, keyUsages);\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * SBCrypto.encrypt()\n   *\n   * Encrypt. if no nonce (iv) is given, will create it. Returns a Promise\n   * that resolves either to raw array buffer or a packaged EncryptedContents.\n   * Note that for the former, nonce must be given.\n   */\n  encrypt(data: BufferSource, key: CryptoKey, _iv?: Uint8Array | null, returnType?: 'encryptedContents'): Promise<EncryptedContents>\n  encrypt(data: BufferSource, key: CryptoKey, _iv?: Uint8Array | null, returnType?: 'arrayBuffer'): Promise<ArrayBuffer>\n  encrypt(data: BufferSource, key: CryptoKey, _iv?: Uint8Array, returnType: 'encryptedContents' | 'arrayBuffer' = 'encryptedContents'): Promise<EncryptedContents | ArrayBuffer> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (data === null)\n          reject(new Error('no contents'))\n        const iv: Uint8Array = ((!_iv) || (_iv === null)) ? crypto.getRandomValues(new Uint8Array(12)) : _iv\n        if (typeof data === 'string')\n          data = (new TextEncoder()).encode(data)\n        const encrypted = await crypto.subtle.encrypt({ name: 'AES-GCM', iv: iv }, key, data)\n        if (returnType === 'encryptedContents') {\n          resolve({\n            content: ensureSafe(arrayBufferToBase64(encrypted)),\n            iv: ensureSafe(arrayBufferToBase64(iv))\n          })\n        } else {\n          resolve(encrypted)\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  wrap(k: CryptoKey, b: string, bodyType: 'string'): Promise<EncryptedContents>\n  wrap(k: CryptoKey, b: ArrayBuffer, bodyType: 'arrayBuffer'): Promise<EncryptedContents>\n  wrap(k: CryptoKey, b: string | ArrayBuffer, bodyType: 'string' | 'arrayBuffer'): Promise<EncryptedContents> {\n    return new Promise<EncryptedContents>((resolve) => {\n      let a\n      if (bodyType === 'string') {\n        a = sbCrypto.str2ab(b as string)\n      } else {\n        a = b as ArrayBuffer\n      }\n      sbCrypto.encrypt(a, k).then((c) => { resolve(c) })\n    })\n  }\n\n  /**\n   * SBCrypto.unwrap\n   *\n   * Decrypts a wrapped object, returns (promise to) decrypted contents\n   * per se (either as a string or arrayBuffer)\n   */\n  unwrap(k: CryptoKey, o: EncryptedContents, returnType: 'string'): Promise<string>\n  unwrap(k: CryptoKey, o: EncryptedContents, returnType: 'arrayBuffer'): Promise<ArrayBuffer>\n  unwrap(k: CryptoKey, o: EncryptedContents, returnType: 'string' | 'arrayBuffer') {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { content: t, iv: iv } = encryptedContentsMakeBinary(o)\n        const d = await crypto.subtle.decrypt({ name: 'AES-GCM', iv: iv }, k, t)\n        if (returnType === 'string')\n          resolve(new TextDecoder().decode(d))\n        else if (returnType === 'arrayBuffer')\n          resolve(d)\n      } catch (e) {\n        console.error(`unwrap(): unknown issue - rejecting: ${e}`)\n        console.trace()\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * SBCrypto.sign()\n   *\n   * Sign\n   */\n  sign(secretKey: CryptoKey, contents: string): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(contents);\n        let sign;\n        try {\n          sign = await crypto.subtle.sign('HMAC', secretKey, encoded)\n          resolve(ensureSafe(arrayBufferToBase64(sign)));\n        } catch (error) {\n          reject(error);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * SBCrypto.verify()\n   *\n   * Verify signature.\n   */\n  verify(verifyKey: CryptoKey, sign: string, contents: string) {\n    return new Promise<boolean>((resolve, reject) => {\n      try {\n        crypto.subtle\n          .verify('HMAC',\n            verifyKey,\n            base64ToArrayBuffer(sign),\n            sbCrypto.str2ab(contents))\n          .then((verified) => { resolve(verified) })\n      } catch (e) { reject(WrapError(e)) }\n    })\n  }\n\n  /**\n   * Standardized 'str2ab()' function, string to array buffer.\n   * This assumes on byte per character.\n   *\n   * @param {string} string\n   * @return {Uint8Array} buffer\n   */\n  str2ab(string: string): Uint8Array {\n    return new TextEncoder().encode(string);\n  }\n\n  /**\n   * Standardized 'ab2str()' function, array buffer to string.\n   * This assumes one byte per character.\n   *\n   * @param {Uint8Array} buffer\n   * @return {string} string\n   */\n  ab2str(buffer: Uint8Array): string {\n    return new TextDecoder('utf-8').decode(buffer);\n  }\n\n  /**\n   * SBCrypto.compareKeys()\n   *\n   * Compare JSON keys, true if the 'same', false if different. We consider\n   * them \"equal\" if both have 'x' and 'y' properties and they are the same.\n   * (Which means it doesn't care about which or either being public or private)\n   */\n  compareKeys(key1: Dictionary<any>, key2: Dictionary<any>): boolean {\n    if (key1 != null && key2 != null && typeof key1 === 'object' && typeof key2 === 'object')\n      return key1['x'] === key2['x'] && key1['y'] === key2['y'];\n    return false;\n  }\n\n  /**\n   * SBCrypto.lookupKey()\n   *\n   * Uses compareKeys() to check for presense of a key in a list of keys.\n   * Returns index of key if found, -1 if not found.\n   * \n   */\n  lookupKey(key: JsonWebKey, array: Array<JsonWebKey>): number {\n    for (let i = 0; i < array.length; i++)\n      if (sbCrypto.compareKeys(key, array[i])) return i;\n    return -1;\n  }\n\n  async channelKeyStringsToCryptoKeys(keyStrings: ChannelKeyStrings): Promise<ChannelKeys> {\n    return new Promise(async (resolve, reject) => {\n      let ownerKeyParsed: JsonWebKey = jsonParseWrapper(keyStrings.ownerKey, 'L1513')\n      Promise.all([\n        sbCrypto.importKey('jwk', ownerKeyParsed, 'ECDH', false, []),\n        sbCrypto.importKey('jwk', jsonParseWrapper(keyStrings.encryptionKey, 'L2250'), 'AES', false, ['encrypt', 'decrypt']),\n        sbCrypto.importKey('jwk', jsonParseWrapper(keyStrings.signKey, 'L2251'), 'ECDH', true, ['deriveKey']),\n        sbCrypto.importKey('jwk', sbCrypto.extractPubKey(jsonParseWrapper(keyStrings.signKey, 'L2252'))!, 'ECDH', true, []),\n        // this.identity!.privateKey // we know we have id by now\n      ])\n        .then(async (v) => {\n          if (DBG) console.log(\"++++++++ readyPromise() processed first batch of keys\")\n          const ownerKey = v[0]\n          const encryptionKey = v[1]\n          const signKey = v[2]\n          const publicSignKey = v[3]\n          resolve({\n            ownerKey: ownerKey,\n            ownerPubKeyX: ownerKeyParsed.x!,\n            encryptionKey: encryptionKey,\n            signKey: signKey,\n            // channelSignKey: channelSignKey,\n            publicSignKey: publicSignKey\n          })\n        })\n        .catch((e) => {\n          console.error(`readyPromise(): failed to import keys: ${e}`)\n          reject(e)\n        })\n    })\n\n\n  }\n\n} /* SBCrypto */\n//#endregion - SBCrypto Class\n\n/******************************************************************************************************/\n//#region Decorators\n\n// Decorator\n/** @private */\nfunction Memoize(target: any, propertyKey: string /* ClassGetterDecoratorContext */, descriptor?: PropertyDescriptor) {\n  if ((descriptor) && (descriptor.get)) {\n    let get = descriptor.get\n    descriptor.get = function () {\n      const prop = `__${target.constructor.name}__${propertyKey}__`\n      if (this.hasOwnProperty(prop)) {\n        const returnValue = this[prop as keyof PropertyDescriptor]\n        return (returnValue)\n      } else {\n        const returnValue = get.call(this)\n        Object.defineProperty(this, prop, { configurable: false, enumerable: false, writable: false, value: returnValue })\n        return returnValue\n      }\n    }\n  }\n}\n\n// Decorator\n/** @private */\nfunction Ready(target: any, propertyKey: string /* ClassGetterDecoratorContext */, descriptor?: PropertyDescriptor) {\n  if ((descriptor) && (descriptor.get)) {\n    let get = descriptor.get\n    descriptor.get = function () {\n      const obj = target.constructor.name\n      const prop = `${obj}ReadyFlag`\n      if (prop in this) {\n        const rf = \"readyFlag\" as keyof PropertyDescriptor\n        _sb_assert(this[rf], `${propertyKey} getter accessed but object ${obj} not ready (fatal)`)\n      }\n      const retValue = get.call(this)\n      _sb_assert(retValue != null, `${propertyKey} getter accessed in object type ${obj} but returns NULL (fatal)`)\n      return retValue\n    }\n  }\n}\n\nconst SB_CLASS_ARRAY = ['SBMessage', 'SBObjectHandle'] as const\ntype SB_CLASS_TYPES = typeof SB_CLASS_ARRAY[number]\ntype SB_CLASSES = SBMessage | SBObjectHandle\n\nconst SB_MESSAGE_SYMBOL = Symbol.for('SBMessage')\nconst SB_OBJECT_HANDLE_SYMBOL = Symbol.for('SBObjectHandle')\n\nfunction isSBClass(s: any): boolean {\n  return typeof s === 'string' && SB_CLASS_ARRAY.includes(s as SB_CLASS_TYPES)\n}\n\nfunction SBValidateObject(obj: SBObjectHandle, type: 'SBObjectHandle'): boolean\nfunction SBValidateObject(obj: SBMessage, type: 'SBMessage'): boolean\nfunction SBValidateObject(obj: SB_CLASSES | any, type: SB_CLASS_TYPES): boolean {\n  switch (type) {\n    case 'SBMessage': return SB_MESSAGE_SYMBOL in obj\n    case 'SBObjectHandle': return SB_OBJECT_HANDLE_SYMBOL in obj\n  }\n}\n\n// Decorator\n/** @private */\nfunction VerifyParameters(_target: any, _propertyKey: string /* ClassMethodDecoratorContext */, descriptor?: PropertyDescriptor): any {\n  if ((descriptor) && (descriptor.value)) {\n    const operation = descriptor.value\n    descriptor.value = function (...args: any[]) {\n      for (let x of args) {\n        const m = x.constructor.name\n        if (isSBClass(m)) _sb_assert(SBValidateObject(x, m), `invalid parameter: ${x} (expecting ${m})`)\n      }\n      return operation.call(this, ...args)\n    }\n  }\n}\n\n// // variation of \"ready\" pattern: an object is ready whenever it's validated,\n// // and any setter that might impact this needs to be decorated. \n// function Validate(_target: any, _propertyKey: string, descriptor: PropertyDescriptor) {\n//   const operation = descriptor.value\n//   descriptor.value = function (...args: any[]) {\n//     for (let x of args) {\n//       const m = x.constructor.name\n//       if (isSBClass(m)) _sb_assert(SBValidateObject(x, m), `invalid parameter: ${x} (expecting ${m})`)\n//     }\n//     return operation.call(this, ...args)\n//   }\n// \n\n// Decorator\n/** @private */\nfunction ExceptionReject(target: any, _propertyKey: string /* ClassMethodDecoratorContext */, descriptor?: PropertyDescriptor) {\n  if ((descriptor) && (descriptor.value)) {\n    const operation = descriptor.value\n    descriptor.value = function (...args: any[]) {\n      try {\n        return operation.call(this, ...args)\n      } catch (e) {\n        console.log(`ExceptionReject: ${WrapError(e)}`)\n        console.log(target)\n        console.log(_propertyKey)\n        console.log(descriptor)\n        return new Promise((_resolve, reject) => reject(`Reject: ${WrapError(e)}`))\n      }\n    }\n  }\n}\n\n//#endregion - local decorators\n\n/******************************************************************************************************/\n//#region - SETUP and STARTUP stuff (in progress)\n\n/**\n * This is the GLOBAL SBCrypto object, which is instantiated\n * immediately upon loading the jslib library.\n * \n * You should use this guy, not instantiate your own.\n */\nconst sbCrypto = new SBCrypto();\n\n\n/**\n * List of known servers. Nota bene: known does not mean *trusted*;\n * currently this will be mostly development servers. Please let us\n * know if there are global servers you would like us to add.\n */\nconst SBKnownServers: Array<SBServer> = [\n  {\n    // local servers\n    channel_server: 'http://localhost:3845',\n    channel_ws: 'ws://localhost:3845',\n    storage_server: 'http://localhost:3843',\n    shard_server: 'http://localhost:3841',\n  },\n  {\n    // Preview / Development Servers\n    channel_server: 'https://channel.384.dev',\n    channel_ws: 'wss://channel.384.dev',\n    storage_server: 'https://storage.384.dev',\n    shard_server: 'https://shard.3.8.4.land'\n  },\n  {\n    // This is both \"384.chat\" (production) and \"sn.ac\"\n    channel_server: 'https://r.384co.workers.dev',\n    channel_ws: 'wss://r.384co.workers.dev',\n    storage_server: 'https://s.384co.workers.dev'\n  },\n]\n\nconst knownStorageAndShardServers = [\n  'http://localhost:3841',\n  'http://localhost:3843',\n  'https://shard.3.8.4.land',\n  'https://storage.384.dev',\n  'https://storage.384co.workers.dev',\n  'https://shard.384.dev'\n]\n\n// let availableReadServers = new Promise<Array<string>>((resolve, _reject) => {\n//   const servers = [ 'http://localhost:3841', 'http://localhost:4000' ]\n//   Promise.all(servers.map(async (server) => {\n//     try {\n//       const methods = (await SBFetch(server + '/api/version'));\n//       const methodsJson = await methods.json();\n//       return { server, canRead: methodsJson.read, canWrite: methodsJson.write };\n//     } catch {\n//       return { server, canRead: false, canWrite: false };\n//     }\n//   })).then((capabilities) => {\n//     let readServers = capabilities.filter(c => c.canRead).map(c => c.server);\n//     readServers.push('https://shard.3.8.4.land');\n//     readServers.push('https://storage.384co.workers.dev'); \n//     console.warn(\"NOTE: ignore any 'ERR_CONNECTION_REFUSED' errors immediately above, they were expected\\n\"\n//     + \"(they are due to a limitation in your browser, making it impossible to silently verify connections)\\n\")\n//     resolve(readServers);\n//   });\n// });\n\n// const sbSetup = new Promise(async (resolve, _reject) => {\n//   await availableReadServers;\n//   resolve(availableReadServers)\n\n//   // try {\n//   //   const version = await SBFetch('http://localhost:3841/api/version')\n//   //   console.log('sbSetup() - version:')\n//   //   // let's list all headers:\n//   //   for (let h of (version.headers as any).entries()) {\n//   //     console.log(h)\n//   //   }\n//   //   version.json().then((v) => {\n//   //     console.log(v)\n//   //     resolve(v)\n//   //   })\n//   // } catch (e) {\n//   //   console.error(`sbSetup() - failed to fetch version: ${e}`)\n//   //   reject(e)\n//   // }\n// });\n\n// sbSetup.then((v) => {\n//   console.log(\"sbSetup() - success:\")\n//   console.log(v)\n// }).catch((e) => {\n//   console.error(`sbSetup() - failed to fetch version: ${e}`)\n// })\n\n\n\n//#endregion - SETUP and STARTUP stuff\n\n/******************************************************************************************************/\n//#region - SB384 Class\n\n/**\n *\n * @class\n * @constructor\n * @public\n *\n */\nclass SB384 {\n  ready: Promise<SB384>\n  sb384Ready: Promise<SB384>\n  #SB384ReadyFlag: boolean = false // must be named <class>ReadyFlag\n\n  #exportable_pubKey?: JsonWebKey\n  #exportable_privateKey?: JsonWebKey\n  #privateKey?: CryptoKey\n\n  #hash?: string // generic 'identifier' in the SB universe\n\n  /**\n   * Basic (core) capability object in SB.\n   *\n   * Note that all the getters below will throw an exception if the\n   * corresponding information is not ready.\n   *\n   * Like most SB classes, SB384 follows the \"ready template\" design\n   * pattern: the object is immediately available upon creation,\n   * but isn't \"ready\" until it says it's ready. See `Channel Class`_\n   * example below. Also see Design Note [4]_.\n   * \n   * { @link https://snackabra.io/jslib.html#dn-004-the-ready-pattern }\n   *\n   * @param key a jwk with which to create identity; if not provided,\n   * it will 'mint' (generate) them randomly, in other words it will\n   * default to creating a new identity (\"384\").\n   *\n   */\n  constructor(key: JsonWebKey | null = null) {\n    this.ready = new Promise<SB384>(async (resolve, reject) => {\n      try {\n        if (key) {\n          if (!key.d) {\n            // make sure key.d is present in the key, or it's probably a public key\n            const msg = 'ERROR creating SB384 object: invalid key (must be a PRIVATE key)'\n            console.error(msg)\n            reject(msg)\n          }\n          // we're given a key, and try to use it\n          this.#exportable_privateKey = key\n          const pk = sbCrypto.extractPubKey(key)\n          _sb_assert(pk, 'unable to extract public key')\n          this.#exportable_pubKey = pk!\n          this.#privateKey = await sbCrypto.importKey('jwk', key, 'ECDH', true, ['deriveKey'])\n        } else {\n          // generate a fresh ID\n          const keyPair = await sbCrypto.generateKeys()\n          this.#privateKey = keyPair.privateKey\n          this.#exportable_pubKey = await sbCrypto.exportKey('jwk', keyPair.publicKey)\n          this.#exportable_privateKey = await sbCrypto.exportKey('jwk', keyPair.privateKey)\n        }\n        this.#hash = await sbCrypto.sb384Hash(this.#exportable_pubKey)\n        sbCrypto.addKnownKey(this)\n        this.#SB384ReadyFlag = true\n        resolve(this)\n      } catch (e) {\n        reject('ERROR creating SB384 object failed: ' + WrapError(e))\n      }\n    })\n    this.sb384Ready = this.ready\n  }\n\n  /** @type {boolean}       */ @Memoize get readyFlag() { return this.#SB384ReadyFlag }\n  /** @type {JsonWebKey}    */ @Memoize @Ready get exportable_pubKey() { return this.#exportable_pubKey! }\n  /** @type {JsonWebKey}    */ @Memoize @Ready get exportable_privateKey() { return this.#exportable_privateKey! }\n  /** @type {CryptoKey}     */ @Memoize @Ready get privateKey() { return this.#privateKey! }\n  /** @type {CryptoKeyPair} */ // @Memoize @Ready get keyPair() { return this.#keyPair }\n\n  // note: this is the channelID if this SB384 corresponds to an owner ...\n  /** @type {string}        */ @Memoize @Ready get ownerChannelId() { return this.hash }\n\n  /**\n   * Returns a unique identifier for external use, that will be unique\n   * for any class or object that uses SB384 as it's root.\n   * \n   * This is deterministic, used to identify users, channels, etc.\n   * \n   * The hash is base64 encoding of the SHA-384 hash of the public key,\n   * taking the 'x' and 'y' fields. Note that it is slightly restricted, it only\n   * allows [A-Za-z0-9], eg does not allow the '_' or '-' characters. This makes the\n   * encoding more practical for end-user interactions like copy-paste. This\n   * is accomplished by simply re-hashing until the result is valid. This \n   * reduces the entropy of the channel ID by a neglible amount. \n   * \n   * Note this is not b62 encoding, which we use for 256-bit entities. This\n   * is still ~384 bits (e.g. x and y fields are each 384 bits, but of course\n   * the underlying total entropy isn't that, see <insert lots of fun math crypto\n   * study material heh>).\n   * \n   * NOTE: if you ever need to COMPARE hashes, well short version is that\n   * you cannot do so in the general case. You can use sbCrypto.compareHashWithKey()\n   * to compare a hash with a key, but you cannot compare two hashes. See the\n   * comparison function for more details.\n   */\n  @Memoize @Ready get hash() { return this.#hash! }\n\n  // older approach, used in similar contexts as hash() above\n  @Memoize @Ready get _id() { return JSON.stringify(this.exportable_pubKey!) }\n\n} /* class SB384 */\n//#endregion - SB384 Class\n\n/**\n * Class SBMessage\n *\n * Body should be below 32KiB, though it tolerates up to 64KiB\n * \n * \n *\n * @class\n * @constructor\n * @public\n */\nclass SBMessage {\n  ready\n  channel: Channel\n  contents: SBMessageContents\n  #encryptionKey?: CryptoKey\n  #sendToPubKey?: JsonWebKey\n  [SB_MESSAGE_SYMBOL] = true\n  MAX_SB_BODY_SIZE = 64 * 1024 * 1.5 // allow for base64 overhead plus extra\n\n  /* SBMessage */\n  constructor(channel: Channel, bodyParameter: SBMessageContents | string = '', sendToJsonWebKey?: JsonWebKey) {\n    if (typeof bodyParameter === 'string') {\n      this.contents = { encrypted: false, isVerfied: false, contents: bodyParameter, sign: '', image: '', imageMetaData: {} }\n    } else {\n      this.contents = { encrypted: false, isVerfied: false, contents: '', sign: '', image: bodyParameter.image, imageMetaData: bodyParameter.imageMetaData }\n    }\n    let body = this.contents\n    let bodyJson = JSON.stringify(body)\n    if (sendToJsonWebKey) this.#sendToPubKey = sbCrypto.extractPubKey(sendToJsonWebKey)!\n\n    _sb_assert(bodyJson.length < this.MAX_SB_BODY_SIZE,\n      `SBMessage(): body must be smaller than ${this.MAX_SB_BODY_SIZE / 1024} KiB (we got ${bodyJson.length / 1024})})`)\n    this.channel = channel\n    this.ready = new Promise<SBMessage>((resolve) => {\n      // console.log(channel)\n      channel.channelReady.then(async () => {\n        this.contents.sender_pubKey = this.channel.exportable_pubKey!\n        if (channel.userName) this.contents.sender_username = channel.userName\n        const signKey = this.channel.channelSignKey\n        const sign = sbCrypto.sign(signKey, body.contents)\n        const image_sign = sbCrypto.sign(signKey!, this.contents.image)\n        const imageMetadata_sign = sbCrypto.sign(signKey, JSON.stringify(this.contents.imageMetaData))\n        if (this.#sendToPubKey) {\n          this.#encryptionKey = await sbCrypto.deriveKey(\n            this.channel.privateKey,\n            await sbCrypto.importKey(\"jwk\", this.#sendToPubKey, \"ECDH\", true, []),\n            \"AES\", false, [\"encrypt\", \"decrypt\"]\n          )\n        } else {\n          this.#encryptionKey = this.channel.keys.encryptionKey\n        }\n        Promise.all([sign, image_sign, imageMetadata_sign]).then((values) => {\n          this.contents.sign = values[0]\n          this.contents.image_sign = values[1]\n          this.contents.imageMetadata_sign = values[2]\n          this.contents.imgObjVersion = '2' // default for anything new\n          // NOTE: mtg:adding this breaks messages... but I dont understand why\n          // const isVerfied = await this.channel.api.postPubKey(this.channel.exportable_pubKey!)\n          // console.log('here',isVerfied)\n          // this.contents.isVerfied = isVerfied?.success ? true : false\n          // console.log(this)\n          resolve(this)\n        })\n      })\n    })\n  }\n\n  @Ready get encryptionKey() { return this.#encryptionKey }\n  get sendToPubKey() { return this.#sendToPubKey }\n\n  /**\n   * SBMessage.send()\n   *\n   * @param {SBMessage} message - the message object to send\n   */\n  send() {\n    return new Promise<string>((resolve, reject) => {\n      this.ready.then(() => {\n        this.channel.send(this).then((result) => {\n          if (result === \"success\") {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    })\n    // TODO: i've punted on queue here <--- queueMicrotaks maybe?\n  }\n} /* class SBMessage */\n\n\n/**\n * Channel Class\n *\n * Join a channel, returns channel object.\n *\n * Currently, you must have an identity when connecting, because every single\n * message is signed by sender. TODO is to look at how to provide a 'listening'\n * mode on channels.\n *\n * Most classes in SB follow the \"ready\" template: objects can be used\n * right away, but they decide for themselves if they're ready or not.\n */\nabstract class Channel extends SB384 {\n  /**\n   * Channel Class\n   * \n   * This is the main work horse for channels. However, it is ABSTRACT,\n   * meaning you need a 'concrete' class to use it.\n   * \n   * Currently you have two options:\n   * \n   * You can create a ChannelEndpoint object. That can do everything against\n   * a channel except send/receive messages synchronously.\n   * \n   * The other option is ChannelSocket, which does everything ChannelEndpoint\n   * does, but ALSO connects with a web socket.\n   * \n   * So unless you're actually connecting with intent on interactive, fast\n   * messaging, an endpoint is sufficient. In fact, UNLESS you are going to\n   * do send/receive, you should use ChannelEndpoint, not ChannelSocket.\n   * \n   * In our current thinking, 'Channel' captures pretty much everything, \n   * except how you want (instant) messaging to be hooked up. So for example, our\n   * next class might be 'ChannelP2P', which would be setting up webrtc\n   * data channel connections in a mesh.\n   * \n   * Note that you don't need to worry about what API calls involve race\n   * conditions and which don't, jslib will do that for you.\n   * \n   * @param Snackabra - server to join\n   * @param JsonWebKey - key to use to join (optional)\n   * @param string - the <a href=\"../glossary.html#term-channel-name\">Channel Name</a> to find on that server (optional)\n   * \n   */\n\n  // ready: Promise<Channel>\n  channelReady: Promise<Channel>\n  #ChannelReadyFlag: boolean = false // must be named <class>ReadyFlag\n\n  #sbServer: SBServer\n  motd?: string = ''\n  locked?: boolean = false\n  owner: boolean = false\n  admin: boolean = false\n  adminData?: Dictionary<any> // TODO: make into getter\n\n  verifiedGuest: boolean = false\n  userName: string = ''\n\n  #channelKeys?: ChannelKeys;\n  #channelSignKey?: CryptoKey;\n  #channelId?: string\n\n  #cursor: string = ''; // last (oldest) message key seen\n  #channelApi: string = '';\n  #channelServer: string = '';\n\n  abstract send(message: SBMessage): Promise<string>\n\n  constructor(sbServer: SBServer, key?: JsonWebKey, channelId?: string) {\n    if (DBG2) console.log(\"CONSTRUCTOR new channel\")\n    _sb_assert(channelId, \"Channel(): as of jslib 1.1.x the channelId must be provided\")\n    super(key)\n    this.#sbServer = sbServer\n    this.#channelId = channelId\n    this.#channelApi = sbServer.channel_server + '/api/'\n    this.#channelServer = sbServer.channel_server + '/api/room/'\n\n    this.channelReady = new Promise<Channel>(async (resolve, reject) => {\n      await this.sb384Ready\n      if (!this.#channelId) {\n        reject(\"Channel(): no channel ID provided\")\n      }\n      // xTODO: check all known servers for this channel\n      SBFetch(this.#sbServer.channel_server + '/api/room/' + stripA32(this.#channelId!) + '/getChannelKeys',\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n        })\n        .then((response: Response) => {\n          if (!response.ok)\n            reject(\"ChannelEndpoint(): failed to get channel keys (network response not ok)\");\n          return response.json() as unknown as ChannelKeyStrings // continues processing below\n        })\n        .then(async (data) => {\n          if (data.error)\n            reject(\"ChannelEndpoint(): failed to get channel keys (error in response)\");\n          await this.#loadKeys(data)\n          // now we're ready\n          this.#ChannelReadyFlag = true\n          resolve(this)\n        })\n        .catch((e: Error) => { reject(\"ChannelApi Error [1]: \" + WrapError(e)) })\n    })\n  }\n\n  /** @private */\n  async #setKeys(k: ChannelKeys) {\n    this.#channelKeys = k\n    if (DBG) {\n      console.log(\"set channelkeys to 'k':\")\n      console.log(k)\n    }\n    _sb_assert(this.#channelKeys, \"Channel.importKeys: no channel keys (?)\")\n    _sb_assert(this.#channelKeys!.publicSignKey, \"Channel.importKeys: no public sign key (?)\")\n    _sb_assert(this.privateKey, \"Channel.importKeys: no private key (?)\")\n    this.#channelSignKey = await sbCrypto.deriveKey(\n      this.privateKey!, this.#channelKeys.publicSignKey, 'HMAC', false, ['sign', 'verify']\n    )\n  }\n\n  /** @private */\n  async #loadKeys(keyStrings: ChannelKeyStrings): Promise<void> {\n    if (DBG) {\n      console.log(\"loading keys:\")\n      console.log(keyStrings)\n    }\n    await this.#setKeys(await sbCrypto.channelKeyStringsToCryptoKeys(keyStrings))\n  }\n\n  @Memoize @Ready get keys() { return this.#channelKeys! }\n  @Memoize @Ready get sbServer() { return this.#sbServer }\n  @Memoize @Ready get readyFlag(): boolean { return this.#ChannelReadyFlag }\n  @Memoize @Ready get api() { return this } // for compatibility\n  @Memoize @Ready get channelId() { return this.#channelId }\n  @Memoize @Ready get channelSignKey() { return (this.#channelSignKey!) }\n  // @Memoize @Ready get capacity() { return this.#capacity }\n\n  /**\n   * Channel.getLastMessageTimes\n   */\n  getLastMessageTimes() {\n    // xTODO: convert to new API call model\n    return new Promise((resolve, reject) => {\n      SBFetch(this.#channelApi + '/getLastMessageTimes', {\n        method: 'POST', body: JSON.stringify([this.channelId])\n      }).then((response: Response) => {\n        if (!response.ok) {\n          reject(new Error('Network response was not OK'));\n        }\n        return response.json();\n      }).then((message_times) => {\n        resolve(message_times[this.channelId!]);\n      }).catch((e: Error) => {\n        reject(e);\n      });\n    });\n  }\n\n  /**\n   * Channel.getOldMessages\n   * \n   * Will return most recent messages from the channel.\n   * \n   * @param currentMessagesLength - number to fetch (default 100)\n   * @param paginate - if true, will paginate from last request (default false)\n   *\n   */\n  getOldMessages(currentMessagesLength: number = 100, paginate: boolean = false): Promise<Array<ChannelMessage>> {\n    // xTODO: convert to new API call model\n    return new Promise(async (resolve, reject) => {\n      if (!this.channelId) {\n        reject(\"Channel.getOldMessages: no channel ID (?)\")\n      }\n      // make sure channel is ready\n      if (!this.#ChannelReadyFlag) {\n        if (DBG) console.log(\"Channel.getOldMessages: channel not ready (we will wait)\")\n        await (this.channelReady)\n        if (!this.#channelKeys)\n          reject(\"Channel.getOldMessages: no channel keys (?) despite waiting\")\n      }\n      // TODO: we want to cache (merge) these messages into a local cached list (since they are immutable)\n      let cursorOption = '';\n      if (paginate)\n        cursorOption = '&cursor=' + this.#cursor;\n      SBFetch(this.#channelServer + stripA32(this.channelId!) + '/oldMessages?currentMessagesLength=' + currentMessagesLength + cursorOption, {\n        method: 'GET',\n      }).then(async (response: Response) => {\n        if (!response.ok) reject(new Error('Network response was not OK'));\n        return response.json();\n      }).then((messages) => {\n        if (DBG) {\n          console.log(\"getOldMessages\")\n          console.log(messages)\n        }\n        Promise.all(Object\n          .keys(messages)\n          .filter((v) => messages[v].hasOwnProperty('encrypted_contents'))\n          .map((v) => deCryptChannelMessage(v, messages[v].encrypted_contents, this.#channelKeys!)))\n          .then((unfilteredDecryptedMessageArray) => unfilteredDecryptedMessageArray.filter((v): v is ChannelMessage => Boolean(v)))\n          .then((decryptedMessageArray) => {\n            let lastMessage = decryptedMessageArray[decryptedMessageArray.length - 1];\n            if (lastMessage)\n              this.#cursor = lastMessage._id || lastMessage.id || '';\n            if (DBG2) console.log(decryptedMessageArray)\n            resolve(decryptedMessageArray)\n          })\n      }).catch((e: Error) => {\n        reject(e);\n      });\n    });\n  }\n\n  async #callApi(path: string): Promise<any>\n  async #callApi(path: string, body: any): Promise<any>\n  async #callApi(path: string, body?: any): Promise<any> {\n    if (DBG) console.log(\"#callApi:\", path)\n    if (!this.#ChannelReadyFlag) {\n      console.log(\"ChannelApi.#callApi: channel not ready (we will wait)\")\n      await (this.channelReady)\n    }\n    const method = body ? 'POST' : 'GET'\n    return new Promise(async (resolve, reject) => {\n      if (!this.channelId) reject(\"ChannelApi.#callApi: no channel ID (?)\")\n      await (this.ready)\n      let authString = '';\n      const token_data: string = new Date().getTime().toString()\n      authString = token_data + '.' + await sbCrypto.sign(this.channelSignKey, token_data)\n      let init: RequestInit = {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'authorization': authString\n        }\n      }\n      if (body)\n        init.body = JSON.stringify(body);\n      await (this.ready)\n      SBFetch(this.#channelServer + stripA32(this.channelId!) + path, init)\n        .then(async (response: Response) => {\n          const retValue = await response.json()\n          if ((!response.ok) || (retValue.error)) {\n            let apiErrorMsg = 'Network or Server error on Channel API call'\n            if (response.status) apiErrorMsg += ' [' + response.status + ']'\n            if (retValue.error) apiErrorMsg += ': ' + retValue.error\n            reject(new Error(apiErrorMsg))\n          } else {\n            resolve(retValue)\n          }\n        })\n        .catch((e: Error) => { reject(\"ChannelApi (SBFetch) Error [2]: \" + WrapError(e)) })\n    })\n  }\n\n  /**\n   * Update (set) the capacity of the channel; Owner only\n   */\n  @Ready updateCapacity(capacity: number) { return this.#callApi('/updateRoomCapacity?capacity=' + capacity) }\n  /**\n   * getCapacity\n   */\n  @Ready getCapacity() { return (this.#callApi('/getRoomCapacity')) }\n  /**\n   * getStorageLimit (current storage budget)\n   */\n  @Ready getStorageLimit() { return (this.#callApi('/getStorageLimit')) }\n  /**\n   * getMother\n   * \n   * Get the channelID from which this channel was budded. Note that\n   * this is only accessible by Owner (as well as hosting server)\n   */\n  @Ready getMother() { return (this.#callApi('/getMother')) }\n  /**\n   * getJoinRequests\n   */\n  @Ready getJoinRequests() { return this.#callApi('/getJoinRequests') }\n  /**\n   * isLocked\n   */\n  @ExceptionReject isLocked() { return new Promise<boolean>((resolve) => (this.#callApi('/roomLocked')).then((d) => resolve(d.locked === true))) }\n  /**\n   * Set message of the day\n   */\n  @Ready setMOTD(motd: string) { return this.#callApi('/motd', { motd: motd }) }\n  /**\n   * Channel.getAdminData\n   */\n  @Ready getAdminData(): Promise<ChannelAdminData> { return this.#callApi('/getAdminData') }\n\n  /**\n   * Channel.downloadData\n   */\n  @Ready downloadData() {\n    return new Promise((resolve, reject) => {\n      this.#callApi('/downloadData')\n        .then((data: Dictionary<any>) => {\n          console.log(\"From downloadData:\")\n          console.log(data);\n          Promise.all(Object\n            .keys(data)\n            .filter((v) => {\n              const regex = new RegExp(this.channelId as string);\n              if (v.match(regex)) {\n                const message = jsonParseWrapper(data[v], \"L3318\")\n                if (message.hasOwnProperty('encrypted_contents')) {\n                  if (DBG) console.log(\"Received message: \", message)\n                  return message;\n                }\n              }\n            })\n            .map((v) => {\n              const message = jsonParseWrapper(data[v], \"L3327\")\n              if (DBG2) console.log(v, message.encrypted_contents, this.keys)\n              return deCryptChannelMessage(v, message.encrypted_contents, this.keys)\n            }))\n            .then((unfilteredDecryptedMessageArray) => unfilteredDecryptedMessageArray.filter((v): v is ChannelMessage => Boolean(v)))\n            .then((decryptedMessageArray) => {\n              let storage: any = {}\n              decryptedMessageArray.forEach((message) => {\n                if (!message.control && message.imageMetaData!.imageId) {\n                  const f_control_msg = decryptedMessageArray.find((ctrl_msg) => ctrl_msg.id && ctrl_msg.id == message.imageMetaData!.imageId)\n                  const p_control_msg = decryptedMessageArray.find((ctrl_msg) => ctrl_msg.id && ctrl_msg.id == message.imageMetaData!.previewId)\n                  storage[`${message.imageMetaData!.imageId}.f`] = f_control_msg?.verificationToken\n                  storage[`${message.imageMetaData!.previewId}.p`] = p_control_msg?.verificationToken\n                }\n              })\n              resolve({ storage: storage, channel: data })\n            })\n        }).catch((error: Error) => {\n          reject(error);\n        });\n    });\n  }\n\n  @Ready uploadChannel(channelData: ChannelData) {\n    return this.#callApi('/uploadRoom', channelData)\n  }\n\n  @Ready authorize(ownerPublicKey: Dictionary<any>, serverSecret: string) {\n    return this.#callApi('/authorizeRoom', { roomId: this.channelId, SERVER_SECRET: serverSecret, ownerKey: ownerPublicKey })\n  }\n\n  // deprecated - this is now implicitly done on first connect\n  @Ready postPubKey(_exportable_pubKey: JsonWebKey): Promise<{ success: boolean }> {\n    throw new Error(\"postPubKey() deprecated\")\n  }\n\n  @Ready storageRequest(byteLength: number): Promise<Dictionary<any>> {\n    return this.#callApi('/storageRequest?size=' + byteLength)\n  }\n\n  /**\n   * Channel.lock()\n   * \n   * Locks the channel, so that new visitors need an \"ack\" to join..\n   * \n   */\n  @Ready lock() {\n    console.warn(\"WARNING: lock() on channel api has not been tested/debugged fully ..\")\n    return new Promise(async (resolve, reject) => {\n      if (this.keys.lockedKey == null && this.admin) {\n        const _locked_key: CryptoKey = await crypto.subtle.generateKey({\n          name: 'AES-GCM', length: 256\n        }, true, ['encrypt', 'decrypt']);\n        const _exportable_locked_key: Dictionary<any> = await crypto.subtle.exportKey('jwk', _locked_key);\n        this.#callApi('/lockRoom')\n          .then((data: Dictionary<any>) => {\n            if (data.locked) {\n              this.acceptVisitor(JSON.stringify(this.exportable_pubKey!))\n                .then(() => {\n                  resolve({ locked: data.locked, lockedKey: _exportable_locked_key })\n                })\n            }\n          })\n          .catch((error: Error) => { reject(error) });\n      } else {\n        reject(new Error('no lock key or not admin'));\n      }\n    });\n  }\n\n  // TODO: test this guy, i doubt if it's working post-re-factor\n  @Ready acceptVisitor(pubKey: string) {\n    console.warn(\"WARNING: acceptVisitor() on channel api has not been tested/debugged fully ..\")\n    // todo: assert that you're owner\n    return new Promise(async (resolve, reject) => {\n      if (!this.privateKey /* this.keys.privateKey */)\n        reject(new Error(\"acceptVisitor(): no private key\"))\n      const shared_key = await sbCrypto.deriveKey(\n        this.privateKey /* this.keys.privateKey! */,\n        await sbCrypto.importKey('jwk', jsonParseWrapper(pubKey, 'L2276'), 'ECDH', false, []), 'AES', false, ['encrypt', 'decrypt']\n      );\n      const _encrypted_locked_key = await sbCrypto.encrypt(sbCrypto.str2ab(JSON.stringify(this.keys.lockedKey!)), shared_key)\n      resolve(this.#callApi('/acceptVisitor',\n        {\n          pubKey: pubKey, lockedKey: JSON.stringify(_encrypted_locked_key)\n        }))\n    });\n  }\n\n  // 2023.05.06:\n  // In previous hosting strategy, the concept was that the host / SSO would\n  // create and allocate a channel, but the SSO would keep track of owner key;\n  // thus we needed a mechanism to rotate the owner key, should the user\n  // wish to not have the SSO have access.  That way on a per-hosting service\n  // basis, the provider could decide policy (eg an enterprise might disallow\n  // owner key rotation).  In our new (2023) design, we have generalized channels\n  // to be (much) more than a \"room\".  In the new design, channels are also\n  // carriers of api and storage budget, and to control all the keys, a user\n  // can \"budd()\" off a channel provided by server. Thus in the new design,\n  // owner keys are NEVER rotated (other keys can be rotated). \n  @Ready ownerKeyRotation() {\n    throw new Error(\"ownerKeyRotation() replaced by new budd() approach\")\n  }\n\n  /**\n   * returns a storage token (promise); basic consumption of channel budget\n   */\n  getStorageToken(size: number): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.#callApi(`/storageRequest?size=${size}`)\n        .then((storageTokenReq) => {\n          if (storageTokenReq.hasOwnProperty('error')) reject(`storage token request error (${storageTokenReq.error})`)\n          resolve(JSON.stringify(storageTokenReq))\n        })\n        .catch((e: Error) => { reject(\"ChannelApi (getStorageToken) Error [3]: \" + WrapError(e)) })\n    });\n  }\n\n  // ToDo: if both keys and storage are specified, should we check for server secret?\n\n  /**\n   * \"budd\" will spin a channel off an existing one.\n   * You need to provide one of the following combinations of info:\n   * \n   * - nothing: create new channel and transfer all storage budget\n   * - just storage amount: creates new channel with that amount, returns new channel\n   * - just a target channel: moves all storage budget to that channel\n   * - just keys: creates new channel with those keys and transfers all storage budget\n   * - keys and storage amount: creates new channel with those keys and that storage amount\n   * \n   * In the first (special) case you can just call budd(), in the other\n   * cases you need to fill out the 'options' object.\n   * \n   * Another way to remember the above: all combinations are valid except\n   * both a target channel and assigning keys.\n   * \n   * Note: if you're specifying the target channel, then the return values will\n   * not include the private key (that return value will be empty).\n   * \n   * Same channels as mother and target will be a no-op, regardless of other\n   * parameters.\n   * \n   * Note: if you provide a value for 'storage', it cannot be undefined. If you\n   * wish it to be Infinity, then you need to omit the property from options.\n   * \n   * Future: negative amount of storage leaves that amount behind, the rest is transferred\n   * \n   */\n  budd(): Promise<SBChannelHandle> // clone and full plunder\n  budd(options:\n    {\n      keys?: JsonWebKey;\n      storage?: number;\n      targetChannel?: SBChannelId;\n    }): Promise<SBChannelHandle> // clone with specified keys, storage, and target channel\n  @Ready budd(options?:\n    {\n      keys?: JsonWebKey;\n      storage?: number;\n      targetChannel?: SBChannelId;\n    }): Promise<SBChannelHandle> {\n    let { keys, storage, targetChannel } = options ?? {};\n    return new Promise<SBChannelHandle>(async (resolve, reject) => {\n      if ((options) && (options.hasOwnProperty('storage')) && (options.storage === undefined))\n        // this catches the case where callee intended storage to have a value but somehow it didn't\n        reject(\"If you omit 'storage' it defaults to Infinity, but you cannot set 'storage' to undefined\")\n      try {\n        if (!storage) storage = Infinity;\n        if (targetChannel) {\n          // just a straight up transfer of budget\n          if (this.#channelId == targetChannel) throw new Error(\"[budd()]: You can't specify the same channel as targetChannel\")\n          if (keys) throw new Error(\"[budd()]: You can't specify both a target channel and keys\");\n          resolve(this.#callApi(`/budd?targetChannel=${targetChannel}&transferBudget=${storage}`))\n        } else {\n          // we are creating a new channel\n          const { channelData, exportable_privateKey } = await newChannelData(keys ? keys : null);\n          let resp: Dictionary<any> = await this.#callApi(`/budd?targetChannel=${channelData.roomId}&transferBudget=${storage}`, channelData)\n          if (resp.success) {\n            resolve({ channelId: channelData.roomId!, key: exportable_privateKey })\n          } else {\n            reject(JSON.stringify(resp));\n          }\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  // // currently not used by webclient, so these are not hooked up\n  // notifications() { }\n  // getPubKeys() { }\n  // ownerUnread() { }\n  // registerDevice() { }\n\n} /* class Channel */\n//#region\n\n// catch and call out if this is missing\nfunction noMessageHandler(_m: ChannelMessage): void { _sb_assert(false, \"NO MESSAGE HANDLER\"); }\n\n/**\n * ChannelSocket\n */\nexport class ChannelSocket extends Channel {\n  ready: Promise<ChannelSocket>\n  channelSocketReady: Promise<ChannelSocket>\n  #ChannelSocketReadyFlag: boolean = false // must be named <class>ReadyFlag\n\n  #ws: WSProtocolOptions\n  #sbServer: SBServer\n  #onMessage = noMessageHandler // the user message handler\n  #ack: Map<string, (value: string | PromiseLike<string>) => void> = new Map()\n  #traceSocket: boolean = false // should not be true in production\n  #resolveFirstMessage: (value: ChannelSocket | PromiseLike<ChannelSocket>) => void = () => { _sb_exception('L2461', 'this should never be called') }\n  #firstMessageEventHandlerReference: (e: MessageEvent<any>) => void = (_e: MessageEvent<any>) => { _sb_exception('L2462', 'this should never be called') }\n\n  /**\n   * \n   * ChannelSocket constructor\n   * \n   * This extends Channel. Use this instead of ChannelEndpoint if you\n   * are going to be sending/receiving messages.\n   * \n   * You send by calling channel.send(msg: SBMessage | string), i.e.\n   * you can send a quick string.\n   * \n   * You can set your message handler upon creation, or later by using\n   * channel.onMessage = (m: ChannelMessage) => { ... }.\n   * \n   * This implementation uses websockeds to connect all participating\n   * clients through a single servlet (somewhere), with very fast\n   * forwarding.\n   * \n   * You don't need to worry about managing resources, like closing it,\n   * or checking if it's open. It will close based on server behavior,\n   * eg it's up to the server to close the connection based on inactivity.\n   * The ChannelSocket will re-open if you try to send against a closed\n   * connection. You can check status with channelSocket.status if you\n   * like, but it shouldn't be necessary.\n   * \n   * Messages are delivered as type ChannelMessage. Usually they are\n   * simple blobs of data that are encrypted: the ChannelSocket will\n   * decrypt them for you. It also handles a simple ack/nack mechanism\n   * with the server transparently.\n   * \n   * Be aware that if ChannelSocket doesn't know how to handle a certain\n   * message, it will generally just forward it to you as-is. \n   * \n   * @param sbServer \n   * @param onMessage \n   * @param key \n   * @param channelId \n   */\n  constructor(sbServer: SBServer, onMessage: (m: ChannelMessage) => void, key?: JsonWebKey, channelId?: string) {\n    super(sbServer, key, channelId /*, identity ? identity : new Identity() */) // initialize 'channel' parent\n    _sb_assert(sbServer.channel_ws, 'ChannelSocket(): no websocket server name provided')\n    _sb_assert(onMessage, 'ChannelSocket(): no onMessage handler provided')\n    const url = sbServer.channel_ws + '/api/room/' + channelId + '/websocket'\n    this.#onMessage = onMessage\n    this.#sbServer = sbServer\n    this.#ws = {\n      url: url,\n      // websocket: new WebSocket(url),\n      ready: false,\n      closed: false,\n      timeout: 2000\n    }\n    this.ready = this.channelSocketReady = this.#channelSocketReadyFactory()\n  }\n\n  #channelSocketReadyFactory() {\n    if (DBG) console.log(\"++++ CREATING ChannelSocket.readyPromise()\")\n    return new Promise<ChannelSocket>((resolve, reject) => {\n      if (DBG) console.log(\"++++ STARTED ChannelSocket.readyPromise()\")\n      this.#resolveFirstMessage = resolve\n      const url = this.#ws.url\n      if (DBG) { console.log(\"++++++++ readyPromise() has url:\"); console.log(url); }\n      if (!this.#ws.websocket) this.#ws.websocket = new WebSocket(this.#ws.url)\n      if (this.#ws.websocket.readyState === 3) {\n        // it's been closed\n        this.#ws.websocket = new WebSocket(url)\n      } else if (this.#ws.websocket.readyState === 2) {\n        console.warn(\"STRANGE - trying to use a ChannelSocket that is in the process of closing ...\")\n        this.#ws.websocket = new WebSocket(url)\n      }\n      this.#ws.websocket.addEventListener('open', () => {\n        this.#ws.closed = false\n        // need to make sure parent is ready (and has keys)\n        this.channelReady.then(() => {\n          _sb_assert(this.exportable_pubKey, \"ChannelSocket.readyPromise(): no exportable pub key?\")\n          this.#ws.init = { name: JSON.stringify(this.exportable_pubKey) }\n          if (DBG) { console.log(\"++++++++ readyPromise() constructed init:\"); console.log(this.#ws.init); }\n          this.#ws.websocket!.send(JSON.stringify(this.#ws.init)) // this should trigger a response with keys\n        })\n      })\n      this.#firstMessageEventHandlerReference = this.#firstMessageEventHandler.bind(this)\n      this.#ws.websocket.addEventListener('message', this.#firstMessageEventHandlerReference);\n      this.#ws.websocket.addEventListener('close', (e: CloseEvent) => {\n        this.#ws.closed = true\n        if (!e.wasClean) {\n          console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.#sbServer.channel_server}`)\n        } else {\n          if (e.reason.includes(\"does not have an owner\"))\n            reject(`No such channel on this server (${this.#sbServer.channel_server})`)\n          else console.log('ChannelSocket() was closed (cleanly): ', e.reason)\n        }\n        reject('wbSocket() closed before it was opened (?)')\n      })\n      this.#ws.websocket.addEventListener('error', (e) => {\n        this.#ws.closed = true\n        console.log('ChannelSocket() error: ', e)\n        reject('ChannelSocket creation error (see log)')\n      })\n      // let us set a timeout to catch and make sure this thing resoles within 0.5 seconds\n      // todo: add as a decorator for ready-template style constructors\n      setTimeout(() => {\n        if (!this.#ChannelSocketReadyFlag) {\n          console.warn(\"ChannelSocket() - this socket is not resolving (waited 10s) ...\")\n          console.log(this)\n          reject('ChannelSocket() - this socket is not resolving (waited 10s) ...')\n        } else {\n          if (DBG) {\n            console.log(\"ChannelSocket() - this socket resolved\")\n            console.log(this)\n          }\n        }\n      }, 10000)\n    })\n\n  }\n\n  /** @private */\n  async #processMessage(msg: any) {\n    let m = msg.data\n    if (this.#traceSocket) {\n      console.log(\"... raw unwrapped message:\")\n      console.log(structuredClone(m))\n    }\n    const data = jsonParseWrapper(m, 'L1489')\n    if (this.#traceSocket) {\n      console.log(\"... json unwrapped version of raw message:\")\n      console.log(Object.assign({}, data))\n    }\n    if (typeof this.#onMessage !== 'function')\n      _sb_exception('ChannelSocket', 'received message but there is no handler')\n\n    const message = data as ChannelMessage\n    try {\n      // messages are structured a bit funky for historical reasons\n      const m01 = Object.entries(message)[0][1]\n\n      if (Object.keys(m01)[0] === 'encrypted_contents') {\n        if (DBG) {\n          console.log(\"++++++++ #processMessage: received message:\")\n          console.log(m01.encrypted_contents.content)\n        }\n\n        // check if this message is one that we've recently sent\n        const hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(m01.encrypted_contents.content))\n        const ack_id = arrayBufferToBase64(hash)\n        if (DBG2) console.log(\"Received message with hash:\", ack_id)\n        const r = this.#ack.get(ack_id)\n        if (r) {\n          if (this.#traceSocket) console.log(`++++++++ #processMessage: found matching ack for id ${ack_id}`)\n          this.#ack.delete(ack_id)\n          r(\"success\") // we first resolve that outstanding send (and then also deliver message)\n        }\n\n        const m00 = Object.entries(data)[0][0]\n        // the 'iv' field as incoming should be base64 encoded, with 16 b64\n        // characters translating here to 12 bytes\n        const iv_b64 = m01.encrypted_contents.iv\n        // open question: if there are any issues decrypting, should we forward as-is?\n        if ((iv_b64) && (_assertBase64(iv_b64)) && (iv_b64.length == 16)) {\n          m01.encrypted_contents.iv = base64ToArrayBuffer(iv_b64)\n          try {\n            const m = await deCryptChannelMessage(m00, m01.encrypted_contents, this.keys)\n            if (!m)\n              return // skip if there's an issue\n            if (this.#traceSocket) {\n              console.log(\"++++++++ #processMessage: passing to message handler:\")\n              console.log(Object.assign({}, m))\n            }\n            // we process 'whispers' here, they're 1-1 messages, and can be skipped if not for us\n\n\n            this.#onMessage(m)\n          } catch {\n            console.warn('Error decrypting message, dropping (ignoring) message')\n          }\n        } else {\n          console.error('#processMessage: - iv is malformed, should be 16-char b64 string (ignoring)')\n        }\n      } else {\n        // other (future) message types would be parsed here\n        console.warn(\"++++++++ #processMessage: can't decipher message, passing along unchanged:\")\n        console.log(Object.assign({}, message))\n        this.onMessage(message)\n      }\n    } catch (e) {\n      console.log(`++++++++ #processMessage: caught exception while decyphering (${e}), passing it along unchanged`)\n      this.onMessage(message)\n      // console.error(`#processmessage: cannot handle locked channels yet (${e})`)\n      // TODO: locked key might never resolve (if we don't have it)\n      // TODO: ... generally speaking need to test/fix locked channels\n      // unwrapped = await sbCrypto.unwrap(this.keys.lockedKey, message.encrypted_contents, 'string')\n    }\n  }\n\n  #insideFirstMessageHandler(e: MessageEvent) {\n    console.warn(\"WARNING: firstMessageEventHandler() called recursively (?)\")\n    console.warn(e)\n  }\n\n  // we use (bound) message handlers orchestrate who handles first message (and only once)\n  #firstMessageEventHandler(e: MessageEvent) {\n    if (this.#traceSocket) console.log(\"FIRST MESSAGE HANDLER CALLED\")\n    const blocker = this.#insideFirstMessageHandler.bind(this)\n    this.#ws.websocket!.addEventListener('message', blocker)\n    this.#ws.websocket!.removeEventListener('message', this.#firstMessageEventHandlerReference)\n    // first time should be a handshake of keys, they should match what we have;\n    // there may be other information in the message (eg motd, roomLocked)\n    if (DBG) { console.log(\"++++++++ readyPromise() received ChannelKeysMessage:\"); console.log(e); }\n    const message = jsonParseWrapper(e.data, 'L2239') as ChannelKeysMessage\n    if (DBG) console.log(message)\n    _sb_assert(message.ready, 'got roomKeys but channel reports it is not ready (?)')\n    this.motd = message.motd\n    this.locked = message.roomLocked\n    const exportable_owner_pubKey = jsonParseWrapper(message.keys.ownerKey, 'L2246')\n    // just small sanity check on owner key (x marks the spot)\n    _sb_assert(this.keys.ownerPubKeyX === exportable_owner_pubKey.x, 'ChannelSocket.readyPromise(): owner key mismatch??')\n    _sb_assert(this.readyFlag, '#ChannelReadyFlag is false, parent not ready (?)')\n    // this sets us as owner only if the keys match\n\n    this.owner = sbCrypto.compareKeys(exportable_owner_pubKey, this.exportable_pubKey!)\n    // TODO: we have mostly lost the \"admin\" concept (need adminData?)\n    // this.adminData = await this.api.getAdminData()\n    // @psm: we want to reserve 'admin' for future SSO use\n    // this.admin = this.owner\n    this.admin = false\n    // once we've gotten our keys, we substitute the main message handler\n    this.#ws.websocket!.addEventListener('message', this.#processMessage.bind(this))\n    this.#ws.websocket!.removeEventListener('message', blocker)\n    if (DBG) console.log(\"++++++++ readyPromise() all done - resolving!\")\n    this.#ChannelSocketReadyFlag = true\n    this.#resolveFirstMessage(this)\n  }\n\n  get status() {\n    if (!this.#ws.websocket) return 'CLOSED'\n    else switch (this.#ws.websocket.readyState) {\n      case 0: return 'CONNECTING'\n      case 1: return 'OPEN'\n      case 2: return 'CLOSING'\n      default: return 'CLOSED'\n    }\n  }\n\n  set onMessage(f: (m: ChannelMessage) => void) { this.#onMessage = f }\n  @Ready get onMessage() { return this.#onMessage }\n\n  /** Enables debug output */\n  set enableTrace(b: boolean) {\n    this.#traceSocket = b;\n    if (b) console.log(\"==== jslib ChannelSocket: Tracing enabled ====\")\n  }\n\n  /**\n    * ChannelSocket.send()\n    *\n    * Returns a promise that resolves to \"success\" when sent,\n    * or an error message if it fails.\n    */\n  @VerifyParameters\n  send(msg: SBMessage | string): Promise<string> {\n    let message: SBMessage = typeof msg === 'string' ? new SBMessage(this, msg) : msg\n    _sb_assert(this.#ws.websocket, \"ChannelSocket.send() called before ready\")\n    if (this.#ws.closed) {\n      if (this.#traceSocket) console.info(\"send() triggered reset of #readyPromise() (normal)\")\n      this.ready = this.channelSocketReady = this.#channelSocketReadyFactory()\n      this.#ChannelSocketReadyFlag = true\n    }\n    return new Promise((resolve, reject) => {\n      message.ready.then((message) => { // message needs to be ready\n        this.ready.then(() => { // so does channel socket\n          if (!this.#ChannelSocketReadyFlag) reject(\"ChannelSocket.send() is confused - ready or not?\")\n          switch (this.#ws.websocket!.readyState) {\n            case 1: // OPEN\n              if (this.#traceSocket) {\n                console.log(\"++++++++ ChannelSocket.send(): Wrapping message contents:\")\n                console.log(Object.assign({}, message.contents))\n              }\n              sbCrypto.wrap(message.encryptionKey!, JSON.stringify(message.contents), 'string')\n                .then((wrappedMessage) => {\n                  const m = JSON.stringify({\n                    encrypted_contents: wrappedMessage,\n                    recipient: message.sendToPubKey ? message.sendToPubKey : undefined\n                  })\n                  if (this.#traceSocket) {\n                    console.log(\"++++++++ ChannelSocket.send(): sending message:\")\n                    console.log((wrappedMessage.content as string).slice(0, 100) + \"  ...  \" + (wrappedMessage.content as string).slice(-100))\n                  }\n                  crypto.subtle.digest('SHA-256', new TextEncoder().encode(wrappedMessage.content as string))\n                    .then((hash) => {\n                      const messageHash = arrayBufferToBase64(hash)\n                      if (this.#traceSocket) {\n                        console.log(\"++++++++ ChannelSocket.send():Which has hash:\")\n                        console.log(messageHash)\n                      }\n                      // const ackPayload = { timestamp: Date.now(), type: 'ack', _id: _id }\n                      this.#ack.set(messageHash, resolve)\n                      this.#ws.websocket!.send(m)\n                      // TODO: not sure why we needed separate 'ack' interaction, just resolve on seeing message back?\n                      // this.#ws.websocket!.send(JSON.stringify(ackPayload));\n                      setTimeout(() => {\n                        if (this.#ack.has(messageHash)) {\n                          this.#ack.delete(messageHash)\n                          const msg = `Websocket request timed out (no ack) after ${this.#ws.timeout}ms (${messageHash})`\n                          console.error(msg)\n                          reject(msg)\n                        } else {\n                          // normal behavior\n                          if (this.#traceSocket) console.log(\"++++++++ ChannelSocket.send() completed sending\")\n                          resolve(\"success\")\n                        }\n                      }, this.#ws.timeout)\n                    })\n                })\n              break\n            case 3: // CLOSED\n            case 0: // CONNECTING\n            case 2: // CLOSING\n              const errMsg = 'socket not OPEN - either CLOSED or in the state of CONNECTING/CLOSING'\n              // _sb_exception('ChannelSocket', errMsg)\n              reject(errMsg)\n          }\n        })\n      })\n    })\n  }\n\n  /** @type {JsonWebKey} */ @Memoize @Ready get exportable_owner_pubKey() { return this.keys.ownerKey }\n\n} /* class ChannelSocket */\n\n\n//# region - classes ChannelEndpoint\n/**\n *\n * ChannelEndpoint\n *\n * Gives access to a Channel API (without needing to connect to socket).\n * It's fully functional except it won't send or receive messages\n * (obviously, that's what a socket is for, but we might add send/receive\n * in the future for non-socket use cases)\n */\nexport class ChannelEndpoint extends Channel {\n  constructor(sbServer: SBServer, key?: JsonWebKey, channelId?: string) {\n    super(sbServer, key, channelId)\n  }\n\n  send(_m: SBMessage | string, _messageType?: 'string' | 'SBMessage'): Promise<string> {\n    return new Promise<string>((_resolve, reject) => {\n      reject('ChannelEndpoint.send(): send outside ChannelSocket not yet implemented')\n    })\n  }\n\n  set onMessage(_f: CallableFunction) {\n    _sb_assert(false, \"ChannelEndpoint.onMessage: send/receive outside ChannelSocket not yet implemented\")\n  }\n}\n//#endregion - classes ChannelEndpoint\n\n\nasync function deCryptChannelMessage(m00: string, m01: EncryptedContents, keys: ChannelKeys) {\n  const z = messageIdRegex.exec(m00)\n  let encryptionKey = keys.encryptionKey // default\n  if (z) {\n    let m: ChannelEncryptedMessage = {\n      type: 'encrypted',\n      channelID: z[1],\n      timestampPrefix: z[2],\n      _id: z[1] + z[2],\n      encrypted_contents: encryptedContentsMakeBinary(m01)\n    }\n    const unwrapped = await sbCrypto.unwrap(encryptionKey, m.encrypted_contents!, 'string')\n    let m2: ChannelMessage = { ...m, ...jsonParseWrapper(unwrapped, 'L1977') };\n    if (m2.contents) {\n      m2.text = m2.contents\n      // if(!m2?.contents?.hasOwnProperty('isVerfied')){\n      //   m2.contents!.isVerified\n      // }\n    }\n    m2.user = {\n      name: m2.sender_username ? m2.sender_username : 'Unknown',\n      _id: m2.sender_pubKey\n    }\n\n    if ((m2.verificationToken) && (!m2.sender_pubKey)) {\n      console.error('ERROR: message with verification token is lacking sender identity (cannot be verified).')\n      return (undefined)\n    }\n\n    // todo: we could speed this up by caching imported keys from known senders\n    const senderPubKey = await sbCrypto.importKey('jwk', m2.sender_pubKey!, 'ECDH', true, [])\n    const verifyKey = await sbCrypto.deriveKey(keys.signKey, senderPubKey, 'HMAC', false, ['sign', 'verify'])\n    const v = await sbCrypto.verify(verifyKey, m2.sign!, m2.contents!)\n\n    if (!v) {\n      console.error(\"***** signature is NOT correct for message (rejecting)\")\n      console.log(\"verifyKey:\")\n      console.log(Object.assign({}, verifyKey))\n      console.log(\"m2.sign\")\n      console.log(Object.assign({}, m2.sign))\n      console.log(\"m2.contents\")\n      console.log(structuredClone(m2.contents))\n      console.log(\"Message:\")\n      console.log(Object.assign({}, m2))\n      console.trace()\n      return (undefined)\n    }\n\n    // if it's a whisper, we unwrap from text to whisper\n    if (m2.whispered === true) {\n      // TODO TODO: add the whisper \n\n    }\n\n    return (m2)\n  } else {\n    console.log(\"++++++++ #processMessage: ERROR - cannot parse channel ID / timestamp, invalid message\")\n    console.log(Object.assign({}, m00))\n    console.log(Object.assign({}, m01))\n    return (undefined)\n  }\n} // deCryptChannelMessage()\n\n/**\n * Basic object handle for a shard (all storage).\n * \n * To RETRIEVE a shard, you need id and verification.\n * \n * To DECRYPT a shard, you need key, iv, and salt. Current\n * generation of shard servers will provide (iv, salt) upon\n * request if (and only if) you have id and verification.\n * \n * Note that id32/key32 are array32 encoded (a32). (Both \n * id and key are 256-bit entities).\n * \n * 'verification' is a 64-bit integer, encoded as a string\n * of up 23 characters: it is four 16-bit integers, either\n * joined by '.' or simply concatenated. Currently all four\n * values are random, future generation only first three\n * are guaranteed to be random, the fourth may be \"designed\".\n * \n * \n * @typedef {Object} SBObjectHandleClass\n * @property {boolean} [SB_OBJECT_HANDLE_SYMBOL] - flag to indicate this is an SBObjectHandle\n * @property {string} version - version of this object\n * @property {SBObjectType} type - type of object\n * @property {string} id - id of object\n * @property {string} key - key of object\n * @property {Base62Encoded} [id32] - optional: array32 format of id\n * @property {Base62Encoded} [key32] - optional: array32 format of key\n * @property {Promise<string>|string} verification - and currently you also need to keep track of this,\n * but you can start sharing / communicating the\n * object before it's resolved: among other things it\n * serves as a 'write-through' verification\n * @property {Uint8Array|string} [iv] - you'll need these in case you want to track an object\n * across future (storage) servers, but as long as you\n * are within the same SB servers you can request them.\n * @property {Uint8Array|string} [salt] - you'll need these in case you want to track an object\n * across future (storage) servers, but as long as you\n * are within the same SB servers you can request them.\n * @property {string} [fileName] - by convention will be \"PAYLOAD\" if it's a set of objects\n * @property {string} [dateAndTime] - optional: time of shard creation\n * @property {string} [shardServer] - optionally direct a shard to a specific server (especially for reads)\n * @property {string} [fileType] - optional: file type (mime)\n * @property {number} [lastModified] - optional: last modified time (of underlying file, if any)\n * @property {number} [actualSize] - optional: actual size of underlying file, if any\n * @property {number} [savedSize] - optional: size of shard (may be different from actualSize)\n * \n */\nexport class SBObjectHandle implements Interfaces.SBObjectHandle_base {\n  version: SBObjectHandleVersions = currentSBOHVersion;\n  #_type: SBObjectType = 'b';\n\n  // internal: these are 32-byte binary values\n  #id_binary?: ArrayBuffer;\n  #key_binary?: ArrayBuffer;\n\n  #verification?: Promise<string> | string;\n  shardServer?: string;\n  iv?: Uint8Array | string;\n  salt?: Uint8Array | string;\n\n  // the rest are conveniences, should probably migrate to SBFileHandle\n  fileName?: string;\n  dateAndTime?: string;\n  fileType?: string;\n  lastModified?: number;\n  actualSize?: number;\n  savedSize?: number;\n\n  constructor(options: Interfaces.SBObjectHandle) {\n    const {\n      version, type, id, key, verification, iv, salt, fileName, dateAndTime,\n      shardServer, fileType, lastModified, actualSize, savedSize,\n    } = options;\n\n    if (type) this.#_type = type\n\n    if (version) {\n      this.version = version\n    } else {\n      // if no version is specified, we try to guess based on BOTH key and id\n      // there is a 6.5% chance that we will guess wrong if it's b62 but which\n      // happens to base b62 tests\n      if ((key) && (id)) {\n        if (isBase62Encoded(key) && isBase62Encoded(id)) {\n          this.version = '2'\n        } else if (isBase64Encoded(key) && isBase64Encoded(id)) {\n          this.version = '1'\n        } else {\n          throw new Error('Unable to determine version from key and id')\n        }\n      } else {\n        // if neither key nor id is specified, we assume version 2\n        this.version = '2'\n      }\n\n    }\n\n    if (id) this.id = id; // use setter\n    if (key) this.key = key; // use setter\n\n    if (verification) this.verification = verification;\n\n    this.iv = iv;\n    this.salt = salt;\n    this.fileName = fileName;\n    this.dateAndTime = dateAndTime;\n    this.shardServer = shardServer;\n    this.fileType = fileType;\n    this.lastModified = lastModified;\n    this.actualSize = actualSize;\n    this.savedSize = savedSize;\n  }\n\n  set id_binary(value: ArrayBuffer) {\n    if (!value) throw new Error('Invalid id_binary');\n    // make sure it is exactly 32 bytes\n    if (value.byteLength !== 32) throw new Error('Invalid id_binary length');\n    this.#id_binary = value;\n    // Dynamically define the getter for id64 when idBinary is set\n    Object.defineProperty(this, 'id64', {\n      get: () => {\n        return arrayBufferToBase64(this.#id_binary!);\n      },\n      enumerable: false,  // Or false if you don't want it to be serialized\n      configurable: false // Allows this property to be redefined or deleted\n    });\n    // same in base62\n    Object.defineProperty(this, 'id32', {\n      get: () => {\n        return arrayBufferToBase62(this.#id_binary!);\n      },\n      enumerable: false,  // Or false if you don't want it to be serialized\n      configurable: false // Allows this property to be redefined or deleted\n    });\n  }\n\n  // same as above for key_binary\n  set key_binary(value: ArrayBuffer) {\n    if (!value) throw new Error('Invalid key_binary');\n    // make sure it is exactly 32 bytes\n    if (value.byteLength !== 32) throw new Error('Invalid key_binary length');\n    this.#key_binary = value;\n    // Dynamically define the getter for key64 when keyBinary is set\n    Object.defineProperty(this, 'key64', {\n      get: () => {\n        return arrayBufferToBase64(this.#key_binary!);\n      },\n      enumerable: false,  // Or false if you don't want it to be serialized\n      configurable: false // Allows this property to be redefined or deleted\n    });\n    // same in base62\n    Object.defineProperty(this, 'key32', {\n      get: () => {\n        return arrayBufferToBase62(this.#key_binary!);\n      },\n      enumerable: false,  // Or false if you don't want it to be serialized\n      configurable: false // Allows this property to be redefined or deleted\n    });\n  }\n\n  set id(value: ArrayBuffer | string | Base62Encoded) {\n    if (typeof value === 'string') {\n      if (this.version === '1') {\n        if (isBase64Encoded(value)) {\n          this.id_binary = base64ToArrayBuffer(value);\n        } else {\n          throw new Error('Requested version 1, but id is not b64');\n        }\n      } else if (this.version === '2') {\n        if (isBase62Encoded(value)) {\n          this.id_binary = base62ToArrayBuffer32(value);\n        } else {\n          throw new Error('Requested version 2, but id is not b62');\n        }\n      }\n    } else if (value instanceof ArrayBuffer) {\n      // assert it is 32 bytes\n      if (value.byteLength !== 32) throw new Error('Invalid ID length');\n      this.id_binary = value;\n    } else {\n      throw new Error('Invalid ID type');\n    }\n  }\n\n  // same as above but for key\n  set key(value: ArrayBuffer | string | Base62Encoded) {\n    if (typeof value === 'string') {\n      if (this.version === '1') {\n        if (isBase64Encoded(value)) {\n          this.#key_binary = base64ToArrayBuffer(value);\n        } else {\n          throw new Error('Requested version 1, but key is not b64');\n        }\n      } else if (this.version === '2') {\n        if (isBase62Encoded(value)) {\n          this.#key_binary = base62ToArrayBuffer32(value);\n        } else {\n          throw new Error('Requested version 2, but key is not b62');\n        }\n      }\n    } else if (value instanceof ArrayBuffer) {\n      // assert it is 32 bytes\n      if (value.byteLength !== 32) throw new Error('Invalid key length');\n      this.#key_binary = value;\n    } else {\n      throw new Error('Invalid key type');\n    }\n  }\n\n  // the getter for id returns based on what version we are\n  // we stripA32() because this is also used by JSON.stringify()\n  // (unless we want to write a custom serializer ...)\n  get id(): string {\n    _sb_assert(this.#id_binary, 'object handle id is undefined');\n    if (this.version === '1') {\n      return arrayBufferToBase64(this.#id_binary!);\n    } else if (this.version === '2') {\n      return arrayBufferToBase62(this.#id_binary!);\n    } else {\n      throw new Error('Invalid or missing version (internal error, should not happen)');\n    }\n  }\n\n  // same as above but for key\n  get key(): string {\n    _sb_assert(this.#key_binary, 'object handle key is undefined');\n    if (this.version === '1') {\n      return arrayBufferToBase64(this.#key_binary!);\n    } else if (this.version === '2') {\n      return arrayBufferToBase62(this.#key_binary!);\n    } else {\n      throw new Error('Invalid or missing version (internal error, should not happen)');\n    }\n  }\n\n  // convenience getters - these are placeholders for type definitions\n  get id64(): string { throw new Error('Invalid id_binary'); }\n  get id32(): Base62Encoded { throw new Error('Invalid id_binary'); }\n  get key64(): string { throw new Error('Invalid key_binary'); }\n  get key32(): Base62Encoded { throw new Error('Invalid key_binary'); }\n\n  set verification(value: Promise<string> | string) {\n    this.#verification = value; /* this.#setId32(); */\n  }\n  get verification(): Promise<string> | string {\n    _sb_assert(this.#verification, 'object handle verification is undefined');\n    return this.#verification!;\n  }\n\n  get type(): SBObjectType { return this.#_type; }\n\n}\n\n/**\n * Storage API\n * @class\n * @constructor\n * @public\n */\nclass StorageApi {\n  server: string;\n  channelServer: string;\n  shardServer?: string;\n  sbServer: SBServer;\n\n  // constructor(server: string, channelServer: string, shardServer?: string) {\n  constructor(sbServer: SBServer) {\n    const { storage_server, channel_server, shard_server } = sbServer\n    this.server = storage_server + '/api/v1';\n    this.channelServer = channel_server + '/api/room/'\n    if (shard_server) this.shardServer = shard_server\n    this.sbServer = sbServer\n  }\n\n  /**\n   * Pads object up to closest permitted size boundaries;\n   * currently that means a minimum of 4KB and a maximum of\n   * of 1 MB, after which it rounds up to closest MB.\n   *\n   * @param buf blob of data to be eventually stored\n   */\n  /** @private */\n  #padBuf(buf: ArrayBuffer) {\n    const image_size = buf.byteLength; let _target\n    // pick the size to be rounding up to\n    if ((image_size + 4) < 4096) _target = 4096 // smallest size\n    else if ((image_size + 4) < 1048576) _target = 2 ** Math.ceil(Math.log2(image_size + 4)) // in between\n    else _target = (Math.ceil((image_size + 4) / 1048576)) * 1048576 // largest size\n    // append the padding buffer\n    let finalArray = _appendBuffer(buf, (new Uint8Array(_target - image_size)).buffer);\n    // set the (original) size in the last 4 bytes\n    (new DataView(finalArray)).setUint32(_target - 4, image_size)\n    if (DBG2) console.log(\"#padBuf bytes:\", finalArray.slice(-4));\n    return finalArray\n  }\n\n  /**\n   * The actual size of the object is encoded in the\n   * last 4 bytes of the buffer. This function removes\n   * all the padding and returns the actual object.\n   */\n  /** @private */\n  #unpadData(data_buffer: ArrayBuffer): ArrayBuffer {\n    const tail = data_buffer.slice(-4)\n    var _size = new DataView(tail).getUint32(0)\n    const _little_endian = new DataView(tail).getUint32(0, true)\n    if (_little_endian < _size) {\n      if (DBG2) console.warn(\"#unpadData - size of shard encoded as little endian (fixed upon read)\")\n      _size = _little_endian\n    }\n    if (DBG2) {\n      console.log(`#unpadData - size of object is ${_size}`)\n      // console.log(tail)\n    }\n    return data_buffer.slice(0, _size);\n  }\n\n  /** @private */\n  #getObjectKey(fileHashBuffer: BufferSource, _salt: ArrayBuffer): Promise<CryptoKey> {\n    return new Promise((resolve, reject) => {\n      try {\n        sbCrypto.importKey('raw', fileHashBuffer /* base64ToArrayBuffer(decodeURIComponent(fileHash))*/,\n          'PBKDF2', false, ['deriveBits', 'deriveKey']).then((keyMaterial) => {\n            // @psm TODO - Support deriving from PBKDF2 in sbCrypto.deriveKey function\n            crypto.subtle.deriveKey({\n              'name': 'PBKDF2', // salt: crypto.getRandomValues(new Uint8Array(16)),\n              'salt': _salt,\n              'iterations': 100000, // small is fine, we want it snappy\n              'hash': 'SHA-256'\n            }, keyMaterial, { 'name': 'AES-GCM', 'length': 256 }, true, ['encrypt', 'decrypt']).then((key) => {\n              // console.log(key)\n              resolve(key)\n            })\n          })\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  // // returns a storage token (promise); basic consumption of channel budget\n  // getStorageToken(roomId: SBChannelId, size: number): Promise<string> {\n  //   return new Promise((resolve, reject) => {\n  //     SBFetch(this.channelServer + stripA32(roomId) + '/storageRequest?size=' + size)\n  //       .then((r) => r.json())\n  //       .then((storageTokenReq) => {\n  //         if (storageTokenReq.hasOwnProperty('error')) reject(`storage token request error (${storageTokenReq.error})`)\n  //         resolve(JSON.stringify(storageTokenReq))\n  //       })\n  //       .catch((e) => {\n  //         const msg = `getStorageToken] storage token request failed: ${e}`\n  //         console.error(msg)\n  //         reject(msg)\n  //       });\n  //   });\n  // }\n\n  /** @private\n   * get \"permission\" to store in the form of a token\n   */\n  #_allocateObject(image_id: ArrayBuffer, type: SBObjectType): Promise<{ salt: Uint8Array, iv: Uint8Array }> {\n    return new Promise((resolve, reject) => {\n      SBFetch(this.server + \"/storeRequest?name=\" + arrayBufferToBase62(image_id) + \"&type=\" + type)\n        .then((r) => { /* console.log('got storage reply:'); console.log(r); */ return r.arrayBuffer(); })\n        .then((b) => {\n          const par = extractPayload(b)\n          resolve({ salt: new Uint8Array(par.salt), iv: new Uint8Array(par.iv) })\n        })\n        .catch((e) => {\n          console.warn(`**** ERROR: ${e}`)\n          reject(e)\n        })\n    })\n  }\n\n  // this returns a promise to the verification string  \n  async #_storeObject(\n    image: ArrayBuffer,\n    image_id: Base62Encoded,\n    keyData: ArrayBuffer,\n    type: SBObjectType,\n    // roomId: SBChannelId,\n    budgetChannel: ChannelEndpoint,\n    iv: Uint8Array,\n    salt: Uint8Array\n  ): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const key = await this.#getObjectKey(keyData, salt)\n        const data = await sbCrypto.encrypt(image, key, iv, 'arrayBuffer')\n        const storageToken = await budgetChannel.getStorageToken(data.byteLength)\n        const resp_json = await this.storeObject(type, image_id, iv, salt, storageToken, data)\n        if (resp_json.error) reject(`storeObject() failed: ${resp_json.error}`)\n        if (resp_json.image_id != stripA32(image_id)) reject(`received imageId ${resp_json.image_id} but expected ${image_id}`)\n        resolve(resp_json.verification_token)\n      } catch (e) {\n        const msg = `storeObject() failed: ${e}`\n        console.error(msg)\n        reject(msg)\n      }\n    })\n  }\n\n  /**\n   * StorageApi.storeData()\n   * \n   * Low level of shard uploading - this needs to have all the details. You would\n   * generally not call this directly, but rather use storeData().\n   */\n  storeObject(\n    type: string,\n    fileId: Base62Encoded,\n    iv: Uint8Array,\n    salt: Uint8Array,\n    storageToken: string,\n    data: ArrayBuffer): Promise<Dictionary<any>> {\n    // async function uploadImage(storageToken, encrypt_data, type, image_id, data)\n    return new Promise((resolve, reject) => {\n      // if the first parameter is NOT of type string, then the callee probably meant to use storeData()\n      if (typeof type !== 'string') {\n        const errMsg = \"NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeData()\"\n        console.error(errMsg)\n        reject(\"errMsg\")\n      }\n\n      SBFetch(this.server + '/storeData?type=' + type + '&key=' + stripA32(fileId), { // ToDo: bit of a hack in handling \"a32\"\n        // psm: need to clean up these types\n        method: 'POST',\n        body: assemblePayload({\n          iv: iv,\n          salt: salt,\n          image: data,\n          storageToken: (new TextEncoder()).encode(storageToken),\n          vid: crypto.getRandomValues(new Uint8Array(48))\n        })\n      })\n        .then((response: Response) => {\n          if (!response.ok) { reject('response from storage server was not OK') }\n          return response.json()\n        })\n        .then((data) => {\n          resolve(data)\n        }).catch((error: Error) => {\n          reject(error)\n        });\n    });\n  }\n\n  /**\n   * StorageApi.storeData\n   * \n   * Main high level work horse: besides buffer and type of data,\n   * it only needs the roomId (channel). Assigned meta data is\n   * optional.\n   * \n   * This will eventually call storeObject().\n   * \n   * It is a bit outdated ... it accepts metadata for historical reasons\n   */\n  storeData(buf: BodyInit | Uint8Array, type: SBObjectType, roomId: SBChannelId | ChannelEndpoint, metadata?: SBObjectMetadata): Promise<Interfaces.SBObjectHandle>\n  {\n    // used to be integrated with image uploading and matching control message, for reference:\n    // export async function saveImage(sbImage, roomId, sendSystemMessage)\n    return new Promise((resolve, reject) => {\n      // if the first parameter is of type string, then the callee probably meant to use storeData()\n      if (typeof buf === 'string') {\n        const errMsg = \"NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeObject()\"\n        console.error(errMsg)\n        reject(\"errMsg\")\n      }\n      if (buf instanceof Uint8Array) {\n        if (DBG2) console.log('converting Uint8Array to ArrayBuffer')\n        buf = new Uint8Array(buf).buffer\n      }\n      if (!(buf instanceof ArrayBuffer) && buf.constructor.name != 'ArrayBuffer') {\n        if (DBG2) console.log('buf must be an ArrayBuffer:'); console.log(buf);\n        reject('buf must be an ArrayBuffer')\n      }\n      const bufSize = (buf as ArrayBuffer).byteLength\n      if (metadata) {\n        // i think this is old/ancient?\n        console.warn(\"storeData() called with metadata - this is deprecated (let us know how/where this is needed)\")\n        // metadata.id = stripA32(metadata.id)\n        // metadata.key = stripA32(metadata.key)\n        reject(\"storeData() called with metadata - this is deprecated\")\n      }\n\n      // our budget channel is either directly provided, or we create a new channel object from the roomId\n      const channel = (roomId instanceof ChannelEndpoint) ? roomId : new ChannelEndpoint(this.sbServer, undefined, roomId)\n\n      const paddedBuf = this.#padBuf(buf as ArrayBuffer)\n      sbCrypto.generateIdKey(paddedBuf).then((fullHash) => {\n        // return { full: { id: fullHash.id, key: fullHash.key }, preview: { id: previewHash.id, key: previewHash.key } }\n        this.#_allocateObject(fullHash.id_binary, type)\n          .then((p) => {\n            // storage server returns the salt and nonce it wants us to use\n            const id32 = arrayBufferToBase62(fullHash.id_binary)\n            const key32 = arrayBufferToBase62(fullHash.key_material)\n            const r: Interfaces.SBObjectHandle = {\n              [SB_OBJECT_HANDLE_SYMBOL]: true,\n              version: currentSBOHVersion,\n              type: type,\n              // id: fullHash.id64,\n              // key: fullHash.key64,\n              // id: base64ToBase62(fullHash.id32),\n              // key: base64ToBase62(fullHash.key32),\n              id: id32,\n              key: key32,\n              iv: p.iv,\n              salt: p.salt,\n              actualSize: bufSize,\n              verification: this.#_storeObject(paddedBuf, id32, fullHash.key_material, type, channel, p.iv, p.salt)\n            }\n            resolve(r)\n          })\n          .catch((e) => reject(e))\n      })\n    })\n  }\n\n  // for future reference:\n  //   StorageApi().storeRequest\n  // is now internal-only (#_allocateObject)\n\n  /** @private */\n  #processData(payload: ArrayBuffer, h: SBObjectHandle): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      try {\n        let j = jsonParseWrapper(sbCrypto.ab2str(new Uint8Array(payload)), 'L3062')\n        // normal operation is to break on the JSON.parse() and continue to finally clause\n        if (j.error) reject(`#processData() error: ${j.error}`)\n      } catch (e) {\n        // do nothing - this is expected\n      } finally {\n        const data = extractPayload(payload)\n        if (DBG) {\n          console.log(\"Payload (#processData) is:\")\n          console.log(data)\n        }\n        // payload includes nonce and salt\n        const iv = new Uint8Array(data.iv)\n        const salt = new Uint8Array(data.salt)\n        // we accept b64 versions\n        const handleIV: Uint8Array | undefined = (!h.iv) ? undefined : (typeof h.iv === 'string') ? base64ToArrayBuffer(h.iv) : h.iv\n        const handleSalt: Uint8Array | undefined = (!h.salt) ? undefined : (typeof h.salt === 'string') ? base64ToArrayBuffer(h.salt) : h.salt\n\n        if ((handleIV) && (!compareBuffers(iv, handleIV))) {\n          console.error(\"WARNING: nonce from server differs from local copy\")\n          console.log(`object ID: ${h.id}`)\n          console.log(` local iv: ${arrayBufferToBase64(handleIV)}`)\n          console.log(`server iv: ${arrayBufferToBase64(data.iv)}`)\n        }\n        if ((handleSalt) && (!compareBuffers(salt, handleSalt))) {\n          console.error(\"WARNING: salt from server differs from local copy (will use server)\")\n          if (!h.salt) {\n            console.log(\"h.salt is undefined\")\n          } else if (typeof h.salt === 'string') {\n            console.log(\"h.salt is in string form (unprocessed):\")\n            console.log(h.salt)\n          } else {\n            console.log(\"h.salt is in arrayBuffer or Uint8Array\")\n            console.log(\"h.salt as b64:\")\n            console.log(arrayBufferToBase64(h.salt))\n            console.log(\"h.salt unprocessed:\")\n            console.log(h.salt)\n          }\n          console.log(\"handleSalt as b64:\")\n          console.log(arrayBufferToBase64(handleSalt))\n          console.log(\"handleSalt unprocessed:\")\n          console.log(handleSalt)\n        }\n        if (DBG2) {\n          console.log(\"will use nonce and salt of:\")\n          console.log(`iv: ${arrayBufferToBase64(iv)}`)\n          console.log(`salt : ${arrayBufferToBase64(salt)}`)\n        }\n        // const image_key: CryptoKey = await this.#getObjectKey(imageMetaData!.previewKey!, salt)\n        var h_key_material\n        if (h.version === '1') {\n          h_key_material = base64ToArrayBuffer(h.key)\n        } else if (h.version === '2') {\n          h_key_material = base62ToArrayBuffer32(h.key)\n        } else {\n          throw new Error('Invalid or missing version (internal error, should not happen)');\n        }\n        this.#getObjectKey(h_key_material, salt).then((image_key) => {\n          // TODO: test this, it used to call ab2str()? how could that work?\n          // const encrypted_image = sbCrypto.ab2str(new Uint8Array(data.image))\n          // const encrypted_image = new Uint8Array(data.image)\n          const encrypted_image = data.image;\n          if (DBG2) {\n            console.log(\"data.image:      \"); console.log(data.image)\n            console.log(\"encrypted_image: \"); console.log(encrypted_image)\n          }\n          // const padded_img: ArrayBuffer = await sbCrypto.unwrap(image_key, { content: encrypted_image, iv: iv }, 'arrayBuffer')\n          sbCrypto.unwrap(image_key, { content: encrypted_image, iv: iv }, 'arrayBuffer').then((padded_img: ArrayBuffer) => {\n            const img: ArrayBuffer = this.#unpadData(padded_img)\n            // psm: issues should throw i think\n            // if (img.error) {\n            //   console.error('(Image error: ' + img.error + ')');\n            //   throw new Error('Failed to fetch data - authentication or formatting error');\n            // }\n            if (DBG) { console.log(\"#processData(), unwrapped img: \"); console.log(img) }\n            resolve(img)\n          })\n        })\n      }\n    })\n  }\n\n  // any failure conditions returns 'null', facilitating trying multiple servers\n  async #_fetchData(useServer: string, url: string, h: SBObjectHandle, returnType: 'string' | 'arrayBuffer'): Promise<string | ArrayBuffer | null> {\n    const body = { method: 'GET' }\n    return new Promise(async (resolve, _reject) => {\n      SBFetch(useServer + url, body)\n        .then((response: Response) => {\n          if (!response.ok) return (null)\n          return response.arrayBuffer()\n        })\n        .then((payload: ArrayBuffer | null) => {\n          if (payload === null) return (null)\n          return this.#processData(payload, h)\n        })\n        .then((payload) => {\n          if (payload === null) resolve (null)\n          if (returnType === 'string') resolve (sbCrypto.ab2str(new Uint8Array(payload!)))\n          else resolve (payload)\n        })\n        .catch((_error: Error) => {\n          // reject(error)\n          return (null)\n        });\n      })\n  }\n\n\n  /**\n   * StorageApi().fetchData()\n   *\n   * This assumes you have a complete SBObjectHandle. Note that\n   * if you only have the 'id' and 'verification' fields, you\n   * can reconstruct / request the rest. The current interface\n   * will return both nonce, salt, and encrypted data.\n   *\n   * @param h SBObjectHandle - the object to fetch\n   * @param returnType 'string' | 'arrayBuffer' - the type of data to return (default: 'arrayBuffer')\n   * @returns Promise<ArrayBuffer | string> - the shard data\n   */\n  fetchData(handle: Interfaces.SBObjectHandle, returnType: 'string'): Promise<string>\n  fetchData(handle: Interfaces.SBObjectHandle, returnType?: 'arrayBuffer'): Promise<ArrayBuffer>\n  fetchData(handle: Interfaces.SBObjectHandle, returnType: 'string' | 'arrayBuffer' = 'arrayBuffer'): Promise<ArrayBuffer | string> {\n    // TODO: change SBObjectHandle from being an interface to being a class\n    // update: we have an object class, but still using interface; still a todo here\n    // how to nicely validate 'h'\n    // _sb_assert(SBValidateObject(h, 'SBObjectHandle'), \"fetchData() ERROR: parameter is not an SBOBjectHandle\")\n    // if (typeof h.verification === 'string') h.verification = new Promise<string>((resolve) => { resolve(h.verification); })\n    // _sb_assert(verificationToken, \"fetchData(): missing verification token (?)\")\n\n    return new Promise(async (resolve, reject) => {\n      const h = new SBObjectHandle(handle)\n      if (!h) reject('SBObjectHandle is null or undefined')\n      const verificationToken = await h.verification\n      const useServer = h.shardServer ? h.shardServer + '/api/v1' : (this.shardServer ? this.shardServer : this.server)\n      if (DBG) console.log(\"fetchData(), fetching from server: \" + useServer)\n      const queryString = '/fetchData?id=' + h.id + '&type=' + h.type + '&verification_token=' + verificationToken\n\n      // SBFetch(useServer + '/fetchData?id=' + h.id + '&type=' + h.type + '&verification_token=' + verificationToken, { method: 'GET' })\n      const result = await this.#_fetchData(useServer, queryString, h, returnType)\n      if (result !== null) {\n        console.warn(`[fetchData] success: fetched from '${useServer}'`, result)\n        resolve(result)\n      } else {\n        // upon failure we farm out and try all known servers\n        console.warn(`[fetchData] having issues talking to '${useServer}' - not to worry, trying other servers (might generate network errors)`)\n        // ToDo: add an interface where we accumulated knowledge of more servers\n        for (let i = 0; i < knownStorageAndShardServers.length; i++) {\n          const tryServer = knownStorageAndShardServers[i] + '/api/v1'\n          if (tryServer !== useServer) {\n            const result = await this.#_fetchData(tryServer, queryString, h, returnType)\n            if (result !== null)\n              resolve(result)\n            console.warn(`[fetchData] if you got a network error for ${tryServer}, don't worry about it`)\n          }\n        }\n        reject('fetchData() failed - tried all servers')\n      }\n    })\n  }\n\n\n\n\n  /**\n   * StorageApi().retrieveData()\n   * retrieves an object from storage\n   */\n  async retrieveImage(\n    imageMetaData: ImageMetaData,\n    controlMessages: Array<ChannelMessage>,\n    imageId?: string,\n    imageKey?: string,\n    imageType?: SBObjectType,\n    imgObjVersion?: SBObjectHandleVersions): Promise<Dictionary<any>> {\n    console.trace(\"retrieveImage()\")\n    console.log(imageMetaData)\n    const id = imageId ? imageId : imageMetaData.previewId;\n    const key = imageKey ? imageKey : imageMetaData.previewKey;\n    const type = imageType ? imageType : 'p';\n    const objVersion = imgObjVersion ? imgObjVersion : (imageMetaData.imgObjVersion ? imageMetaData.imgObjVersion : '2');\n\n    const control_msg = controlMessages.find((ctrl_msg) => ctrl_msg.id && ctrl_msg.id == id)\n    console.log(control_msg)\n    if (control_msg) {\n      _sb_assert(control_msg.verificationToken, \"retrieveImage(): verificationToken missing (?)\")\n      _sb_assert(control_msg.id, \"retrieveImage(): id missing (?)\")\n      const obj: Interfaces.SBObjectHandle = {\n        type: type,\n        version: objVersion,\n        id: control_msg.id!,\n        key: key!,\n        verification: new Promise((resolve, reject) => {\n          if (control_msg.verificationToken)\n            resolve(control_msg.verificationToken)\n          else\n            reject(\"retrieveImage(): verificationToken missing (?)\")\n        })\n      }\n      const img = await this.fetchData(obj)\n      console.log(img)\n      return { 'url': 'data:image/jpeg;base64,' + arrayBufferToBase64(img, 'b64') };\n    } else {\n      return { 'error': 'Failed to fetch data - missing control message for that image' };\n    }\n  }\n\n  /* Unused Currently\n  migrateStorage() {\n  }\n  fetchDataMigration() {\n  }\n   */\n\n} /* class StorageApi */\n\n\n/**\n * Class Snackabra\n */\nclass Snackabra {\n  #storage!: StorageApi\n  #channel!: Channel\n  #preferredServer?: SBServer\n  #version = version\n\n  /**\n  * @param args - optional object with URLs of preferred servers.\n  * \n  * Note that 'new Snackabra()' is guaranteed synchronous. You can optionally call\n  * without a parameter in which case SB will ping known servers.\n  * \n  *   * @example\n  * ```typescript\n  *     const sb = new Snackabra({\n  *     channel_server: 'http://localhost:3845',\n  *     channel_ws: 'ws://localhost:3845',\n  *     storage_server: 'http://localhost:3843',\n  *     shard_server: 'http://localhost:3841',\n  *     })\n  * ```\n  * \n  * @param DEBUG - optional boolean to enable debug logging\n  */\n  constructor(sbServer?: SBServer, DEBUG: boolean = false) {\n    console.warn(`==== CREATING Snackabra object generation: ${this.version} ====`)\n    if (sbServer) {\n      this.#preferredServer = Object.assign({}, sbServer)\n      // this.#storage = new StorageApi(args.storage_server, args.channel_server, args.shard_server ? args.shard_server : undefined)\n      this.#storage = new StorageApi(sbServer)\n      if (DEBUG) DBG = true\n      if (DBG) console.warn(\"++++ Snackabra constructor ++++ setting DBG to TRUE ++++\");\n    }\n\n  }\n\n\n  /**\n   * Connects to :term:`Channel Name` on this SB config.\n   * Returns a channel socket promise right away, but it\n   * will not be ready until the ``ready`` promise is resolved.\n   * \n   * Note that if you have a preferred server then the channel\n   * object will be returned right away, but the ``ready`` promise\n   * will still be pending. If you do not have a preferred server,\n   * then the ``ready`` promise will be resolved when at least\n   * one of the known servers is responding and ready.\n   * \n   * @param channelName - the name of the channel to connect to\n   * @param key - optional key to use for encryption/decryption\n   * @param channelId - optional channel id to use for encryption/decryption\n   * @returns a channel object\n   */\n  connect(onMessage: (m: ChannelMessage) => void, key?: JsonWebKey, channelId?: string /*, identity?: SB384 */): Promise<ChannelSocket> {\n    if (DBG) {\n      console.log(\"++++ Snackabra.connect() ++++\")\n      if (key) console.log(key)\n      if (channelId) console.log(channelId)\n    }\n    return new Promise<ChannelSocket>(async (resolve) => {\n      if (this.#preferredServer)\n        // if we have a preferred server then we do not have to wait for 'ready'\n        resolve(new ChannelSocket(this.#preferredServer!, onMessage, key, channelId))\n      else\n        // otherwise we have to wait for at least one of them to be 'ready', or we won't know which one to use\n        resolve(Promise.any(SBKnownServers.map((s) => (new ChannelSocket(s, onMessage, key, channelId)).ready)))\n    })\n  }\n\n  // if there's a 'preferred' (only) server then we we can return a promise right away\n  // return new Promise<ChannelSocket>((resolve, reject) => {\n\n  // else Promise.any(SBKnownServers.map((s) => (new ChannelSocket(s, onMessage, key, channelId))))\n  //   .then((c) => { console.log(\"Got channel:\"); console.log(c); resolve(c.ready); })\n  //   .catch((e) => { console.log(\"No known servers responding to channel\"); reject(e); })\n\n  // Promise.any(this.#preferredServer\n  //   ? [new ChannelSocket(this.#preferredServer!, onMessage, key, channelId)]\n  //   : SBKnownServers.map((s) => (new ChannelSocket(s, onMessage, key, channelId))))\n  //   .then((c) => { console.log(\"Got channel:\"); console.log(c); resolve(c); })\n  //   .catch((e) => { console.log(\"No known servers responding to channel\"); reject(e); })\n  /// })\n  // }\n\n  /**\n   * Creates a new channel. Currently uses trivial authentication.\n   * Returns a promise to a ''SBChannelHandle'' object\n   * (which includes the :term:`Channel Name`).\n   * Note that this method does not connect to the channel,\n   * it just creates (authorizes) it.\n   * \n   * @param sbServer - the server to use\n   * @param serverSecret - the server secret (dev only)\n   * @param keys - optional keys to use for encryption/decryption\n   * @param budgetChannel - NECESSARY unless local/dev; provides a channel to pay for storage\n   * \n   * Note that if you have a full budget channel, you can budd off it (which\n   * will take all the storage). Providing a budget channel here will allows\n   * you to create new channels when a 'guest' on some channel (for example).\n   */\n  create(sbServer: SBServer, serverSecretOrBudgetChannel?: string | ChannelEndpoint, keys?: JsonWebKey): Promise<SBChannelHandle> {\n    return new Promise<SBChannelHandle>(async (resolve, reject) => {\n      try {\n        const { channelData, exportable_privateKey } = await newChannelData(keys ? keys : null)\n        if (!channelData.roomId) {\n          throw new Error('Unable to determine roomId from key and id (it is empty)')\n        }\n        const budgetChannel = (serverSecretOrBudgetChannel instanceof ChannelEndpoint) ? serverSecretOrBudgetChannel : undefined\n        if (serverSecretOrBudgetChannel && typeof serverSecretOrBudgetChannel === 'string') channelData.SERVER_SECRET = serverSecretOrBudgetChannel\n        if (budgetChannel) {\n          const storageToken = await budgetChannel.getStorageToken(NEW_CHANNEL_MINIMUM_BUDGET)\n          if (!storageToken) reject('[create channel] Failed to get storage token for the provided channel')\n          channelData.storageToken = storageToken\n        }\n        const data: Uint8Array = new TextEncoder().encode(JSON.stringify(channelData));\n        let resp: Dictionary<any> = await SBFetch(sbServer.channel_server + '/api/room/' + stripA32(channelData.roomId) + '/uploadRoom', {\n          method: 'POST',\n          body: data\n        });\n        resp = await resp.json();\n        if (resp.success) {\n          // await this.connect(channelId, identity);\n          // _localStorage.setItem(channelId, JSON.stringify(exportable_privateKey)) // TODO\n          resolve({ channelId: channelData.roomId!, key: exportable_privateKey, server: sbServer.channel_server })\n        } else {\n          const msg = `Creating channel did not succeed (${JSON.stringify(resp)})`\n          console.error(msg)\n          reject(msg);\n        }\n      } catch (e) {\n        const msg = `Creating channel did not succeed: ${e}`\n        console.error(msg)\n        reject(msg);\n      }\n    });\n  }\n\n  /**\n   * Connects to a channel.\n   */\n  get channel(): Channel {\n    return this.#channel;\n  }\n\n  /**\n   * Returns the storage API.\n   */\n  get storage(): StorageApi {\n    return this.#storage;\n  }\n\n  /**\n   * Returns the crypto API.\n   */\n  get crypto(): SBCrypto {\n    return sbCrypto;\n  }\n\n  get version(): string {\n    return this.#version;\n  }\n\n\n} /* class Snackabra */\n\n/******************************************************************************************************/\n//#region - exporting stuff\nexport type {\n  ChannelData,\n  ChannelKeyStrings,\n  ImageMetaData\n}\n\nexport {\n  Channel,\n  // ChannelApi,\n  SBMessage,\n  Snackabra,\n  SBCrypto,\n  SB384,\n  arrayBufferToBase64,\n  sbCrypto,\n  version,\n};\n\nexport var SB = {\n  Snackabra: Snackabra,\n  SBMessage: SBMessage,\n  Channel: Channel,\n  SBCrypto: SBCrypto,\n  SB384: SB384,\n  arrayBufferToBase64: arrayBufferToBase64,\n  sbCrypto: sbCrypto,\n  version: version\n};\n\nif (!(globalThis as any).SB)\n  (globalThis as any).SB = SB;\nconsole.warn(`==== SNACKABRA jslib loaded ${(globalThis as any).SB.version} ====`); // we warn for benefit of Deno\n//#endregion - exporting stuff\n", "// (c) 2023 384 (tm)\n\nimport { base64ToArrayBuffer } from '../utils/b64';\nimport { Interfaces, SBPayload, base62ToArrayBuffer32 } from '../snackabra/snackabra';\n\n// starting \"v02\" on 2023-04-22\n// intention:\n// - switch to async model\n// - switch to pure b62 encoding only\n// - direct support for \"app loading\"\n\nfunction deCryptShard(data: SBPayload): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        crypto.subtle.importKey(\"raw\", data.shardKey, \"PBKDF2\", false, ['deriveBits', 'deriveKey'])\n            .then((keyMaterial) => {\n                crypto.subtle.deriveKey({\n                    'name': 'PBKDF2',\n                    'salt': data.salt,\n                    'iterations': 100000,\n                    'hash': 'SHA-256'\n                }, keyMaterial, { 'name': 'AES-GCM', 'length': 256 }, true, ['encrypt', 'decrypt'])\n                    .then((key) => {\n                        crypto.subtle.decrypt({ name: 'AES-GCM', iv: data.iv }, key, data.image)\n                            .then((padded) => {\n                                let actualSize = new DataView(padded.slice(-4)).getUint32(0)\n                                resolve(padded.slice(0, actualSize));\n                            }).catch(() => { reject('error decrypting shard'); })\n                    }).catch(() => { reject('unable to derive key'); })\n            })\n            .catch(() => { reject('unable to import key') })\n    })\n}\n\n// NOTE: this is a slightly stripped-down duplicate of \"extractPayload\" in snackabra.ts\nexport function extractPayload(payload: ArrayBuffer): SBPayload {\n    const metadataSize = new Uint32Array(payload.slice(0, 4))[0];\n    const decoder = new TextDecoder();\n    const _metadata = JSON.parse(decoder.decode(payload.slice(4, 4 + metadataSize)))\n    const startIndex = 4 + metadataSize;\n    const data: SBPayload = {}\n    for (let i = 1; i < Object.keys(_metadata).length; i++) {\n        const _index = i.toString();\n        if (_metadata[_index]) {\n            const propertyStartIndex = _metadata[_index]['start'];\n            const size = _metadata[_index]['size'];\n            const entry = _metadata[_index]\n            data[entry['name']] = payload.slice(startIndex + propertyStartIndex, startIndex + propertyStartIndex + size);\n        } else {\n            console.log(`found nothing for index ${i}`)\n        }\n    }\n    return data;\n}\n\nexport function loadShard(shard: Interfaces.SBObjectHandle) {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n        if (!shard.shardServer) {\n            console.error(\"shardServer not found (2.0 change: required)\")\n            throw new Error(\"shardServer not found (2.0 change: required)\")\n        }\n        const codeShardFetch = `${shard.shardServer!}/api/v1/fetchData?id=${shard.id}&type=p&verification_token=${shard.verification}`\n        fetch(codeShardFetch)\n            .then((res) => res.arrayBuffer())\n            .then((payload) => {\n                let data = extractPayload(payload)\n                if (shard.version == '1') {\n                    data.shardKey = base64ToArrayBuffer(shard.key)\n                } else if (shard.version == '2') {\n                    data.shardKey = base62ToArrayBuffer32(shard.key!)\n                } else {\n                    reject(`unknown or missing shard version: ${shard}`)\n                }\n                deCryptShard(data).then((decrypted) => {\n                    resolve(decrypted);\n                }).catch(() => { reject('unable to decrypt'); })\n            })\n            .catch((err) => {\n                if (`${err}`.match('\"ror\":\"cann\"')) reject('shard not found')\n                else reject(`failed to fetch or process shard: ${err}`)\n            })\n    })\n}\n\nexport function loadLibraryCode(shard: Interfaces.SBObjectHandle) {\n    return new Promise<void>((resolve, reject) => {\n        loadShard(shard)\n            .then((decrypted) => {\n                let jslibText = new TextDecoder(\"utf-8\").decode(decrypted);\n                const script = document.createElement('script');\n                script.textContent = jslibText;\n                document.head.append(script);\n                console.log(\"'window.SB' object (library loaded) should be available in the console.\")\n                resolve()\n            })\n            .catch(() => { reject('unable to fetch shard'); })\n    })\n}\n\nexport function bootstrapJsLib() {\n\n    const jsLib = (\n        (window as any).configuration \n        && (window as any).configuration.jslibShardHandle)\n        ? (window as any).configuration.jslibShardHandle\n        : {\n\n            // '2.0.0 (pre) build 03'\n            version: \"2\",\n            type: \"p\",\n            id: \"6bpz2xOwq9eCG9ZZzF4P0LMoydo89lgJg2TkJFvZvKx\",\n            key: \"GxQ6at56Lv1p8V8AFZqQZur4MEKyiZzEMFpiyPnZYv0\",\n            actualSize: 247612,\n            verification: \"8117233191337661625\",\n            fileName: \"384.iife.js\",\n            shardServer: \"https://shard.3.8.4.land\",\n            lastModified: 1701294057573,\n\n            // // '2.0.0 (pre) build 02'\n            // \"version\": \"2\",\n            // \"type\": \"p\",\n            // \"id\": \"dkB8uvB7Sh49L5unSh81YPALE0j1lAH0FHt1DyCOMf0\",\n            // \"key\": \"p1HZ2pGJoNZ5kimwGNuAVi9qwniVbipuq1Mvm8eOZTW\",\n            // \"actualSize\": 48055,\n            // \"verification\": \"2786953871388969929\",\n            // \"fileName\": \"snackabra.min.js\",\n            // \"dateAndTime\": \"2023-11-05T04:59:22.006Z\",\n            // \"fileType\": \"text/javascript\",\n            // \"lastModified\": 1699160331210,\n            // \"shardServer\": \"https://shard.3.8.4.land\"\n\n            // // we need to keep some old copies ... for bootstrap debugging\n            // // '1.1.24 build 02'\n            // version: \"1\",\n            // type: \"p\",\n            // id: \"e_XZgkn6bpmxMXLXd_wn-Xl8ZZzFYrXNDgLTV9Ow4KY\",\n            // key: \"JzII-03YYCf0lu43ySWZ2a4Z8nDuGb_eHN-T9UiUOis\",\n            // verification: \"121034925793945795\"\n\n            // \"version\": \"1\",\n            // \"type\": \"p\",\n            // \"id\": \"fIyzdNScN7MCv58GS5tTmIJCFcR2g3j4qn6Otw8QqW4\",\n            // \"key\": \"uZAr9ozF92rhRijlFIci-Aobosh6yMGRVWjrB8osyRw\",\n            // \"actualSize\": 40142,\n            // \"verification\": \"48906636302226264130\",\n            // \"fileName\": \"snackabra.min.js\",\n            // \"dateAndTime\": \"2023-04-24T22:00:25.952Z\",\n            // \"fileType\": \"text/javascript\",\n            // \"lastModified\": 1682373567992\n        }\n\n    console.log(\"[boot.loadshard] ++++ Using the following shard to load the library: \", jsLib);\n\n    return loadLibraryCode(jsLib);\n}\n", "// (c) 2023 384 (tm)\n\n// parsing properly into TLD and TLD+1 is a bit tricky, generally sites\n// use libraries (we want to avoid that), or the full list from github at:\n// https://github.com/publicsuffix/list/blob/master/public_suffix_list.dat\n// which is 15K entries.\n\n// below we use a small list of the most common TLDs, and then a list of\n// the most common SLDs for each of those TLDs.  This is not perfect, but\n// should work for most cases. Let us know what we missed.\n\nconst singleTLDs = new Set([\n    'localhost',\n    'io', 'dev', 'app', 'land', 'ac', 'lk', 'cc',\n    'com', 'net', 'org', 'jp', 'de', 'fr', 'br', 'it', 'ru', 'es', 'me', 'gov',\n    'pl', 'ca', 'in', 'nl', 'edu', 'eu', 'ch', 'id', 'at', 'kr', 'cz', 'mx',\n    'be', 'se', 'tr', 'tw', 'al', 'ua', 'ir', 'vn', 'cl', 'sk', 'to', 'no',\n    'fi', 'us', 'pt', 'dk', 'ar', 'hu', 'tk', 'gr', 'il', 'sg', 'ru',\n]);\n\nconst tldsWithSLDs = {\n    'uk': ['co', 'ac', 'gov', 'org', 'net'],\n    'au': ['com', 'net', 'org', 'edu', 'gov'],\n    'nz': ['co', 'org', 'net', 'edu', 'gov', 'ac', 'gen', 'kiwi', 'maori'],\n    'br': ['com', 'net', 'org', 'gov', 'edu', 'mil'],\n    'jp': ['co', 'ac', 'go', 'or', 'ne'],\n    'kr': ['co', 'go', 'ne', 'or', 're'],\n    'ar': ['com', 'net', 'org', 'gov', 'edu', 'mil'],\n    'il': ['co', 'ac', 'org', 'net', 'gov'],\n    'sg': ['com', 'net', 'org', 'gov', 'edu', 'per'],\n};\n\nconst ipv4Regex = /^\\d{1,3}(\\.\\d{1,3}){3}$/;\n\nexport function getDomainDetails(hostname: string = globalThis.location?.hostname ?? null) {\n    const errorResult = { baseDomain: null, subdomain: null, port: null };\n\n    if (!hostname) { console.error(\"[getDomainDeatils] cannot read location\"); return errorResult; }\n    const parts = hostname.split('.').reverse();\n    if (parts.length === 0) { console.error(\"[getDomainDeatils] cannot parse location\"); return errorResult; }\n    const topLevel = parts[0];\n    const port = globalThis.location?.port ?? null;\n\n    if (parts.length === 1) {\n        if (topLevel === 'localhost') {\n            return { baseDomain: hostname, subdomain: null, port: port };\n        } else {\n            // for now, only localhost allowed as singleton\n            console.error(\"[getDomainDeatils] singleton TLD not on allowed list\");\n            return errorResult;\n        }\n    }\n\n    if (ipv4Regex.test(parts.slice(0, 4).reverse().join('.'))) {\n        // we support ipv4 addresses, but not ipv6\n        const baseDomain = parts.slice(0, 4).reverse().join('.');\n        const subdomain = parts.length > 4 ? parts.slice(4).reverse().join('.') : null;\n        return { baseDomain, subdomain, port: port ?? null };\n    }\n    \n    let baseDomain = null;\n    let subdomain = null;\n\n    if (topLevel === 'localhost') {\n        baseDomain = parts.slice(0, 1).reverse().join('.');\n        subdomain = parts.slice(1).reverse().join('.') || null;\n    } else if (singleTLDs.has(topLevel)) {\n        // we know length is at least 2\n        baseDomain = parts.slice(0, 2).reverse().join('.');\n        subdomain = parts.slice(2).reverse().join('.') || null;\n    } else {\n        if (parts.length < 3) { return { baseDomain: null, subdomain: null, port: port }; }\n        const secondLevel = parts[1]\n        const slds = tldsWithSLDs[topLevel as keyof typeof tldsWithSLDs];\n        if (slds && slds.includes(secondLevel)) {\n            baseDomain = parts.slice(0, 3).reverse().join('.')\n            subdomain = parts.slice(3).reverse().join('.') || null;\n        } else {\n            console.error(\"[getDomainDeatils] unknown TLD\");\n            return errorResult;\n        }\n    }\n    return { baseDomain, subdomain, port: port };\n}\n\n\n// for testing:\n\n// (globalThis as any).getDomainDetails = getDomainDetails\n\n// interface TestCase {\n//     input: string;\n//     expected: {\n//         baseDomain: string | null;\n//         subdomain: string | null;\n//     };\n// }\n\n// const testCases: TestCase[] = [\n//     { input: \"\", expected: { baseDomain: null, subdomain: null } },\n//     { input: (null as unknown as string), expected: { baseDomain: null, subdomain: null } },\n//     { input: \"example.com\", expected: { baseDomain: \"example.com\", subdomain: null } },\n//     { input: \"subdomain.example.net\", expected: { baseDomain: \"example.net\", subdomain: \"subdomain\" } },\n//     { input: \"deep.subdomain.example.org\", expected: { baseDomain: \"example.org\", subdomain: \"deep.subdomain\" } },\n//     { input: \"example.co.uk\", expected: { baseDomain: \"example.co.uk\", subdomain: null } },\n//     { input: \"subdomain.example.co.uk\", expected: { baseDomain: \"example.co.uk\", subdomain: \"subdomain\" } },\n//     { input: \"localhost\", expected: { baseDomain: \"localhost\", subdomain: null } },\n//     { input: \"xyz.localhost\", expected: { baseDomain: \"localhost\", subdomain: \"xyz\" } },\n//     { input: \"192.168.1.1\", expected: { baseDomain: \"192.168.1.1\", subdomain: null } },\n//     { input: \"server.168.1.1\", expected: { baseDomain: null, subdomain: null } },\n//     { input: \"subdomain.192.168.1.1\", expected: { baseDomain: \"192.168.1.1\", subdomain: \"subdomain\" } },\n//     { input: \"s1.s2.192.168.1.1\", expected: { baseDomain: \"192.168.1.1\", subdomain: \"s1.s2\" } },\n//     { input: \"example.me\", expected: { baseDomain: \"example.me\", subdomain: null } },\n//     { input: \"subdomain.example.me\", expected: { baseDomain: \"example.me\", subdomain: \"subdomain\" } },\n//     { input: \"example.xyz\", expected: { baseDomain: null, subdomain: null } },\n//     { input: \"subdomain.example.xyz\", expected: { baseDomain: null, subdomain: null } },\n//     { input: \"a.b.c.example.com\", expected: { baseDomain: \"example.com\", subdomain: \"a.b.c\" } },\n//     { input: \"uk\", expected: { baseDomain: null, subdomain: null } }, // Second-level domain without a main domain\n//     { input: \"co.uk\", expected: { baseDomain: null, subdomain: null } }, // Second-level domain without a main domain\n//     { input: \"example\", expected: { baseDomain: null, subdomain: null } }, // Single word, no TLD\n//     { input: \"example.invalidtld\", expected: { baseDomain: null, subdomain: null } }, // Invalid TLD\n//     { input: \"example.localhost\", expected: { baseDomain: \"localhost\", subdomain: \"example\" } }, // Localhost with subdomain\n//     { input: \"s1.s2.s3.localhost\", expected: { baseDomain: \"localhost\", subdomain: \"s1.s2.s3\" } }, // Localhost with subdomain\n//     { input: \"localhost.localhost.localhost\", expected: { baseDomain: \"localhost\", subdomain: \"localhost.localhost\" } }, // Localhost with subdomain\n\n// ];\n\n// function runTestCases() {\n//     testCases.forEach((testCase, index) => {\n//         const { input, expected } = testCase;\n//         const result = getDomainDetails(input);\n//         if (!result) {\n//             console.error(`Test case ${index + 1} failed. Input: ${input}, Expected: ${JSON.stringify(expected)}, Got: ${result}`);\n//         } else {\n//             console.assert(result.baseDomain === expected.baseDomain && result.subdomain === expected.subdomain, `Test case ${index + 1} failed. Input: ${input}, Expected: ${JSON.stringify(expected)}, Got: ${JSON.stringify(result)}`);\n//         }\n//     });\n// }\n\n// // Run the tests\n// runTestCases();", "import { Interfaces } from \"../snackabra/snackabra\"\n\nimport { loadShard } from \"./loadShard\"\nimport { getDomainDetails } from \"./tld\"\n\nconst SKIP_OBSERVE = false; // for testing, disables '1'\nconst SKIP_SCAN = false;    // for testing, disables '2'\n\n// ToDo: these might be config options upon creating the loader loader,\n// otherwise we risk committing versions that are too lenient\n// console.log(\"==== BootstrapLoader: countermeasures enabled:\")\nif (SKIP_OBSERVE) console.warn(\"==== BootstrapLoader: 1. MutationObserver disabled (make sure this is not production)\")\nif (SKIP_SCAN) console.warn(\"==== BootstrapLoader: 2. Immediate and repeated scans disabled (make sure this is not production)\")\n\n\nexport class bootstrapLoaderClass {\n    DEBUG: boolean        // enable for detailed countermeasure logging\n\n    baseDomain: string        // the base domain of where we are being served from\n    subdomain: string | null  // the subdomain of the app (if any)\n    port: string              // the port of the app\n\n    // \"we\" are the loader loader; here is current loader:\n    loaderShard: Interfaces.SBObjectHandle;\n\n    reportScans = 0; // don't report for ever\n\n    // we try to make sure that we ourselves aren't blocked\n    securedTimeout = window.setTimeout.bind(window);\n\n    disconnectObserver: () => void;\n\n    tagScan = () => {\n        if (SKIP_SCAN) return;\n        const scriptTags = document.querySelectorAll(\"script\");\n        for (let i = 0; i < scriptTags.length; i++) {\n            if (scriptTags[i].src) {\n                if (scriptTags[i].src.startsWith('blob:')) {\n                    if (this.DEBUG) console.log(`==== BootstrapLoader (immediate scan): Allowing (blob) script tag: ${scriptTags[i].src}`);\n                } else {\n                    const url = new URL(scriptTags[i].src);\n                    // if any reason for problem parsing url, we strip it\n                    if (!url) {\n                        console.warn(`==== BootstrapLoader (immediate scan): Removing external script tag (failed to parse it). Tried sourcing: ${scriptTags[i].src}`);\n                        scriptTags[i].remove;\n                    } else {\n                        // if it has same base domain, we allow it\n                        const { baseDomain } = getDomainDetails();\n                        if (baseDomain === this.baseDomain) {\n                            if (this.DEBUG) console.log(`==== BootstrapLoader (immediate scan): Allowing (hosted) script tag: ${scriptTags[i].src}`);\n                        } else {\n                            console.warn(`==== BootstrapLoader (immediate scan): Removing external script tag. Tried sourcing: ${scriptTags[i].src}`);\n                            scriptTags[i].remove;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    timedScan = () => {\n        this.tagScan();\n        queueMicrotask(() => this.tagScan());\n        this.reportScans++;\n        if (this.reportScans < 10) // first second, frequent\n            this.securedTimeout(this.timedScan, 100);\n        else if (this.reportScans < 20) // next 10 seconds, less frequent\n            this.securedTimeout(this.timedScan, 1000);\n        else if (this.DEBUG)\n            console.log('==== BootstrapLoader (scan): Stopping regular scans for external script tags.')\n    }\n\n    removeExternalScripts = () => {\n        this.securedTimeout(this.timedScan, 0); // first check soon\n\n        if (SKIP_OBSERVE) return () => { };\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'childList') {\n                    mutation.addedNodes.forEach((node) => {\n                        if (node.nodeName === 'SCRIPT' && node instanceof HTMLScriptElement) {\n                            if (node.src) {\n                                console.warn(`==== BootstrapLoader (MutationObserver): Removing external script tag. Tried sourcing: ${node.src}`);\n                                // we need to destroy the node to have a chance of stopping it from being executed\n                                // modifying it (eg modifying \"src\") will not necessarily work\n                                node.remove();\n                                // leave breadcrumbs, and play interference\n                                const newScript = document.createElement('script');\n                                newScript.setAttribute(\"sb384counterMeasure\", \"blocked\");\n                                // this next line supposedly has error\n                                // TS2488: Type 'NamedNodeMap' must have a '[Symbol.iterator]()' method that returns an iterator.\n                                // but ... i don't think so?  overriding for now.  TODO.\n                                // @ts-ignore\n                                for (const attr of node.attributes) {\n                                    if (attr.name !== 'src') {\n                                        newScript.setAttribute(attr.name, attr.value);\n                                    }\n                                }\n                                mutation.target.appendChild(newScript);\n                            } else if (this.DEBUG) {\n                                console.log(`==== BootstrapLoader (MutationObserver): Allowing script tag: ${node.innerHTML.slice(0, 300)}...`);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n\n        // Start observing the body for changes\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n\n        // Return a function to disconnect the observer\n        return () => observer.disconnect();\n    }\n\n    // the third and last line of defense is \"monkey patched scorched earth\":\n    // we know the code in this loader loader employs no timers or event \n    // listeners, so we block anything like that. this does not catch\n    // everything, there are obscure corners like performance monitors\n    // and web sockets that we don't look for (yet).\n    scorchedEarth = () => {\n        if (this.DEBUG) console.log(\"==== BootstrapLoader: SCORCHED EARTH\")\n        class LogAttemptMutationObserver implements MutationObserver {\n            observe(_target: Node, _options?: MutationObserverInit): void {\n                logAttempt(\"MutationObserver\");\n            }\n            disconnect(): void { }\n            takeRecords(): MutationRecord[] {\n                return [];\n            }\n        }\n        const originals = {\n            addEventListener: window.addEventListener.bind(window),\n            setTimeout: window.setTimeout.bind(window),\n            setInterval: window.setInterval.bind(window),\n            MutationObserver: window.MutationObserver,\n            dispatchEvent: window.dispatchEvent.bind(window)\n        };\n        const logAttempt = (methodName: string) => {\n            console.warn(`==== BootstrapLoader: Attempted to use \"${methodName}\" during scorched earth period (blocked).`);\n            return -1;\n        };\n        window.addEventListener = () => logAttempt('addEventListener');\n        (window.setTimeout as any) = () => logAttempt('setTimeout');\n        (window.setInterval as any) = () => logAttempt('setInterval');\n        window.MutationObserver = LogAttemptMutationObserver;\n        window.dispatchEvent = function (event: Event) {\n            logAttempt('dispatchEvent');\n            console.log(event);\n            return true; // faking it\n        };\n        // restoring is done as close as possible to activating the loader\n        let restoreWebApi = () => {\n            // setting things back in place.  an alternative design is\n            // to have a \"hand off\" to the loader itself\n            this.tagScan(); // last chance, heh\n            window.addEventListener = originals.addEventListener;\n            window.setTimeout = originals.setTimeout;\n            window.setInterval = originals.setInterval;\n            window.dispatchEvent = originals.dispatchEvent;\n            window.MutationObserver = originals.MutationObserver;\n            if (this.DEBUG) console.log('==== BootstrapLoader: Original methods restored');\n        }\n        if (this.DEBUG) console.log(\"==== BootstrapLoader: LOADING the loader\")\n        loadShard(this.loaderShard)\n            .then((decrypted) => {\n                if (this.DEBUG) console.log(\"==== [END] BootstrapLoader: LOADING the loader\")\n                restoreWebApi();\n                this.disconnectObserver();\n                queueMicrotask(() => this.tagScan());\n                document.open()\n                document.write(new TextDecoder(\"utf-8\").decode(decrypted))\n                document.close()\n                console.log(\"==== [END] BootstrapLoader: done, handing over to loader\")\n            })\n            .catch(() => { document.body.style.visibility = \"visible\"; });\n    }\n\n    constructor(loaderShard: Interfaces.SBObjectHandle, debug: boolean = false) {\n        this.DEBUG = debug;\n        this.loaderShard = loaderShard;\n\n        const { baseDomain, subdomain, port } = getDomainDetails();\n        if (!baseDomain) {\n            throw new Error(\"unable to determine base domain\")\n        }\n        if (this.DEBUG) {\n            console.log(\"==== BootstrapLoader: domain details:\")\n            console.log({ baseDomain, subdomain, port })\n        }\n        this.baseDomain = baseDomain;\n        this.subdomain = subdomain;\n        this.port = port;\n\n        // hide visuals as fast as we can\n        document.body.style.visibility = \"hidden\";\n        console.log(\"==== [BEGIN] BootstrapLoader: starting\")\n\n        // the rest of this script section are manipulation countermeasures\n        // the loader loader has zero external dependencies, so anything\n        // that shows up as an internal script tag is suspect (and stripped)\n\n        // there are three independent measures:\n        // 1. mutation observer\n        // 2. immediate and repeated scans\n        // 3. disabling much of web API (\"scorched earth\")\n        // when testing you can disable 1 and/or 2:\n\n        if (this.DEBUG) console.log(\"==== BootstrapLoader: 3. Debug logging enabled\")\n\n        // by the way, as far as we *currently* are aware, the order\n        // that these measures kick in appear to be 1,2,3. that's why\n        // we don't have a disable debug method for 3. \n\n        // these measures leverage that we have a carefully designed\n        // handoff between the loader-loader and the loader, and we\n        // know exactly what web API or resources that are needed,\n        // so we can disable everything else.\n\n        // // UPDATE: perhaps, but, for now the focus is on launching to a subdomain\n        // // before we get into any of that, we need to make sure that\n        // // that a change to hash value will trigger a reload; otherwise\n        // // the browser may treat a new 'app' as an old one and not\n        // // reload, which will cause this loader-loader to not recur \n        // function createHashChangeHandler() {\n        //     let lastHash: string = window.location.hash;\n        //     function hashChangeHandler() {\n        //         if (window.location.hash !== lastHash) {\n        //             lastHash = window.location.hash;\n        //             window.removeEventListener('hashchange', hashChangeHandler); // avoid stacking\n        //             window.location.assign(window.location.href);\n        //         }\n        //     }\n        //     return hashChangeHandler;\n        // }\n        // window.addEventListener('hashchange', createHashChangeHandler());\n\n        if (this.DEBUG) console.log(\"==== BootstrapLoader: starting countermeasures\")\n        this.tagScan();\n        queueMicrotask(() => this.tagScan());\n        this.disconnectObserver = this.removeExternalScripts();\n        this.scorchedEarth();\n        if (this.DEBUG) console.log(\"==== ALL DONE ... \")\n    }\n}\n", "// (c) 2023 384 (tm)\n\nimport { Interfaces } from 'src/snackabra/snackabra';\n// import { SnackabraTypes } from '../index';\nimport { SBFileSystem } from '../file/system';\n\nconst DEBUG = true;\nconst DEBUG2 = false;\n\nconst sb384CacheName = 'sb384cache';\n\nconst navigatorObject = ('serviceWorker' in navigator) ? navigator : null;\nif (DEBUG) console.log(\"[SBServiceWorker] navigatorObject: \", navigatorObject);\n\n// let serviceWorkerFunctional = false;\n// (window as any).serviceWorkerFunctional = serviceWorkerFunctional;\n\nlet serverPrefix: string = \"<unknown>\"\nif (window.location) {\n    serverPrefix = window.location.protocol + \"//\" + window.location.host\n    if (DEBUG2) console.log(\"[SBServiceWorker] serverPrefix: \", serverPrefix);\n}\n\n// here is how we might prime it:\n\n// // note that the actual data is in globalBufferMap.get(uniqueShardId)\n// for (const key of this.finalFileList.keys()) {\n//     let entry = this.finalFileList.get(key);\n//     if (entry.type !== \"directory\") {\n//         if (DEBUG2) console.log(`... kicking off cacheResource for ${key} (${entry.path + entry.name})`)\n//         cacheResource(entry.path + entry.name, entry.uniqueShardId, entry.type, this.globalBufferMap);\n//     }\n// }\n\n// console.log(navigator.serviceWorker);\n\nexport class SBServiceWorker {\n    // sb384cachePromise: Promise<Cache | undefined>;\n    #sb384cache: Cache | undefined;\n    #sbfs: SBFileSystem;\n    // serviceWorkerReadyPromise: Promise<void>;\n    ready: Promise<boolean>;\n\n    constructor(sbfs: SBFileSystem, messageHandler: (event: MessageEvent) => void) {\n        this.#sbfs = sbfs;\n        if (DEBUG) console.warn(`[SBServiceWorker] [constructor] ++++ setting up file helper service worker (${serverPrefix}) `)\n        if (DEBUG2) console.log(\"[SBServiceWorker] [constructor ++++ SBFS:\", this.#sbfs);\n        this.ready = new Promise((resolve, reject) => {\n            caches.open(sb384CacheName)\n            .then((cache) => {\n                this.#sb384cache = cache;\n                this.setupServiceWorker(messageHandler)\n                    .then(() => {\n                        if (DEBUG) console.log(\"[SBServiceWorker] ++++ service worker setup complete\")\n                        resolve(true);\n                    })\n                    .catch((err) => {\n                        console.error(\"[SBServiceWorker] Error setting up service worker: \" + err)\n                        reject(false);\n                    })\n            })\n            .catch((err) => {\n                console.error(\"[SBServiceWorker] Error opening cache: \" + err)\n                reject(false);\n            })\n        });\n    }\n\n    postMessage(message: any) {\n        this.ready.then(() => {\n            if ((!this.ready) || (!navigatorObject) ) {\n                const msg = \"[SBServiceWorker] 'ready' is null or false (?) or no navigatorObject ... cannot post any messages\"\n                console.error(msg)\n                throw new Error(msg);\n            }\n            if ((navigatorObject.serviceWorker) && (navigatorObject.serviceWorker.controller)) {\n                navigatorObject.serviceWorker.controller.postMessage(message);\n            } else {\n                const msg = '[SBServiceWorker] Service worker is not active or not ready, or no controlling service worker (?)';\n                console.error(msg);\n                throw new Error(msg);\n            }\n        });\n    }\n\n    // note that this makes sure there is only ONE service worker at the end of this;\n    // if there was one to start, then, it will be \"reused\"\n    async setupServiceWorker(messageHandler: (event: MessageEvent) => void): Promise<void> {\n        if (!navigatorObject) {\n            console.error(\"[SBServiceWorker] ERROR: navigator.serviceWorker is not available\")\n            return Promise.reject(\"[SBServiceWorker] ERROR: navigator.serviceWorker is not available\");\n        }\n        try {\n            const setOfRegistrations = await navigatorObject.serviceWorker.getRegistrations()\n            if (setOfRegistrations.length > 1) {\n                console.error(\"[devLoader] ERROR: we should never have MANY service workers registered\")\n                for (let registration of setOfRegistrations) {\n                    console.log(\"[devLoader] ++++ unregistering service worker: \", registration)\n                    await registration.unregister();\n                }\n                if (DEBUG) console.log('[SBServiceWorker] ++++ ... finished unregistering, registering a fresh one');\n                await navigatorObject.serviceWorker.register('service-worker.js');\n            } else if (setOfRegistrations.length === 1) {\n                if (DEBUG) console.log(\"[devLoader] ++++ we already have a service worker registered\")\n                // send a message to our (single) controlling service worker\n                if (!navigatorObject.serviceWorker.controller) {\n                    console.error(\"[devLoader] ERROR: we have a single registered service worker, but no controller?\")\n                } else {\n                    if (DEBUG) console.log(\"[devLoader] ++++ we have an EXISTING service worker\")\n                }\n            } else {\n                if (DEBUG) console.log('[SBServiceWorker] ++++ Did not have a service worker, registering one');\n                await navigatorObject.serviceWorker.register('service-worker.js');\n            }\n            if (DEBUG) console.log('[SBServiceWorker] ++++ waiting for service worker to be ready then setting up message handler');\n            await navigatorObject.serviceWorker.ready;\n            navigatorObject.serviceWorker.addEventListener('message', messageHandler);\n            await navigatorObject.serviceWorker.ready;\n        } catch (e) {\n            console.error(\"[SBServiceWorker] Error registering service worker: \" + e);\n        }\n    }\n\n    // ToDo: alternatively we should be messaging the service worker with the\n    //       metadata and then have the service worker fetch the data from the\n    //       server (and cache it) only upon request. perhaps that should be a\n    //       separate interface (eg cacheResourceDeferred());\n\n\n    async cacheResourceFromArrayBuffer(fileName: string, mimeType: string, arrayBuffer: ArrayBuffer): Promise<void> {\n        if (!arrayBuffer || !(arrayBuffer instanceof ArrayBuffer)) {\n            const msg = `[SBServiceWorker] Got empty or no data or not an array buffer for cacheResource()`\n            console.error(msg)\n            return Promise.reject(msg);\n        }\n        await this.ready;\n        if ((!this.ready) || (!this.#sb384cache)) {\n            const msg = \"[SBServiceWorker] 'ready' or 'sb384cache' is null ... cannot cache any resources\"\n            console.error(msg)\n            return Promise.reject(msg);\n        }\n        if (fileName === \"/index.html\") {\n            if (DEBUG) console.log(\"[SBServiceWorker] **** automatically adding '/' for '/index.html'\")\n            await this.cacheResourceFromArrayBuffer(\"/\", mimeType, arrayBuffer);\n        }\n        \n        if (DEBUG) console.log(`[SBServiceWorker] Got data for ${fileName} cacheResourceFromArrayBuffer()`, arrayBuffer);\n\n        // create Response to the cache using the file name as the key\n        const response = new Response(arrayBuffer, { status: 200, headers: { 'Content-Type': mimeType } });\n        await this.#sb384cache!.put(fileName, response);\n\n        // Verify that the response is now in the cache - ToDo: can probably optimize and not block\n        const cachedResponse = await this.#sb384cache!.match(fileName);\n        if (cachedResponse) {\n            if (DEBUG2) console.log('Response successfully cached:', cachedResponse);\n        } else {\n            console.error(`**** Response was not cached **** '${fileName}'`, response);\n        }\n    }\n\n    async cacheResourceFromHandle(fileName: string, mimeType: string, handle: Interfaces.SBObjectHandle): Promise<void> {\n        if (DEBUG) console.log(`[SBServiceWorker] Caching resource '${fileName}' mimeType '${mimeType}' from handle:`, handle);\n        this.#sbfs.server.storage.fetchData(handle)\n        .then(async (arrayBuffer) => {\n            return this.cacheResourceFromArrayBuffer(fileName, mimeType, arrayBuffer);\n        })\n        .catch((err) => {\n            const msg = `[SBServiceWorker] Error fetching data for handle ${handle}: ${err}`\n            console.error(msg)\n            return Promise.reject(msg);\n        });\n    }\n}\n\n\n\n        // this.#sbfs.server.storage.fetchData(handle)\n        //     .then(async (arrayBuffer) => {\n        //         // Create a Response object with the ArrayBuffer and MIME type\n        //         const response = new Response(arrayBuffer, {\n        //             status: 200, // this part seems to be browser/OS dependent\n        //             headers: { 'Content-Type': mimeType },\n        //         });\n        //         // Add the Response to the cache using the file name as the key\n        //         await this.#sb384cache!.put(fileName, response);\n        //         // Verify that the response is now in the cache\n        //         const cachedResponse = await this.#sb384cache!.match(fileName);\n        //         if (cachedResponse) {\n        //             if (DEBUG2) console.log('Response successfully cached:', cachedResponse);\n        //         } else {\n        //             console.error(`**** Response was not cached **** '${fileName}'`, response);\n        //         }\n        //     })\n        //     .catch((err) => {\n        //         console.error(`[SBServiceWorker] Error fetching data for handle ${handle}: ${err}`)\n        //     });\n\n        \n    // // older approach, when being tested from inside multifile handler (where a globalbuffer map was available)\n    // async cacheResource(fileName: string, uniqueShardId: string, mimeType: string, bufferMap: Map<any, any>): Promise<void> {\n    //     if (!serviceWorkerFunctional) {\n    //         console.error(\"service worker is not operational\")\n    //         return Promise.resolve();\n    //     }\n    //     if (fileName === \"/service-worker.js\" /* fileName.endsWith(\"service-worker.js\") */) {\n    //         console.log(\"**** special override: self-virtualizing service worker (/service-worker.js)\")\n    //         return Promise.resolve();\n    //     }\n    //     if (fileName === \"/index.html\") {\n    //         console.log(\"**** special override: index.html can also be accessed as '/'\")\n    //         await this.cacheResource(\"/\", uniqueShardId, mimeType, bufferMap);\n    //     }\n    //     if (DEBUG) console.log(`Caching resource '${fileName}' with uniqueShardId '${uniqueShardId}' and mimeType '${mimeType}'`);\n    //     const cache = (await this.sb384cachePromise);\n    //     let arrayBuffer = bufferMap.get(uniqueShardId);\n\n    //     // Create a Response object with the ArrayBuffer and MIME type\n    //     const response = new Response(arrayBuffer, {\n    //         status: 200, // this part seems to be browser/OS dependent\n    //         headers: { 'Content-Type': mimeType },\n    //     });\n    //     // Add the Response to the cache using the file name as the key\n    //     await cache!.put(fileName, response);\n    // }", "// (c) 2023 384 (tm)\n\nimport { loadShard, bootstrapJsLib } from './loadShard';\nimport { bootstrapLoaderClass } from './loaderLoader';\nimport { getDomainDetails } from './tld';\nimport { SBServiceWorker } from './serviceWorker';\n\nexport const boot = {\n    loadShard: loadShard,\n    bootstrapJsLib: bootstrapJsLib,\n    boostrapLoaderClass: bootstrapLoaderClass,\n    getDomainDetails: getDomainDetails,\n    serviceWorker: SBServiceWorker\n};\n", "// (c) 2023 384 (tm)\n\n// export const base62mi05 = \"012345ABCDMPQRTVXJrEYWH8GLN7dkfu\" // \"v05.02\"\n// export const base62mi05 = \"0123456789ADMQRTXJrEYWCPBdHLNukf\" // \"v05.03\"\n\nexport const base62mi05 = \"0123456789ADMRTXQjrEyWCLBdHpNufk\" // \"v05.04\"\n\nconst base62 = base62mi05;\nconst base62Regex = new RegExp(`^[${base62}]{4}$`);\n\nexport const strongpinVersion = \"0.5.6\";\n\n// TODO: strongpin generation should support provision of extra entropy,\n//       in the same manner as strongphrase. we've prepared for it, but\n//       it's not implemented yet. extra entropy can be any string\n\n// generates a correctly-formed strongpin\nexport async function generateStrongPin(extraEntropy?: string) {\n    if (extraEntropy && extraEntropy.length > 0) {\n        throw new Error('Not supported yet');\n    }\n    const num = Math.floor(Math.random() * Math.pow(2, 19));\n    const encoded = encode(num);\n    return { num, encoded };\n}\n\n// convenience wrapper, generates standardized 4x4 strongpin, concatenated (and spaced)\nexport async function generateStrongPin16(): Promise<string> {\n    return (await Promise.all(Array(4).fill(null).map(() => generateStrongPin())))\n    .map(result => result.encoded)\n    .join(' ');\n}\n\n// encodes a 19-bit number into a 4-character string\nexport function encode(num: number): string {\n    const charMap = base62;\n    if (num < 0 || num > 0x7ffff)\n        throw new Error('Input number is out of range. Expected a 19-bit integer.');\n    let bitsArr15 = [\n        (num >> 14) & 0x1f,\n        (num >> 9) & 0x1f,\n        (num >> 4) & 0x1f,\n        (num) & 0x0f\n    ];\n    bitsArr15[3] |= (bitsArr15[0] ^ bitsArr15[1] ^ bitsArr15[2]) & 0x10;\n    return bitsArr15.map(val => charMap[val]).join('');\n}\n\n// does a \"pre-processing\", if there are substitions to be suggested,\n// it will perform them.  the callee should check if the returned\n// string has changed, in which case you should confirm with the user\n// something like 'did you mean to type this?'.  if the returned\n// string is the same as the input string, then there are no\n// substitutions to be made (unamgibuous).\nexport function process(str: string): string {\n    // if (!/^[a-zA-Z0-9]{4}$/.test(str))\n    //     throw new Error(`Invalid input string. Expected a 4-character alphanumeric string (got \"${str}\").`);\n\n    const substitutions: { [key: string]: string } = {\n        // deliberately overly clear mapping\n        \"o\": \"0\", \"O\": \"0\", \"i\": \"1\", \"I\": \"1\",\n        \"l\": \"1\", \"z\": \"2\", \"Z\": \"2\", \"s\": \"5\",\n        \"S\": \"5\", \"b\": \"6\", \"c\": \"C\", \"m\": \"M\",\n        \"P\": \"p\", \"a\": \"9\", \"g\": \"9\", \"q\": \"9\",\n        \"t\": \"T\", \"V\": \"u\", \"v\": \"u\", \"x\": \"X\",\n        \"J\": \"j\", \"e\": \"E\", \"F\": \"f\", \"Y\": \"y\",\n        \"w\": \"W\", \"h\": \"N\", \"n\": \"N\", \"G\": \"6\",\n        \"K\": \"k\", \"U\": \"u\"\n    }\n    let processedStr = '';\n    for (let char of str)\n        processedStr += substitutions[char] || char;\n    return processedStr;\n}\n\n// will take a (correctly formed) 4-character string and return the\n// original 19-bit number.  if the parity is incorrect, it will\n// return null, meaning, one of the four characters were typed in\n// incorrectly - for example, an \"8\" was entered that should be a \"B\".\n// the callee should check for null and ask the user something like\n// 'are you sure about these four characters?'.\nexport function decode(encoded: string): number | null {\n    if (!base62Regex.test(encoded))\n        throw new Error(`Input string contains invalid characters (${encoded}).`);\n    let bin = Array.from(encoded)\n        .map(c => base62.indexOf(c))\n    if (bin.reduce((a, b) => (a ^ b)) & 0x10)\n        return null;\n    return (((bin[0] * 32 + bin[1]) * 32 + bin[2]) * 16 + (bin[3] & 0x0f));\n}\n", "// (c) 2023 384 (tm)\n\nimport { encode, decode, generateStrongPin, generateStrongPin16, process } from './strongpin';\n\n// ... replaced by actual font!\n// import { strongpinFont } from './strongpin.font';\nimport { SBCrypto } from '../snackabra/snackabra';\n\nimport { getRandomValues } from '../snackabra/snackabra';\n\nexport const crypto = {\n    strongpin : {\n        encode,\n        decode,\n        generate: generateStrongPin,\n        generate16: generateStrongPin16,\n        process,\n        // font: strongpinFont,\n    },\n    sbCrypto: new SBCrypto(),\n    getRandomValues,\n};\n", "// (c) 2023 384 (tm)\n\n// const DEBUG = true;\nconst DEBUG2 = false;\n\nexport const version = \"0.0.8\";\n\nconst SUGGESTED_PHRASE_LENGTH = 3;\nconst PBKDF2_10M_ITERATIONS = 10 * 1000 * 1000;\n\ntype Params = { extraEntropy?: string; words?: number };\n\n/**\n * generatePassPhrase()\n * \n * Generates a passphrase from a list of 16K words. Results in 14 bits of reasonably\n * strong entropy per word. 3 (the default) should be fine for most purposes.\n * \n * Parameters can be passed as a string (optional extra entropy), number (number of pass phrase words),\n * or if you want to specify both, as an object with the following properties:\n * \n * @example\n * {\n *  extraEntropy: \"some extra entropy\",\n *  words: 3\n * }\n * \n * Number of words defaults to '3', and extraEntropy defaults to none (duh),\n * so you can also just call it without any parameters. It will return the phrase with\n * the words separated by spaces.\n * \n * Note that the word list only contains lower case letters and words. Also please \n * note there may still be a few undesirable words in the list, please notify us\n * if you find any. \n * \n * Generally, for a user interface, you should generally not allow the user\n * to hit \"regenerate\", instead we would suggest that you generate a set of phrases,\n * and they can pick one. That way you are more likely to constrain the loss of\n * entropy (which would be ln2() of number of choices). A good number is probably 4,\n * which with a choice of 3 words will total 40 bits of entropy, a general good amount.\n * \n * The 'user provided entropy' can either be another external source (eg random.org),\n * or some biometric data (eg mouse movements, keystrokes, etc), or simply offering\n * the user to type in a bunch of \"random\" characters on their keyboard. Regardless,\n * this code does not assume any particular quality of that additional entropy, it\n * can be terrible and it won't matter (much).\n * \n * For VERY strong phrases, we would suggest five (5) words, and allow the user to\n * chose among 8 phrases. \n * \n */\nexport async function generatePassPhrase(params?: string | number | Params): Promise<string> {\n    let extraEntropy: string | undefined;\n    let words: number | undefined;\n\n    const RND_BUFFER_SIZE = 32; // 256 bits\n    const MAX_WORDS = 16; // 256 bits divided by 16\n    const WORD_LIST_SIZE_LN2 = 14; // 2^14 = 16384\n    const WORD_LIST_SIZE = 2 ** WORD_LIST_SIZE_LN2;\n\n    if (typeof params === 'string') {\n        extraEntropy = params;\n    } else if (typeof params === 'number') {\n        words = params;\n    } else if (params) {\n        extraEntropy = params.extraEntropy;\n        words = params.words;\n    }\n\n    if (!words || words < 1) words = SUGGESTED_PHRASE_LENGTH;\n    if (words > MAX_WORDS) throw new Error(`Too many words requested, max is ${MAX_WORDS}.`);\n\n    // sanity check make sure our word array is the expected size\n    if (words16K_v03.length !== WORD_LIST_SIZE) throw new Error(\"Word list is not the expected size (16x1024).\")\n\n    // Generate 256 random bits from crypto\n    const randomValues = window.crypto.getRandomValues(new Uint8Array(RND_BUFFER_SIZE));\n\n    let entropySource = randomValues;\n\n    // If extraEntropy is provided, hash it and append to the randomValues, and then hash the result\n    if (extraEntropy) {\n        const encoder = new TextEncoder();\n        const extraEntropyHash = await window.crypto.subtle.digest('SHA-256', encoder.encode(extraEntropy));\n\n        const combinedEntropySource = new Uint8Array([...randomValues, ...new Uint8Array(extraEntropyHash)]);\n        entropySource = new Uint8Array(await window.crypto.subtle.digest('SHA-256', combinedEntropySource));\n    }\n\n    // Create a Uint16 view of the entropy source\n    const indices = new Uint16Array(entropySource.buffer);\n\n    // Map the indices to words and join them into a passphrase\n    const passphrase = Array.from(indices, i => words16K_v03[i & (WORD_LIST_SIZE - 1)]).slice(0, words).join(' ');\n\n    return passphrase;\n};\n\n// export function generatePassPhrase(extraEntropy?: string, words = SUGGESTED_PHRASE_LENGTH) {\n//     // sanity check make sure our word array is the expected size\n//     if (words16K_v03.length !== WORD_LIST_SIZE) throw new Error(\"Word list is not the expected size (16x1024).\")\n\n//     // Create an array to hold random indices\n//     const randomIndices = new Uint16Array(words);\n\n//     // Fill the array with random 14-bit numbers\n//     window.crypto.getRandomValues(randomIndices);\n\n//     // Map the indices to words and join them into a passphrase\n//     return Array.from(randomIndices, i => words16K_v03[i & (WORD_LIST_SIZE - 1)]).join(' ');\n// };\n\n/**\n * generateStrongKey()\n * \n * @param passphrase \n * \n * Uses PBKDF2 (10M iterations, SHA-256) to generate a strong key from a passphrase.\n * Returns an object with the following properties:\n * \n * @example\n * {\n *  phrase: \"passphrase\",  // whatever passphrase was used\n *  key: CryptoKey,\n *  salt: Uint8Array(16),\n *  iterations: 10000000\n * }\n * \n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey\n * \n * Roughly speaking, 10M is considered very strong. 1M is considered strong. 100K is considered\n * reasonable. 10K is considered weak. 1K is considered very weak. Currently this cannot\n * be overriden by the caller, since modern clients should handle this fine. If you need\n * a quicker generator, we suggest you create a new function that is clearly named as\n * such (eg 'generateQuickAndDirtyWeakKey()').\n * \n */\nexport async function generateStrongKey(passphrase?: string) {\n    // Generate a random salt\n    const salt = window.crypto.getRandomValues(new Uint8Array(16));\n    if (!passphrase) passphrase = await generatePassPhrase(SUGGESTED_PHRASE_LENGTH);\n    return await _generateKey(passphrase, salt, PBKDF2_10M_ITERATIONS);\n}\n\n/**\n * recreateStrongKey()\n * \n * Takes precise parameters (typically from a previous call to generateStrongKey())\n * and recreates the strong key.  You should not use this to create a new key\n * unless you are sure you know what you are doing ... use generateStrongKey() instead.\n * \n * @param passphrase \n * @param salt \n * @param iterations \n */\nexport async function recreateStrongKey(passphrase: string, salt: Uint8Array, iterations: number) {\n    // todo: some sanity checking of parameters\n    return await _generateKey(passphrase, salt, iterations);\n}\n\nasync function _generateKey(passphrase: string, salt: Uint8Array, iterations: number) {\n    const encoder = new TextEncoder();\n    const passphraseKey = encoder.encode(passphrase);\n\n    // Import the passphrase into a CryptoKey\n    const baseKey = await window.crypto.subtle.importKey(\n        'raw',\n        passphraseKey,\n        { name: 'PBKDF2' },\n        false,\n        ['deriveBits', 'deriveKey']\n    );\n\n    // Derive a strong key\n    const strongKey = await window.crypto.subtle.deriveKey(\n        {\n            name: 'PBKDF2',\n            salt: salt,\n            iterations: iterations,\n            hash: 'SHA-256'\n        },\n        baseKey,\n        // You can define the specifics of your derived key\n        { name: 'AES-GCM', length: 256 },\n        true,\n        ['encrypt', 'decrypt']\n    );\n\n    const returnKey = {\n        phrase: passphrase,\n        key: strongKey,\n        salt: salt,\n        iterations: iterations,\n    }\n\n    if (DEBUG2) {\n        console.log(\"Strong key generated: \");\n        console.log(returnKey);\n    }\n    return returnKey;\n}\n\n// todo:\n// alternative design for three-word phrase generation is to pick three words\n// and a single digit (2-9).  that's 45 bits, or 9 characters of base32mi.\n// thus for example a user could pick between \"unloading proposed lenny 7\"\n// or the equivalent \"LU8 3Rd 2f5\".  \n//\n// for much stronger phrase, five words is 70 bits, or 14 characters of base32mi.\n// eg NNNN-NNNNN-NNNNN (4, 5, 5) eg \"Ej07 T04F7 b9LeR\"\n\n// 1024 rows of 16 words, or 16K words.  14 bits per word.  3 words should be fine.  \n// This is 'v03' of word list projects developed at the Magnusson Institute, (c) MI 2021, used with permission (also available under MIT license)\n// See documentation and attendant commentary at https://github.com/Magnusson-Institute/passphrase.us\nconst words16K_v03 = [\n    \"that\", \"this\", \"have\", \"they\", \"what\", \"from\", \"there\", \"about\", \"know\", \"just\", \"said\", \"like\", \"will\", \"when\", \"more\", \"people\",\n    \"right\", \"time\", \"could\", \"into\", \"going\", \"other\", \"then\", \"because\", \"yeah\", \"these\", \"want\", \"good\", \"also\", \"over\", \"only\", \"come\",\n    \"very\", \"even\", \"first\", \"where\", \"most\", \"make\", \"down\", \"much\", \"those\", \"many\", \"okay\", \"take\", \"before\", \"need\", \"such\", \"little\",\n    \"work\", \"still\", \"never\", \"last\", \"year\", \"world\", \"life\", \"around\", \"tell\", \"mean\", \"between\", \"state\", \"thing\", \"both\", \"same\", \"long\",\n    \"another\", \"great\", \"three\", \"again\", \"each\", \"school\", \"home\", \"love\", \"help\", \"away\", \"thought\", \"doing\", \"find\", \"sure\", \"give\", \"used\",\n    \"always\", \"better\", \"since\", \"next\", \"today\", \"night\", \"thank\", \"place\", \"during\", \"kind\", \"maybe\", \"best\", \"anything\", \"found\", \"must\", \"family\",\n    \"point\", \"left\", \"sorry\", \"talk\", \"percent\", \"nothing\", \"head\", \"under\", \"city\", \"feel\", \"keep\", \"public\", \"high\", \"country\", \"social\", \"enough\",\n    \"call\", \"room\", \"believe\", \"mother\", \"until\", \"face\", \"once\", \"hand\", \"please\", \"case\", \"system\", \"million\", \"group\", \"father\", \"course\", \"number\",\n    \"game\", \"real\", \"someone\", \"woman\", \"health\", \"getting\", \"small\", \"water\", \"news\", \"name\", \"second\", \"change\", \"business\", \"power\", \"door\", \"story\",\n    \"often\", \"data\", \"team\", \"company\", \"question\", \"book\", \"among\", \"problem\", \"later\", \"hard\", \"already\", \"wait\", \"making\", \"person\", \"together\", \"young\",\n    \"side\", \"morning\", \"play\", \"example\", \"program\", \"able\", \"become\", \"open\", \"almost\", \"behind\", \"table\", \"live\", \"start\", \"else\", \"human\", \"john\",\n    \"early\", \"five\", \"whole\", \"history\", \"across\", \"remember\", \"idea\", \"mind\", \"process\", \"wrong\", \"season\", \"rather\", \"police\", \"control\", \"although\", \"general\",\n    \"girl\", \"everyone\", \"body\", \"leave\", \"party\", \"line\", \"large\", \"pretty\", \"child\", \"light\", \"office\", \"music\", \"nice\", \"move\", \"level\", \"fine\",\n    \"order\", \"food\", \"front\", \"stay\", \"matter\", \"either\", \"moment\", \"toward\", \"future\", \"local\", \"area\", \"sense\", \"issue\", \"hope\", \"anyone\", \"possible\",\n    \"baby\", \"voice\", \"taking\", \"turn\", \"reason\", \"close\", \"half\", \"deal\", \"student\", \"friend\", \"inside\", \"major\", \"federal\", \"service\", \"gone\", \"street\",\n    \"myself\", \"market\", \"hair\", \"sort\", \"guess\", \"bring\", \"post\", \"gave\", \"provide\", \"figure\", \"security\", \"heart\", \"outside\", \"cause\", \"tonight\", \"bush\",\n    \"wife\", \"hold\", \"model\", \"south\", \"north\", \"report\", \"phone\", \"thus\", \"above\", \"ready\", \"soon\", \"media\", \"special\", \"watch\", \"couple\", \"tried\",\n    \"available\", \"current\", \"evidence\", \"energy\", \"goes\", \"view\", \"happy\", \"science\", \"stuff\", \"field\", \"alone\", \"space\", \"easy\", \"middle\", \"photo\", \"town\",\n    \"hello\", \"month\", \"result\", \"vote\", \"park\", \"answer\", \"present\", \"common\", \"certain\", \"road\", \"west\", \"interest\", \"upon\", \"herself\", \"similar\", \"practice\",\n    \"cost\", \"nature\", \"force\", \"test\", \"sound\", \"short\", \"include\", \"series\", \"brought\", \"congress\", \"language\", \"strong\", \"risk\", \"near\", \"check\", \"agree\",\n    \"list\", \"physical\", \"nation\", \"share\", \"project\", \"video\", \"culture\", \"film\", \"action\", \"private\", \"position\", \"blood\", \"learn\", \"miss\", \"total\", \"floor\",\n    \"economy\", \"industry\", \"earth\", \"record\", \"stand\", \"green\", \"truth\", \"movie\", \"brother\", \"wall\", \"rate\", \"fall\", \"board\", \"increase\", \"husband\", \"forward\",\n    \"ahead\", \"kept\", \"defense\", \"return\", \"price\", \"note\", \"window\", \"effects\", \"response\", \"walk\", \"summer\", \"focus\", \"blue\", \"paper\", \"average\", \"east\",\n    \"type\", \"beyond\", \"quality\", \"daughter\", \"step\", \"design\", \"coach\", \"blog\", \"tomorrow\", \"final\", \"hour\", \"staff\", \"drive\", \"ability\", \"race\", \"simple\",\n    \"section\", \"access\", \"entire\", \"cold\", \"various\", \"century\", \"subject\", \"mouth\", \"chief\", \"begin\", \"page\", \"speak\", \"author\", \"brown\", \"consider\", \"minute\",\n    \"choice\", \"review\", \"write\", \"cool\", \"doctor\", \"anyway\", \"senator\", \"offer\", \"excuse\", \"seven\", \"legal\", \"amount\", \"main\", \"sleep\", \"giving\", \"huge\",\n    \"theory\", \"impact\", \"success\", \"worth\", \"friday\", \"perfect\", \"hurt\", \"onto\", \"range\", \"stopped\", \"online\", \"crazy\", \"sitting\", \"welcome\", \"trade\", \"wish\",\n    \"picture\", \"size\", \"below\", \"eight\", \"sister\", \"shut\", \"sign\", \"piece\", \"june\", \"term\", \"member\", \"allow\", \"follow\", \"cover\", \"image\", \"worry\",\n    \"save\", \"judge\", \"march\", \"source\", \"hospital\", \"trust\", \"effort\", \"heat\", \"original\", \"saturday\", \"kitchen\", \"expect\", \"pass\", \"spend\", \"union\", \"july\",\n    \"forget\", \"smile\", \"safe\", \"build\", \"hate\", \"glass\", \"message\", \"popular\", \"river\", \"account\", \"anybody\", \"skin\", \"debate\", \"honey\", \"trouble\", \"dinner\",\n    \"send\", \"address\", \"daily\", \"ball\", \"credit\", \"region\", \"caught\", \"goal\", \"afraid\", \"october\", \"army\", \"budget\", \"club\", \"text\", \"search\", \"anymore\",\n    \"visit\", \"senior\", \"unless\", \"peace\", \"primary\", \"female\", \"version\", \"civil\", \"leader\", \"sample\", \"drink\", \"scene\", \"funny\", \"april\", \"income\", \"fish\",\n    \"chair\", \"shown\", \"material\", \"favorite\", \"monday\", \"brain\", \"network\", \"explain\", \"property\", \"nuclear\", \"degree\", \"song\", \"tuesday\", \"freedom\", \"marriage\", \"basic\",\n    \"wonder\", \"stage\", \"lady\", \"scale\", \"develop\", \"base\", \"rich\", \"spring\", \"fresh\", \"coffee\", \"clean\", \"september\", \"opinion\", \"bottom\", \"stock\", \"hundred\",\n    \"title\", \"choose\", \"radio\", \"claim\", \"survey\", \"rule\", \"negative\", \"rose\", \"capital\", \"normal\", \"island\", \"easily\", \"letter\", \"dream\", \"surface\", \"wide\",\n    \"trial\", \"purpose\", \"suggest\", \"sell\", \"direct\", \"protect\", \"weekend\", \"yesterday\", \"pull\", \"measure\", \"mass\", \"thursday\", \"remain\", \"seat\", \"appear\", \"labor\",\n    \"amazing\", \"camera\", \"museum\", \"method\", \"tree\", \"alive\", \"trip\", \"patient\", \"plus\", \"shoulder\", \"grow\", \"secret\", \"firm\", \"style\", \"avoid\", \"strategy\",\n    \"edge\", \"gold\", \"heavy\", \"quick\", \"charge\", \"neither\", \"travel\", \"enjoy\", \"produce\", \"captain\", \"gender\", \"hotel\", \"task\", \"round\", \"sweet\", \"track\",\n    \"apple\", \"afternoon\", \"require\", \"truly\", \"correct\", \"hill\", \"actual\", \"ship\", \"catch\", \"annual\", \"screen\", \"moral\", \"vice\", \"lake\", \"benefit\", \"drop\",\n    \"glad\", \"quiet\", \"beach\", \"filled\", \"empty\", \"memory\", \"ride\", \"card\", \"january\", \"tiny\", \"release\", \"google\", \"reform\", \"warm\", \"dance\", \"garden\",\n    \"reduce\", \"speed\", \"rise\", \"grew\", \"neck\", \"improve\", \"slow\", \"raise\", \"prison\", \"winter\", \"extra\", \"battle\", \"august\", \"receive\", \"salt\", \"spot\",\n    \"ended\", \"foot\", \"worst\", \"library\", \"spirit\", \"code\", \"mountain\", \"distance\", \"exercise\", \"regular\", \"broken\", \"join\", \"throw\", \"machine\", \"carry\", \"stone\",\n    \"chest\", \"desk\", \"aware\", \"demand\", \"camp\", \"wear\", \"identify\", \"crowd\", \"magazine\", \"artist\", \"target\", \"paying\", \"novel\", \"decide\", \"gotten\", \"notice\",\n    \"link\", \"smart\", \"cook\", \"path\", \"advice\", \"surprise\", \"cash\", \"email\", \"twice\", \"guard\", \"snow\", \"solution\", \"spread\", \"unique\", \"bright\", \"faculty\",\n    \"train\", \"urban\", \"dress\", \"uncle\", \"lucky\", \"eating\", \"truck\", \"dude\", \"evil\", \"planet\", \"weather\", \"square\", \"decade\", \"wild\", \"damage\", \"supreme\",\n    \"prevent\", \"mention\", \"host\", \"animal\", \"teach\", \"obvious\", \"master\", \"december\", \"push\", \"balance\", \"useful\", \"file\", \"agent\", \"exist\", \"initial\", \"soft\",\n    \"finish\", \"victory\", \"rain\", \"tired\", \"birth\", \"youth\", \"nose\", \"wine\", \"digital\", \"moon\", \"shop\", \"suit\", \"option\", \"sugar\", \"valley\", \"border\",\n    \"exchange\", \"lunch\", \"core\", \"clip\", \"jury\", \"domestic\", \"lying\", \"forest\", \"unit\", \"equal\", \"boat\", \"plenty\", \"yellow\", \"apart\", \"owner\", \"democracy\",\n    \"stick\", \"wake\", \"double\", \"tall\", \"visual\", \"traffic\", \"coast\", \"proud\", \"soul\", \"busy\", \"weird\", \"famous\", \"mistake\", \"wood\", \"village\", \"cross\",\n    \"guide\", \"self\", \"flight\", \"quarter\", \"aside\", \"ring\", \"chicken\", \"voting\", \"till\", \"shirt\", \"ladies\", \"waste\", \"horse\", \"theater\", \"laugh\", \"universe\",\n    \"ensure\", \"gain\", \"smoke\", \"barely\", \"plastic\", \"sport\", \"pair\", \"february\", \"sight\", \"taste\", \"remove\", \"stuck\", \"reference\", \"match\", \"gift\", \"supply\",\n    \"farm\", \"blame\", \"boss\", \"pattern\", \"super\", \"fuel\", \"object\", \"wedding\", \"fault\", \"carefully\", \"silver\", \"indicate\", \"mama\", \"reaction\", \"seek\", \"feature\",\n    \"metal\", \"enter\", \"twenty\", \"user\", \"ought\", \"usual\", \"describe\", \"buddy\", \"parent\", \"argue\", \"beauty\", \"magic\", \"click\", \"twitter\", \"device\", \"shift\",\n    \"bunch\", \"golf\", \"assume\", \"finger\", \"achieve\", \"drew\", \"draw\", \"bridge\", \"calm\", \"silent\", \"ancient\", \"kiss\", \"tool\", \"flat\", \"drove\", \"typical\",\n    \"occur\", \"quote\", \"rising\", \"display\", \"print\", \"meat\", \"orange\", \"admit\", \"rural\", \"accident\", \"pepper\", \"pool\", \"length\", \"grace\", \"solar\", \"vehicle\",\n    \"giant\", \"fashion\", \"crew\", \"estate\", \"treat\", \"tape\", \"amendment\", \"jump\", \"faster\", \"struggle\", \"suspect\", \"cream\", \"reflect\", \"rice\", \"rare\", \"jimmy\",\n    \"afford\", \"cheese\", \"album\", \"topic\", \"milk\", \"hurry\", \"cognitive\", \"ocean\", \"grant\", \"aunt\", \"mirror\", \"solid\", \"limit\", \"copy\", \"episode\", \"outcome\",\n    \"chapter\", \"bird\", \"acts\", \"transfer\", \"affected\", \"facing\", \"numerous\", \"airport\", \"promote\", \"loud\", \"awesome\", \"flying\", \"attitude\", \"darkness\", \"vast\", \"conduct\",\n    \"upper\", \"frame\", \"danger\", \"strike\", \"pink\", \"upset\", \"stadium\", \"panel\", \"brand\", \"relief\", \"emphasis\", \"category\", \"injury\", \"diet\", \"jersey\", \"gulf\",\n    \"dust\", \"client\", \"joke\", \"escape\", \"wealth\", \"coat\", \"alright\", \"grass\", \"santa\", \"brief\", \"mobile\", \"circle\", \"encourage\", \"alcohol\", \"feed\", \"noise\",\n    \"wave\", \"stairs\", \"advance\", \"engine\", \"plate\", \"document\", \"purchase\", \"sudden\", \"zone\", \"crying\", \"draft\", \"resource\", \"unable\", \"quit\", \"engage\", \"anger\",\n    \"tone\", \"festival\", \"element\", \"latter\", \"motion\", \"gore\", \"decline\", \"chosen\", \"deeply\", \"pregnant\", \"talent\", \"hidden\", \"express\", \"armed\", \"stomach\", \"spokesman\",\n    \"session\", \"winner\", \"landscape\", \"sauce\", \"narrow\", \"duty\", \"error\", \"bike\", \"capable\", \"fruit\", \"grab\", \"actor\", \"rush\", \"lesson\", \"bread\", \"sing\",\n    \"journey\", \"avenue\", \"butter\", \"steel\", \"kick\", \"route\", \"volume\", \"turkey\", \"minimum\", \"cycle\", \"electric\", \"yard\", \"detail\", \"gaze\", \"holiday\", \"trend\",\n    \"theme\", \"cheap\", \"mixture\", \"roof\", \"junior\", \"cute\", \"relax\", \"asleep\", \"witness\", \"iron\", \"jacket\", \"prepare\", \"carbon\", \"skill\", \"mixed\", \"sand\",\n    \"sentence\", \"shadow\", \"fifth\", \"manage\", \"dean\", \"disagree\", \"unusual\", \"hero\", \"hungry\", \"replace\", \"anxiety\", \"height\", \"prefer\", \"zero\", \"creek\", \"smooth\",\n    \"proof\", \"iphone\", \"innocent\", \"mail\", \"juice\", \"item\", \"split\", \"aspect\", \"crucial\", \"cable\", \"arrest\", \"attend\", \"aids\", \"recall\", \"swear\", \"fiction\",\n    \"ticket\", \"pacific\", \"update\", \"index\", \"shock\", \"desert\", \"profit\", \"nurse\", \"thirty\", \"math\", \"minor\", \"substance\", \"dirt\", \"loan\", \"monitor\", \"entry\",\n    \"cloud\", \"hence\", \"savings\", \"ending\", \"awful\", \"angle\", \"reveal\", \"boots\", \"comfort\", \"ongoing\", \"gate\", \"fiscal\", \"sheriff\", \"ordinary\", \"stir\", \"deliver\",\n    \"bone\", \"solve\", \"fiber\", \"license\", \"olympic\", \"portion\", \"cried\", \"random\", \"navy\", \"cake\", \"select\", \"shame\", \"lift\", \"ignore\", \"exact\", \"garlic\",\n    \"pilot\", \"marine\", \"ultimate\", \"shaking\", \"veteran\", \"gallery\", \"sake\", \"wheel\", \"define\", \"citizen\", \"hunt\", \"inner\", \"maximum\", \"liberty\", \"lock\", \"fool\",\n    \"swing\", \"unknown\", \"rough\", \"switch\", \"foster\", \"upstairs\", \"royal\", \"illness\", \"logic\", \"wisdom\", \"column\", \"corn\", \"repeat\", \"prayer\", \"plot\", \"sheet\",\n    \"riding\", \"clock\", \"efficient\", \"drama\", \"stable\", \"suffer\", \"ceiling\", \"pride\", \"mystery\", \"obtain\", \"brilliant\", \"knee\", \"couch\", \"oven\", \"curious\", \"deputy\",\n    \"earn\", \"belt\", \"expand\", \"palm\", \"frozen\", \"analyst\", \"dating\", \"champion\", \"phrase\", \"slept\", \"menu\", \"sequence\", \"dynamic\", \"cousin\", \"knock\", \"essay\",\n    \"gear\", \"discover\", \"elite\", \"rescue\", \"load\", \"silly\", \"ugly\", \"flash\", \"wash\", \"scope\", \"deck\", \"olive\", \"kingdom\", \"dawn\", \"muscle\", \"domain\",\n    \"priority\", \"divorce\", \"twelve\", \"evaluate\", \"soldier\", \"dining\", \"depth\", \"ethics\", \"involve\", \"vital\", \"rapid\", \"motor\", \"tower\", \"virus\", \"burden\", \"hire\",\n    \"deer\", \"flag\", \"tank\", \"rely\", \"chase\", \"combine\", \"trick\", \"prize\", \"fame\", \"wing\", \"baking\", \"monster\", \"lawsuit\", \"wolf\", \"retail\", \"salad\",\n    \"remind\", \"connect\", \"pitch\", \"atlantic\", \"alien\", \"payment\", \"wire\", \"colonial\", \"layer\", \"forum\", \"concert\", \"whoever\", \"wise\", \"fence\", \"enhance\", \"recipe\",\n    \"tissue\", \"bench\", \"dish\", \"dole\", \"soccer\", \"badly\", \"wound\", \"pause\", \"darling\", \"uniform\", \"glance\", \"settle\", \"chef\", \"empirical\", \"brush\", \"broadcast\",\n    \"ghost\", \"chronic\", \"pentagon\", \"valid\", \"fantasy\", \"garage\", \"lemon\", \"frequent\", \"disorder\", \"mutual\", \"rent\", \"humor\", \"climb\", \"liquid\", \"auto\", \"arrive\",\n    \"affair\", \"seed\", \"diabetes\", \"convince\", \"powder\", \"fitness\", \"penalty\", \"label\", \"heritage\", \"candy\", \"deny\", \"stole\", \"yield\", \"collect\", \"fortune\", \"pope\",\n    \"extend\", \"jeans\", \"mortality\", \"tail\", \"duke\", \"stem\", \"decrease\", \"implement\", \"virtual\", \"inquiry\", \"jazz\", \"soup\", \"delay\", \"assist\", \"awake\", \"abstract\",\n    \"pizza\", \"galaxy\", \"predict\", \"sixth\", \"boost\", \"midnight\", \"burst\", \"gospel\", \"cabin\", \"android\", \"shell\", \"craft\", \"gradually\", \"poem\", \"spatial\", \"racing\",\n    \"ipad\", \"opera\", \"onion\", \"actress\", \"cotton\", \"slip\", \"lyrics\", \"utility\", \"rookie\", \"depend\", \"ideology\", \"eliminate\", \"bacteria\", \"inch\", \"gather\", \"coping\",\n    \"input\", \"tobacco\", \"exit\", \"judicial\", \"refuse\", \"horror\", \"sacred\", \"robin\", \"differ\", \"scheme\", \"anchor\", \"lawn\", \"slide\", \"backed\", \"arena\", \"invest\",\n    \"trash\", \"failing\", \"output\", \"wage\", \"clay\", \"dried\", \"exhibit\", \"genius\", \"acid\", \"beef\", \"bullet\", \"flavor\", \"enable\", \"eager\", \"abroad\", \"biology\",\n    \"clinic\", \"panic\", \"mask\", \"aging\", \"script\", \"embrace\", \"permit\", \"sword\", \"elevator\", \"lily\", \"grip\", \"nominee\", \"lonely\", \"tennis\", \"slight\", \"eligible\",\n    \"gentle\", \"ranch\", \"globe\", \"tube\", \"glory\", \"chip\", \"banking\", \"insane\", \"blade\", \"essence\", \"venture\", \"spin\", \"boring\", \"outdoor\", \"density\", \"fancy\",\n    \"timing\", \"carol\", \"brave\", \"rally\", \"cliff\", \"repair\", \"fabric\", \"saint\", \"flower\", \"tackle\", \"habit\", \"amid\", \"endless\", \"symbol\", \"spell\", \"spare\",\n    \"immune\", \"alert\", \"ridge\", \"rope\", \"garbage\", \"harbor\", \"guilt\", \"piano\", \"guitar\", \"myth\", \"alpha\", \"shed\", \"genuine\", \"observe\", \"excess\", \"alarm\",\n    \"segment\", \"faint\", \"ritual\", \"gravity\", \"width\", \"blanket\", \"manual\", \"drank\", \"oxygen\", \"bitter\", \"pound\", \"oxford\", \"mouse\", \"cruise\", \"attract\", \"chaos\",\n    \"tent\", \"rail\", \"crystal\", \"duration\", \"chemicals\", \"luxury\", \"cure\", \"trigger\", \"comic\", \"wrap\", \"praise\", \"ranked\", \"upcoming\", \"mandate\", \"breeze\", \"emerge\",\n    \"purse\", \"punch\", \"twin\", \"cave\", \"swept\", \"salmon\", \"canyon\", \"feminist\", \"gesture\", \"cloth\", \"reward\", \"phoenix\", \"monetary\", \"castle\", \"swung\", \"rifle\",\n    \"regret\", \"silk\", \"swim\", \"rage\", \"hockey\", \"precise\", \"outer\", \"buffalo\", \"submit\", \"grocery\", \"divide\", \"emotion\", \"invite\", \"skirt\", \"census\", \"tiger\",\n    \"wrist\", \"grill\", \"spray\", \"miracle\", \"patch\", \"resist\", \"tunnel\", \"brick\", \"tactics\", \"poet\", \"confirm\", \"palace\", \"shoe\", \"crop\", \"custom\", \"glow\",\n    \"caring\", \"bath\", \"thumb\", \"rival\", \"sadly\", \"pipe\", \"grief\", \"hood\", \"neutral\", \"liability\", \"pension\", \"genre\", \"install\", \"margin\", \"barn\", \"legend\",\n    \"clause\", \"outlook\", \"stimulus\", \"bless\", \"awkward\", \"harsh\", \"carpet\", \"dragon\", \"jealous\", \"lens\", \"folk\", \"alike\", \"diamond\", \"romance\", \"patrol\", \"adjust\",\n    \"mercy\", \"tribe\", \"curve\", \"parade\", \"tightly\", \"cluster\", \"cattle\", \"critic\", \"skull\", \"nerve\", \"whisper\", \"fluid\", \"alley\", \"trap\", \"casual\", \"rocket\",\n    \"rubber\", \"snake\", \"usage\", \"duck\", \"toss\", \"useless\", \"gorgeous\", \"pork\", \"basket\", \"detect\", \"vertical\", \"scare\", \"hint\", \"blast\", \"clever\", \"pastor\",\n    \"bubble\", \"twist\", \"athlete\", \"rhythm\", \"snap\", \"penny\", \"premium\", \"syndrome\", \"eaten\", \"delta\", \"tomato\", \"dutch\", \"tshirt\", \"slice\", \"unfair\", \"pole\",\n    \"dose\", \"fork\", \"dignity\", \"elegant\", \"grain\", \"lazy\", \"medal\", \"skiing\", \"geography\", \"harvest\", \"ruined\", \"orbit\", \"arise\", \"canvas\", \"blend\", \"inform\",\n    \"aged\", \"urge\", \"leaf\", \"negotiate\", \"eternal\", \"cage\", \"upgrade\", \"damp\", \"aluminum\", \"tragic\", \"alter\", \"barrel\", \"acquire\", \"liar\", \"bonus\", \"verdict\",\n    \"envelope\", \"ecosystem\", \"blinked\", \"viable\", \"chat\", \"disk\", \"spoon\", \"pulse\", \"filter\", \"molecular\", \"laptop\", \"laundry\", \"fever\", \"toast\", \"stunned\", \"shallow\",\n    \"boil\", \"pardon\", \"potato\", \"elaborate\", \"monkey\", \"ambitious\", \"roster\", \"atop\", \"hatred\", \"elbow\", \"varying\", \"municipal\", \"fossil\", \"ashamed\", \"ecology\", \"lecture\",\n    \"salvation\", \"flip\", \"fled\", \"filing\", \"oppose\", \"quantum\", \"wagon\", \"robot\", \"nail\", \"loop\", \"upward\", \"lion\", \"lamp\", \"doll\", \"rude\", \"cart\",\n    \"impose\", \"infant\", \"merry\", \"pond\", \"noble\", \"hammer\", \"purely\", \"cruel\", \"retention\", \"shrimp\", \"soap\", \"vocal\", \"bulk\", \"reluctant\", \"vessel\", \"borrow\",\n    \"waving\", \"sunny\", \"clerk\", \"retreat\", \"curled\", \"matrix\", \"junk\", \"rack\", \"uncertain\", \"notable\", \"absent\", \"fraction\", \"drill\", \"wheat\", \"asset\", \"helmet\",\n    \"ninth\", \"cherry\", \"tray\", \"sunset\", \"stack\", \"stove\", \"spouse\", \"buzz\", \"autism\", \"shine\", \"surge\", \"theft\", \"poison\", \"squeeze\", \"bacon\", \"soda\",\n    \"abruptly\", \"sustain\", \"grid\", \"jungle\", \"tide\", \"loyal\", \"nest\", \"denial\", \"approve\", \"aisle\", \"ginger\", \"glimpse\", \"diagram\", \"gaming\", \"hybrid\", \"amber\",\n    \"lung\", \"eagle\", \"cape\", \"shield\", \"semester\", \"epic\", \"exotic\", \"educate\", \"ruby\", \"ladder\", \"scout\", \"curse\", \"parish\", \"plaza\", \"radar\", \"emperor\",\n    \"thee\", \"fatal\", \"casino\", \"outfit\", \"crisp\", \"warfare\", \"fabulous\", \"rabbit\", \"employ\", \"curtain\", \"robust\", \"imperial\", \"unhappy\", \"vague\", \"absurd\", \"ankle\",\n    \"astronomy\", \"enforce\", \"intact\", \"warrior\", \"gambling\", \"flame\", \"debris\", \"pledge\", \"retire\", \"petition\", \"taxi\", \"announce\", \"trim\", \"wipe\", \"bucket\", \"hydrogen\",\n    \"trembling\", \"behave\", \"apology\", \"scan\", \"grove\", \"crush\", \"puzzle\", \"auction\", \"cope\", \"abandon\", \"fold\", \"hollow\", \"adapt\", \"waking\", \"satisfy\", \"tourist\",\n    \"vacuum\", \"yoga\", \"sculpture\", \"sphere\", \"illusion\", \"cargo\", \"juvenile\", \"dock\", \"canal\", \"vintage\", \"bean\", \"arrange\", \"silicon\", \"copper\", \"ambulance\", \"harmful\",\n    \"bust\", \"brass\", \"blah\", \"arctic\", \"pending\", \"autumn\", \"icon\", \"caution\", \"slim\", \"epidemic\", \"fragile\", \"mankind\", \"calcium\", \"merit\", \"pencil\", \"dilemma\",\n    \"moisture\", \"steak\", \"elder\", \"swift\", \"despair\", \"whale\", \"lance\", \"tweet\", \"aide\", \"humble\", \"thunder\", \"bicycle\", \"payroll\", \"algorithm\", \"marathon\", \"bargain\",\n    \"unlimited\", \"twilight\", \"inspire\", \"dioxide\", \"wool\", \"tuition\", \"herbs\", \"rebel\", \"subway\", \"halt\", \"upright\", \"organ\", \"sadness\", \"pill\", \"plug\", \"marble\",\n    \"coke\", \"sierra\", \"buyer\", \"mansion\", \"audit\", \"echo\", \"triumph\", \"bronze\", \"hawk\", \"onset\", \"pouring\", \"boxing\", \"clarify\", \"robe\", \"rebuild\", \"timothy\",\n    \"widow\", \"fatigue\", \"diary\", \"cosmic\", \"coin\", \"sank\", \"expose\", \"setup\", \"outrage\", \"fade\", \"synthesis\", \"edit\", \"spike\", \"dairy\", \"upside\", \"gown\",\n    \"sponsor\", \"float\", \"maid\", \"baked\", \"arrow\", \"seldom\", \"crane\", \"catalog\", \"sneak\", \"neatly\", \"lounge\", \"elephant\", \"drift\", \"grinning\", \"bachelor\", \"dusk\",\n    \"empathy\", \"pumpkin\", \"guts\", \"urging\", \"goat\", \"cancel\", \"antique\", \"cinema\", \"donate\", \"petty\", \"trophy\", \"punk\", \"neglect\", \"tooth\", \"roast\", \"outbreak\",\n    \"peanut\", \"whip\", \"plausible\", \"drained\", \"veto\", \"monument\", \"yogurt\", \"armor\", \"kidney\", \"hull\", \"drum\", \"asthma\", \"balcony\", \"obscure\", \"slot\", \"daylight\",\n    \"slender\", \"shaft\", \"shaping\", \"parsley\", \"unaware\", \"donor\", \"awhile\", \"aviation\", \"timber\", \"dismiss\", \"utter\", \"pioneer\", \"tattoo\", \"velocity\", \"limb\", \"immense\",\n    \"absorb\", \"naive\", \"misery\", \"peculiar\", \"dodge\", \"clown\", \"arbitrary\", \"parole\", \"majesty\", \"runner\", \"evolve\", \"glue\", \"frost\", \"ozone\", \"lining\", \"syrup\",\n    \"gossip\", \"melt\", \"sage\", \"cane\", \"rigid\", \"impulse\", \"erosion\", \"ferry\", \"maple\", \"picnic\", \"void\", \"dash\", \"glove\", \"burger\", \"crawl\", \"skies\",\n    \"vivid\", \"trio\", \"cinnamon\", \"oval\", \"velvet\", \"banana\", \"axis\", \"indoor\", \"fury\", \"enduring\", \"barbecue\", \"glare\", \"prone\", \"eats\", \"wikipedia\", \"slate\",\n    \"cement\", \"blouse\", \"salon\", \"lure\", \"snack\", \"knelt\", \"puppy\", \"caucus\", \"feast\", \"gratitude\", \"dial\", \"turtle\", \"mold\", \"wizard\", \"lend\", \"visa\",\n    \"yahoo\", \"proximity\", \"bartender\", \"bolt\", \"viral\", \"slam\", \"thigh\", \"stamp\", \"drone\", \"cathedral\", \"venue\", \"sketch\", \"garnish\", \"coherent\", \"stool\", \"foil\",\n    \"gazing\", \"delete\", \"bounce\", \"aggregate\", \"lunar\", \"dubbed\", \"chop\", \"zombie\", \"thrive\", \"sanctuary\", \"dislike\", \"nephew\", \"modify\", \"eclipse\", \"polar\", \"badge\",\n    \"foam\", \"arose\", \"monopoly\", \"panama\", \"amused\", \"banner\", \"shone\", \"fading\", \"petroleum\", \"runway\", \"fidelity\", \"verify\", \"maturity\", \"unwilling\", \"ashes\", \"spider\",\n    \"rumor\", \"navigate\", \"blunt\", \"preacher\", \"gleaming\", \"attach\", \"refined\", \"bunny\", \"cedar\", \"tapping\", \"ample\", \"nickname\", \"daisy\", \"vista\", \"coral\", \"ribbon\",\n    \"reunion\", \"jeep\", \"tipped\", \"outward\", \"exile\", \"chunk\", \"resemble\", \"envy\", \"umbrella\", \"unrelated\", \"cough\", \"flock\", \"vacant\", \"parlor\", \"masculine\", \"uranium\",\n    \"obstacle\", \"ditch\", \"stubborn\", \"poker\", \"naming\", \"coconut\", \"unstable\", \"exclude\", \"affiliate\", \"module\", \"reps\", \"semantic\", \"crept\", \"chewing\", \"bats\", \"cannon\",\n    \"psychic\", \"hazard\", \"unwanted\", \"ethanol\", \"ragged\", \"prolonged\", \"sturdy\", \"ivory\", \"trinity\", \"factual\", \"ipod\", \"dime\", \"bundle\", \"riot\", \"apostle\", \"diner\",\n    \"culinary\", \"lucrative\", \"emission\", \"turf\", \"nebula\", \"ramp\", \"juror\", \"demise\", \"shrug\", \"unsure\", \"ninja\", \"turmoil\", \"rotten\", \"stellar\", \"imminent\", \"cozy\",\n    \"disbelief\", \"vowed\", \"scrap\", \"rehab\", \"vigorous\", \"tile\", \"uneasy\", \"dentist\", \"endorse\", \"dove\", \"symptom\", \"fringe\", \"amnesty\", \"scoop\", \"cilantro\", \"xbox\",\n    \"altitude\", \"batch\", \"vest\", \"volatile\", \"liking\", \"itunes\", \"apron\", \"raven\", \"shove\", \"fetch\", \"napkin\", \"heap\", \"nanny\", \"jelly\", \"dwarf\", \"suburb\",\n    \"quilt\", \"scam\", \"clash\", \"regain\", \"cache\", \"humming\", \"abnormal\", \"frantic\", \"dizzy\", \"nineteen\", \"exemption\", \"popcorn\", \"cloak\", \"bulb\", \"unison\", \"herald\",\n    \"laurel\", \"paycheck\", \"elusive\", \"celery\", \"cabbage\", \"thickness\", \"kinship\", \"stereo\", \"vegan\", \"onstage\", \"dictator\", \"angrily\", \"anyhow\", \"dipped\", \"reckless\", \"seminar\",\n    \"darn\", \"niece\", \"frown\", \"trilogy\", \"daunting\", \"hesitate\", \"salsa\", \"trivial\", \"boxer\", \"swell\", \"ounce\", \"surround\", \"pony\", \"unseen\", \"rogue\", \"saga\",\n    \"pyramid\", \"marvelous\", \"tying\", \"wrath\", \"voyage\", \"rover\", \"gigantic\", \"scotch\", \"sesame\", \"friction\", \"hypocrisy\", \"baggage\", \"diminish\", \"curator\", \"affluent\", \"coma\",\n    \"stew\", \"rinse\", \"zoning\", \"ebay\", \"upscale\", \"exhaust\", \"vendor\", \"jaws\", \"woven\", \"violin\", \"oops\", \"daytime\", \"citation\", \"glucose\", \"drown\", \"geometry\",\n    \"agony\", \"rebound\", \"alto\", \"carnival\", \"obedience\", \"hush\", \"pulmonary\", \"cavalry\", \"purity\", \"unhealthy\", \"refrain\", \"awoke\", \"anatomy\", \"unpopular\", \"estrogen\", \"java\",\n    \"lumber\", \"lavender\", \"poking\", \"perennial\", \"clutch\", \"uninsured\", \"neon\", \"skeleton\", \"shack\", \"parmesan\", \"dumping\", \"chevy\", \"splendid\", \"reproduce\", \"avid\", \"geek\",\n    \"pueblo\", \"dice\", \"scroll\", \"sedan\", \"tilt\", \"sway\", \"mule\", \"hamlet\", \"grape\", \"jasmine\", \"tavern\", \"raging\", \"deed\", \"upheld\", \"cube\", \"disregard\",\n    \"cone\", \"nutrient\", \"oppressed\", \"suing\", \"crimson\", \"humility\", \"choking\", \"walnut\", \"rash\", \"foyer\", \"oyster\", \"swan\", \"perpetual\", \"query\", \"font\", \"zoom\",\n    \"slogan\", \"frenzy\", \"yeast\", \"vascular\", \"derby\", \"harness\", \"upload\", \"pajamas\", \"trunks\", \"phantom\", \"carving\", \"drastic\", \"staple\", \"uneven\", \"flap\", \"unchanged\",\n    \"anthem\", \"mushroom\", \"gluten\", \"exquisite\", \"drizzle\", \"asparagus\", \"irregular\", \"bleak\", \"proactive\", \"sloppy\", \"cortex\", \"spur\", \"womb\", \"exodus\", \"lent\", \"obsolete\",\n    \"grazing\", \"almighty\", \"lantern\", \"salute\", \"atom\", \"hefty\", \"bony\", \"polo\", \"floral\", \"glacier\", \"raft\", \"deploy\", \"guru\", \"enroll\", \"kosher\", \"mutation\",\n    \"sibling\", \"revolt\", \"ouch\", \"brewing\", \"alibi\", \"amino\", \"blazing\", \"falcon\", \"hacking\", \"flint\", \"baton\", \"depict\", \"gamma\", \"aspirin\", \"nylon\", \"pediatric\",\n    \"broom\", \"acre\", \"sabbath\", \"glamorous\", \"turbine\", \"extinct\", \"unsafe\", \"quake\", \"bamboo\", \"bolster\", \"groom\", \"flick\", \"mantra\", \"hastily\", \"graffiti\", \"pavilion\",\n    \"rust\", \"mundane\", \"bluff\", \"uphill\", \"sediment\", \"enzyme\", \"sermon\", \"coronary\", \"blizzard\", \"uncover\", \"bash\", \"ebook\", \"avalanche\", \"slapping\", \"cadillac\", \"perjury\",\n    \"unpaid\", \"dazzling\", \"cavity\", \"freight\", \"capsule\", \"disgrace\", \"crib\", \"unfold\", \"empower\", \"blush\", \"clone\", \"motto\", \"sizable\", \"uphold\", \"plywood\", \"tidy\",\n    \"tidal\", \"cider\", \"disdain\", \"bonding\", \"dominion\", \"gothic\", \"envision\", \"nerd\", \"splashed\", \"ominous\", \"manor\", \"unlawful\", \"dotted\", \"subgroup\", \"taps\", \"outing\",\n    \"mosaic\", \"eccentric\", \"nurture\", \"cupped\", \"sitcom\", \"mashed\", \"immortal\", \"demeanor\", \"abide\", \"sushi\", \"rethink\", \"sinister\", \"stench\", \"brethren\", \"unnatural\", \"multiply\",\n    \"pagan\", \"cylinder\", \"karma\", \"bogus\", \"unequal\", \"halves\", \"rumble\", \"claw\", \"paced\", \"monastery\", \"expire\", \"outgoing\", \"garment\", \"stumble\", \"await\", \"deacon\",\n    \"morbidity\", \"mummy\", \"ceramics\", \"citrus\", \"untouched\", \"evoke\", \"stout\", \"pesticide\", \"duplicate\", \"frying\", \"cradle\", \"lavish\", \"siren\", \"crescent\", \"frail\", \"dagger\",\n    \"mute\", \"vineyard\", \"pupil\", \"pulp\", \"corporal\", \"latitude\", \"voltage\", \"abdominal\", \"junction\", \"rearview\", \"diaper\", \"moaning\", \"skype\", \"stash\", \"paddle\", \"putt\",\n    \"fetal\", \"eggplant\", \"diploma\", \"pouch\", \"evacuate\", \"haunt\", \"slab\", \"deity\", \"thud\", \"slacks\", \"upbeat\", \"varsity\", \"lizard\", \"skipping\", \"mating\", \"dart\",\n    \"kitten\", \"elastic\", \"debtor\", \"catfish\", \"vanish\", \"kudos\", \"immature\", \"smashing\", \"luminous\", \"maverick\", \"hamburger\", \"sarcasm\", \"shudder\", \"poppy\", \"goofy\", \"murky\",\n    \"dwelling\", \"usable\", \"taco\", \"diocese\", \"slit\", \"mahogany\", \"sublime\", \"ascertain\", \"licking\", \"wiring\", \"nicotine\", \"brittle\", \"aroma\", \"swarm\", \"subtly\", \"unnoticed\",\n    \"enlarged\", \"brunch\", \"sniff\", \"duct\", \"rhyme\", \"skyline\", \"snoring\", \"smuggling\", \"mango\", \"sludge\", \"onboard\", \"cascade\", \"botanical\", \"vantage\", \"safari\", \"fascism\",\n    \"hurdle\", \"grunt\", \"cucumber\", \"armchair\", \"avatar\", \"wrought\", \"skewed\", \"unethical\", \"chlorine\", \"casket\", \"usher\", \"angular\", \"mural\", \"sulfur\", \"prenatal\", \"enrich\",\n    \"latch\", \"tainted\", \"parcel\", \"hash\", \"tutor\", \"hulk\", \"apache\", \"stiffness\", \"colt\", \"untrue\", \"plural\", \"bobbing\", \"algebra\", \"tanned\", \"clad\", \"capped\",\n    \"slashed\", \"wifi\", \"setback\", \"kettle\", \"ludicrous\", \"grit\", \"calorie\", \"tumble\", \"ultra\", \"entail\", \"pang\", \"obnoxious\", \"goggles\", \"mulch\", \"delusion\", \"giggle\",\n    \"sagging\", \"unspoken\", \"utmost\", \"caliber\", \"sprung\", \"morse\", \"cricket\", \"slain\", \"jolt\", \"embody\", \"dugout\", \"payday\", \"sabotage\", \"thorn\", \"ignition\", \"defy\",\n    \"shabby\", \"crook\", \"culprit\", \"dimly\", \"skeptic\", \"antarctic\", \"omega\", \"subdued\", \"swirl\", \"reopen\", \"palpable\", \"rewrite\", \"cactus\", \"bloated\", \"craving\", \"guise\",\n    \"panther\", \"wrench\", \"jogging\", \"ripple\", \"getaway\", \"jolly\", \"finch\", \"reclaim\", \"shuffle\", \"dolphin\", \"fanning\", \"uptown\", \"voucher\", \"rosy\", \"rift\", \"ebony\",\n    \"rigor\", \"espionage\", \"brim\", \"nutmeg\", \"caravan\", \"coauthor\", \"gloss\", \"omission\", \"hurled\", \"giddy\", \"manned\", \"payer\", \"whiff\", \"helium\", \"bribe\", \"manifesto\",\n    \"uncanny\", \"geology\", \"janitor\", \"ridden\", \"hazy\", \"envoy\", \"jockey\", \"comrade\", \"cheddar\", \"imitate\", \"robbing\", \"afloat\", \"elves\", \"anew\", \"oasis\", \"prowess\",\n    \"agile\", \"augmented\", \"onward\", \"kung\", \"blatantly\", \"flanked\", \"erratic\", \"cubicle\", \"muzzle\", \"seismic\", \"groin\", \"sullen\", \"hassle\", \"utopia\", \"shawl\", \"eloquent\",\n    \"freckles\", \"trolling\", \"serpent\", \"siding\", \"glitter\", \"grueling\", \"wand\", \"dwindling\", \"kite\", \"diligence\", \"rake\", \"polymer\", \"annex\", \"feeble\", \"banish\", \"icing\",\n    \"reuse\", \"denote\", \"emit\", \"payback\", \"curfew\", \"parrot\", \"blitz\", \"relocate\", \"mower\", \"cassette\", \"cork\", \"slug\", \"stitch\", \"uptake\", \"linoleum\", \"unbiased\",\n    \"sinner\", \"huddle\", \"plutonium\", \"enclosure\", \"wiry\", \"acorn\", \"flyer\", \"chubby\", \"smirk\", \"reputable\", \"myspace\", \"edgy\", \"plow\", \"lucid\", \"espresso\", \"roaming\",\n    \"dosage\", \"dill\", \"swipe\", \"rectangle\", \"yarn\", \"saline\", \"lagoon\", \"balsamic\", \"barley\", \"sled\", \"rejoice\", \"coliseum\", \"gutter\", \"pancake\", \"clatter\", \"frivolous\",\n    \"wavy\", \"enchanted\", \"clamp\", \"borough\", \"remnant\", \"duffel\", \"whomever\", \"gulp\", \"lagged\", \"opium\", \"subprime\", \"idly\", \"bulge\", \"onslaught\", \"tummy\", \"frayed\",\n    \"cadmium\", \"morphine\", \"plethora\", \"ferocious\", \"tweak\", \"rink\", \"rambling\", \"satchel\", \"desolate\", \"pecan\", \"unmarked\", \"arson\", \"esquire\", \"faucet\", \"aptly\", \"coil\",\n    \"perish\", \"yummy\", \"clump\", \"flirt\", \"chute\", \"frighten\", \"crouch\", \"buggy\", \"python\", \"aloft\", \"brute\", \"murmuring\", \"pebble\", \"quail\", \"badass\", \"rupture\",\n    \"manpower\", \"quadrant\", \"jingle\", \"savor\", \"sliver\", \"manly\", \"rebirth\", \"fervor\", \"unruly\", \"expulsion\", \"flop\", \"ravine\", \"fiddle\", \"ditto\", \"engraved\", \"jargon\",\n    \"seizing\", \"muck\", \"manhood\", \"entourage\", \"shrank\", \"panda\", \"nectar\", \"recreate\", \"paternal\", \"spied\", \"veal\", \"acutely\", \"karate\", \"lego\", \"mammal\", \"ploy\",\n    \"atypical\", \"shredder\", \"purge\", \"marlin\", \"exalted\", \"deem\", \"waltz\", \"enamel\", \"dedicate\", \"unwelcome\", \"hangover\", \"cofounder\", \"celtic\", \"aptitude\", \"daycare\", \"deafening\",\n    \"creole\", \"rabid\", \"kinetic\", \"emblem\", \"whoops\", \"mayday\", \"lash\", \"duchess\", \"unlucky\", \"cadet\", \"upfront\", \"deprive\", \"acclaim\", \"nutty\", \"ammonia\", \"conjure\",\n    \"rarity\", \"fondly\", \"jumbo\", \"lanky\", \"joyous\", \"extortion\", \"douche\", \"juggling\", \"simmering\", \"lark\", \"huff\", \"mumbling\", \"enigmatic\", \"rundown\", \"visor\", \"eradicate\",\n    \"paprika\", \"debit\", \"paparazzi\", \"uplifting\", \"canine\", \"tucking\", \"duly\", \"fang\", \"edging\", \"uproar\", \"epiphany\", \"afar\", \"deftly\", \"hunk\", \"maroon\", \"bleep\",\n    \"pungent\", \"embark\", \"staunch\", \"cupcake\", \"pamphlet\", \"cobalt\", \"whimsical\", \"audacity\", \"wreath\", \"evade\", \"wrinkle\", \"dimmed\", \"grimace\", \"cringe\", \"nutshell\", \"wilt\",\n    \"neuron\", \"unsolved\", \"fanatic\", \"macaroni\", \"tinker\", \"gauze\", \"rickety\", \"pesky\", \"wasp\", \"pessimism\", \"slang\", \"veggie\", \"unworthy\", \"phosphate\", \"unquote\", \"ricotta\",\n    \"snagged\", \"elongated\", \"grudge\", \"sprout\", \"fleshy\", \"synopsis\", \"thaw\", \"derail\", \"drab\", \"calamity\", \"skid\", \"sanitary\", \"lazily\", \"xerox\", \"lair\", \"snout\",\n    \"onscreen\", \"yiddish\", \"evasion\", \"smog\", \"porous\", \"shrouded\", \"bagel\", \"sheath\", \"unicorn\", \"secluded\", \"itinerary\", \"coexist\", \"stalemate\", \"astute\", \"sift\", \"pluck\",\n    \"suction\", \"yanking\", \"bruising\", \"esteemed\", \"rebate\", \"dingy\", \"widget\", \"oncoming\", \"exuberant\", \"wobbly\", \"prelude\", \"bonfire\", \"tingling\", \"nape\", \"clover\", \"chug\",\n    \"dyslexia\", \"prozac\", \"mutt\", \"quiver\", \"scuba\", \"jinx\", \"easel\", \"serotonin\", \"endanger\", \"jarring\", \"wharf\", \"waffle\", \"ajar\", \"twig\", \"mace\", \"pelvis\",\n    \"banter\", \"pruning\", \"nimble\", \"anemia\", \"limelight\", \"seduce\", \"ligament\", \"anaerobic\", \"wolverine\", \"cryptic\", \"lurch\", \"kerosene\", \"boasting\", \"panorama\", \"babbling\", \"umpire\",\n    \"creme\", \"fanfare\", \"posh\", \"jukebox\", \"enquirer\", \"limping\", \"unbroken\", \"iodine\", \"deflation\", \"risotto\", \"hazing\", \"idiocy\", \"goliath\", \"unbeaten\", \"zebra\", \"rants\",\n    \"omit\", \"tarmac\", \"dork\", \"dormitory\", \"skimmed\", \"feisty\", \"stoic\", \"arming\", \"crux\", \"oxidation\", \"mournful\", \"swoop\", \"saffron\", \"fender\", \"cola\", \"pried\",\n    \"gimmick\", \"maggot\", \"grumbling\", \"deduct\", \"fedora\", \"sassy\", \"swagger\", \"agnostic\", \"obituary\", \"slum\", \"gong\", \"rind\", \"nemesis\", \"nifty\", \"erupt\", \"gullible\",\n    \"awry\", \"mowing\", \"snitch\", \"woof\", \"sizzling\", \"wince\", \"yelp\", \"broiler\", \"irritable\", \"retorted\", \"alias\", \"bovine\", \"shimmer\", \"scowling\", \"earring\", \"bonnet\",\n    \"molasses\", \"sneeze\", \"ruse\", \"zeppelin\", \"canteen\", \"ether\", \"unskilled\", \"reiterate\", \"spew\", \"hamper\", \"doable\", \"scorpion\", \"almanac\", \"daybreak\", \"legislate\", \"skyward\",\n    \"swivel\", \"earshot\", \"outage\", \"tiring\", \"tulip\", \"jokingly\", \"aloof\", \"donut\", \"wistful\", \"churn\", \"dares\", \"turret\", \"cleft\", \"blot\", \"tantrum\", \"outnumber\",\n    \"epilepsy\", \"baritone\", \"italics\", \"atrium\", \"askew\", \"dandy\", \"hatchet\", \"wannabe\", \"fable\", \"reshape\", \"opal\", \"linguini\", \"viper\", \"uptight\", \"wispy\", \"hypnotic\",\n    \"sash\", \"dorsal\", \"sultry\", \"blob\", \"shun\", \"glaucoma\", \"greyhound\", \"luster\", \"raking\", \"unnerving\", \"unscathed\", \"unmoving\", \"evaporate\", \"quack\", \"flaring\", \"lukewarm\",\n    \"fraternal\", \"smudge\", \"bogged\", \"dilute\", \"banjo\", \"splurge\", \"gauntlet\", \"lilac\", \"awning\", \"nautical\", \"baffling\", \"varnish\", \"kleenex\", \"bonanza\", \"upturned\", \"amigo\",\n    \"scapegoat\", \"snarl\", \"anyplace\", \"otter\", \"lapel\", \"panhandle\", \"whiny\", \"kangaroo\", \"unwrapped\", \"renounce\", \"alkaline\", \"aqua\", \"siberian\", \"omen\", \"etching\", \"bluish\",\n    \"rigging\", \"flier\", \"celibacy\", \"kilometer\", \"saxophone\", \"undress\", \"alfalfa\", \"peddling\", \"dainty\", \"smitten\", \"blip\", \"elated\", \"unplanned\", \"paltry\", \"dribble\", \"geriatric\",\n    \"unholy\", \"unproven\", \"hermit\", \"litmus\", \"synergy\", \"schilling\", \"silt\", \"mutiny\", \"mardi\", \"wimp\", \"drool\", \"peroxide\", \"tint\", \"payable\", \"reggae\", \"unending\",\n    \"clang\", \"floss\", \"atrocious\", \"detonate\", \"malt\", \"rimmed\", \"sizing\", \"hamster\", \"chirping\", \"tabby\", \"roulette\", \"humvee\", \"destitute\", \"unfunded\", \"crock\", \"lard\",\n    \"catwalk\", \"shush\", \"swab\", \"gaffe\", \"scolding\", \"ladle\", \"trifle\", \"unkind\", \"deport\", \"lapping\", \"jigsaw\", \"surname\", \"snuff\", \"fructose\", \"resale\", \"leggings\",\n    \"feline\", \"zealous\", \"jalapeno\", \"cuddle\", \"amiss\", \"kimono\", \"napping\", \"cusp\", \"chump\", \"thong\", \"amiable\", \"isotope\", \"rascal\", \"reptile\", \"clunky\", \"unopened\",\n    \"caddie\", \"unkempt\", \"quirk\", \"wick\", \"romp\", \"surcharge\", \"zodiac\", \"raider\", \"shank\", \"aghast\", \"glazing\", \"kennel\", \"perky\", \"slush\", \"gusto\", \"camcorder\",\n    \"stipend\", \"knapsack\", \"gurgling\", \"reimburse\", \"flaky\", \"preheated\", \"blissful\", \"yonder\", \"roving\", \"reaffirm\", \"amulet\", \"aloha\", \"movable\", \"chowder\", \"untapped\", \"cinch\",\n    \"nugget\", \"groggy\", \"detract\", \"vibes\", \"gills\", \"ablaze\", \"musket\", \"cupid\", \"tycoon\", \"deuce\", \"umbilical\", \"tubular\", \"pout\", \"jittery\", \"truffle\", \"knoll\",\n    \"femur\", \"flaxseed\", \"haphazard\", \"folic\", \"defuse\", \"livable\", \"trespass\", \"ointment\", \"magma\", \"nibble\", \"appointee\", \"frisbee\", \"afoot\", \"pelt\", \"dissuade\", \"deodorant\",\n    \"sphinx\", \"euphemism\", \"affront\", \"pelican\", \"sauna\", \"rudder\", \"vengeful\", \"reappear\", \"chihuahua\", \"reheat\", \"gondola\", \"rewind\", \"flounder\", \"labrador\", \"licorice\", \"abrasive\",\n    \"mossy\", \"smock\", \"abreast\", \"hemlock\", \"tibia\", \"polka\", \"gibberish\", \"drudge\", \"ooze\", \"lurk\", \"volley\", \"outhouse\", \"magenta\", \"velcro\", \"sycamore\", \"irate\",\n    \"crayon\", \"poplar\", \"wafer\", \"cobbler\", \"darwinism\", \"phobia\", \"tiara\", \"barometer\", \"rename\", \"baguette\", \"enslave\", \"wham\", \"rotunda\", \"unshaven\", \"tarot\", \"grub\",\n    \"porridge\", \"galore\", \"docile\", \"lullaby\", \"fidgeting\", \"slaw\", \"coerce\", \"gooey\", \"snugly\", \"skyrocket\", \"lint\", \"guacamole\", \"stupor\", \"frustrate\", \"snooze\", \"unafraid\",\n    \"boxy\", \"thyself\", \"balmy\", \"hertz\", \"aloe\", \"endpoint\", \"geiger\", \"ibuprofen\", \"gory\", \"daydream\", \"kiwi\", \"taunt\", \"judo\", \"exorcism\", \"esophagus\", \"mulberry\",\n    \"joystick\", \"unraveled\", \"froth\", \"undated\", \"snippet\", \"valuables\", \"ruckus\", \"crevice\", \"zipping\", \"dowry\", \"lubricant\", \"prewar\", \"ungodly\", \"petal\", \"scion\", \"raffle\",\n    \"elude\", \"croak\", \"runt\", \"unjustly\", \"eskimo\", \"gush\", \"maimed\", \"clique\", \"unsigned\", \"goon\", \"elixir\", \"silo\", \"kiln\", \"plop\", \"talon\", \"oxymoron\",\n    \"kelp\", \"dexterity\", \"pellet\", \"anvil\", \"corset\", \"scavenger\", \"twirl\", \"jugular\", \"popsicle\", \"purr\", \"fretted\", \"gopher\", \"crudely\", \"oblong\", \"scoff\", \"conical\",\n    \"serrated\", \"tutu\", \"gangly\", \"snide\", \"ritalin\", \"stoke\", \"zips\", \"tartar\", \"duress\", \"doze\", \"dutiful\", \"earpiece\", \"dimness\", \"peso\", \"thrash\", \"jailhouse\",\n    \"opacity\", \"subatomic\", \"imbecile\", \"venomous\", \"obtuse\", \"dimple\", \"smother\", \"viscous\", \"paging\", \"quintet\", \"mocha\", \"clench\", \"gummy\", \"chivalry\", \"dilation\", \"disengage\",\n    \"suave\", \"icky\", \"urchin\", \"talisman\", \"upswing\", \"blighted\", \"tidbit\", \"doodle\", \"savanna\", \"bunt\", \"jubilant\", \"zoology\", \"debunk\", \"jester\", \"vanquish\", \"estimator\",\n    \"baboon\", \"letdown\", \"rasping\", \"hula\", \"devalue\", \"mauve\", \"eject\", \"rerun\", \"rephrase\", \"porcupine\", \"reexamine\", \"ember\", \"rummage\", \"woozy\", \"cytoplasm\", \"facsimile\",\n    \"tabasco\", \"jovial\", \"ferment\", \"wooing\", \"pogo\", \"padlock\", \"gosling\", \"swerve\", \"gleeful\", \"jaunt\", \"unadorned\", \"bungee\", \"undivided\", \"armrest\", \"marmalade\", \"gizmo\",\n    \"lisp\", \"slinky\", \"plexiglas\", \"sinuous\", \"vixen\", \"hypertext\", \"krypton\", \"aqueduct\", \"kerchief\", \"mobster\", \"joyfully\", \"emcee\", \"aeration\", \"whacking\", \"armadillo\", \"reentry\",\n    \"boozy\", \"excavate\", \"ripening\", \"onshore\", \"bobcat\", \"unelected\", \"yapping\", \"pawing\", \"poncho\", \"siamese\", \"albatross\", \"antsy\", \"chitchat\", \"seltzer\", \"muppet\", \"gloating\",\n    \"hazelnut\", \"pliable\", \"onyx\", \"lather\", \"capricorn\", \"uncut\", \"aorta\", \"nastiness\", \"gander\", \"eggnog\", \"excretion\", \"exonerate\", \"cesspool\", \"purveyor\", \"mayflower\", \"busboy\",\n    \"mulled\", \"figment\", \"girdle\", \"lethargic\", \"encrypt\", \"evict\", \"ergonomic\", \"undying\", \"culminate\", \"wriggle\", \"blemish\", \"walrus\", \"tidings\", \"germinate\", \"trowel\", \"suds\",\n    \"ageless\", \"tarnish\", \"dejected\", \"twerp\", \"antler\", \"unguarded\", \"coleslaw\", \"synapse\", \"mongrel\", \"thwarting\", \"aground\", \"scuttle\", \"halogen\", \"ovary\", \"borax\", \"gnarly\",\n    \"snub\", \"nacho\", \"gout\", \"papyrus\", \"iguana\", \"grope\", \"nullify\", \"kilt\", \"vindicate\", \"galvanize\", \"alabaster\", \"panning\", \"wasabi\", \"rework\", \"trombone\", \"tinsel\",\n    \"treble\", \"prancing\", \"exes\", \"hanky\", \"blimp\", \"knickers\", \"thieving\", \"defraud\", \"briar\", \"trident\", \"upwind\", \"slouching\", \"koala\", \"tamper\", \"nuptials\", \"engulf\",\n    \"garter\", \"barman\", \"glisten\", \"frugality\", \"earmark\", \"blubber\", \"ahoy\", \"latrine\", \"puma\", \"sepia\", \"unimpeded\", \"drapery\", \"vivacious\", \"gawk\", \"banshee\", \"nutcase\",\n    \"gruffly\", \"ribcage\", \"rekindle\", \"cesarean\", \"unrivaled\", \"jawline\", \"vaseline\", \"quench\", \"tusk\", \"snazzy\", \"sappy\", \"pedometer\", \"unbounded\", \"tapioca\", \"bobsled\", \"cabana\",\n    \"tubby\", \"sapling\", \"gecko\", \"flaccid\", \"unbuckled\", \"lumping\", \"humpback\", \"haiku\", \"jurist\", \"lasso\", \"urologist\", \"sputter\", \"tinfoil\", \"gutless\", \"encircle\", \"boxcar\",\n    \"impish\", \"kooky\", \"frolic\", \"sasquatch\", \"geranium\", \"flyover\", \"schnapps\", \"cackle\", \"unaltered\", \"prude\", \"falsify\", \"matador\", \"octagon\", \"unpeeled\", \"armful\", \"reroute\",\n    \"unfilled\", \"zesty\", \"payphone\", \"pucker\", \"unzip\", \"litigate\", \"eggshell\", \"hunchback\", \"duvet\", \"powwow\", \"spry\", \"barstool\", \"flail\", \"linseed\", \"legume\", \"mumps\",\n    \"slurp\", \"marshy\", \"dubiously\", \"siesta\", \"unedited\", \"dastardly\", \"ogle\", \"aflame\", \"wrangle\", \"osmosis\", \"dupe\", \"reissue\", \"vagabond\", \"carmaker\", \"flogging\", \"roping\",\n    \"ardently\", \"gnat\", \"oink\", \"sardine\", \"scurvy\", \"sulk\", \"pumice\", \"ellipse\", \"tiptoeing\", \"jiffy\", \"spiffy\", \"spud\", \"tassel\", \"petunia\", \"ashy\", \"tamer\",\n    \"spilt\", \"legwork\", \"getup\", \"poach\", \"uncivil\", \"anaconda\", \"exfoliate\", \"pauper\", \"ramrod\", \"useable\", \"doozy\", \"cahoots\", \"oboe\", \"leotard\", \"boogeyman\", \"yippee\",\n    \"bonsai\", \"chafe\", \"munchkin\", \"varmint\", \"ragweed\", \"sulphate\", \"earful\", \"unfeeling\", \"tamale\", \"hyphen\", \"scuff\", \"egotism\", \"outtakes\", \"abacus\", \"tarantula\", \"smelting\",\n    \"elope\", \"urethane\", \"dayroom\", \"igloo\", \"gristle\", \"caboose\", \"opossum\", \"barcode\", \"amniotic\", \"datebook\", \"clavicle\", \"bazooka\", \"unturned\", \"dweeb\", \"scone\", \"tiling\",\n    \"untying\", \"ritzy\", \"amicably\", \"onlooker\", \"legroom\", \"chomp\", \"spyglass\", \"unroll\", \"levitate\", \"thimble\", \"poser\", \"badness\", \"demystify\", \"pummel\", \"cabdriver\", \"henna\",\n    \"gerbil\", \"senorita\", \"udder\", \"zookeeper\", \"laxative\", \"gigolo\", \"gating\", \"kebab\", \"joyride\", \"eardrum\", \"swaddling\", \"zigzagged\", \"ravage\", \"cussed\", \"talcum\", \"sinless\",\n    \"trodden\", \"absinthe\", \"camisole\", \"duller\", \"daffodil\", \"pectin\", \"ream\", \"reorder\", \"tadpole\", \"omnivore\", \"disinfect\", \"rimless\", \"utensil\", \"stowing\", \"catlike\", \"bodacious\",\n    \"skedaddle\", \"nuzzle\", \"acetone\", \"egging\", \"cubbyhole\", \"lapdog\", \"boondocks\", \"malformed\", \"busload\", \"penknife\", \"shucking\", \"egomaniac\", \"cobweb\", \"anagram\", \"smolder\", \"unexpired\",\n    \"taekwondo\", \"fritter\", \"enrage\", \"runaround\", \"abridge\", \"exhume\", \"reattach\", \"scabby\", \"botch\", \"gargle\", \"lushly\", \"enunciate\", \"plod\", \"doily\", \"hexagon\", \"punisher\",\n    \"tyke\", \"armband\", \"calzone\", \"unashamed\", \"tinderbox\", \"rehydrate\", \"obtrusive\", \"bauble\", \"sixfold\", \"crabbing\", \"moocher\", \"clobber\", \"unbaked\", \"rehire\", \"sudoku\", \"moodiness\",\n    \"dicing\", \"reemerge\", \"gumball\", \"pulverize\", \"hatless\", \"endnote\", \"yodel\", \"cymbal\", \"bagpipe\", \"splotchy\", \"nanometer\", \"mollusk\", \"harpist\", \"mooing\", \"jaywalker\", \"astound\",\n    \"ocelot\", \"hubcap\", \"frill\", \"gonad\", \"rubdown\", \"tigress\", \"denatured\", \"pegboard\", \"dehydrate\", \"gizzard\", \"waggle\", \"kinfolk\", \"unmixed\", \"ensnare\", \"buccaneer\", \"amaretto\",\n    \"felttip\", \"jujitsu\", \"amuck\", \"bunion\", \"skydiver\", \"coeditor\", \"amperage\", \"deface\", \"riptide\", \"hatbox\", \"trekker\", \"jaybird\", \"swizzle\", \"drench\", \"jawed\", \"ditzy\",\n    \"illicitly\", \"preoccupy\", \"vagrancy\", \"carwash\", \"earache\", \"subfloor\", \"armless\", \"ransack\", \"curdle\", \"cozily\", \"unaudited\", \"unblock\", \"catsup\", \"unframed\", \"wielder\", \"dallying\",\n    \"catnap\", \"cosponsor\", \"boxlike\", \"aflutter\", \"wackiness\", \"unviable\", \"husked\", \"babied\", \"eclair\", \"guzzler\", \"giblet\", \"kabob\", \"unhinge\", \"upchuck\", \"coagulant\", \"bagful\",\n    \"batboy\", \"flypaper\", \"gumdrop\", \"disfigure\", \"entwine\", \"oozy\", \"unarmored\", \"cufflink\", \"slobbery\", \"reoccupy\", \"twiddle\", \"ungraded\", \"viselike\", \"carless\", \"stegosaur\", \"coyness\",\n    \"uncross\", \"earwig\", \"ripcord\", \"blabber\", \"retype\", \"unaired\", \"aneurism\", \"antonym\", \"unsnap\", \"eggbeater\", \"untwist\", \"cosigner\", \"racoon\", \"veneering\", \"bobtail\", \"gyration\",\n    \"reanalyze\", \"reabsorb\", \"recharger\", \"unpicked\", \"unsworn\", \"mocker\", \"fernlike\", \"pyromania\", \"opulently\", \"outmost\", \"penpal\", \"flyable\", \"prorate\", \"eatable\", \"skittle\", \"armhole\",\n    \"unvalued\", \"haggler\", \"vexingly\", \"unglue\", \"defog\", \"ecard\", \"dawdler\", \"delouse\", \"disjoin\", \"engorge\", \"finless\", \"lividly\", \"nutlike\", \"reawake\", \"tinwork\", \"unvocal\",\n    \"zipfile\", \"anointer\", \"atonable\", \"cogwheel\", \"undusted\", \"unflawed\", \"unsliced\", \"unsmooth\", \"unthawed\", \"copartner\", \"hemstitch\", \"jeeringly\", \"joylessly\", \"luridness\", \"penholder\", \"subheader\",\n    \"their\", \"would\", \"think\", \"which\", \"after\", \"years\", \"really\", \"should\", \"through\", \"something\", \"being\", \"president\", \"students\", \"while\", \"things\", \"every\",\n    \"house\", \"might\", \"against\", \"children\", \"states\", \"women\", \"money\", \"without\", \"different\", \"though\", \"study\", \"however\", \"actually\", \"research\", \"white\", \"called\",\n    \"looked\", \"national\", \"education\", \"important\", \"times\", \"asked\", \"wanted\", \"united\", \"trying\", \"political\", \"looking\", \"least\", \"having\", \"coming\", \"saying\", \"talking\",\n    \"using\", \"support\", \"within\", \"including\", \"whether\", \"others\", \"community\", \"probably\", \"several\", \"working\", \"makes\", \"happened\", \"heard\", \"along\", \"himself\", \"thanks\",\n    \"center\", \"turned\", \"america\", \"hands\", \"given\", \"started\", \"court\", \"means\", \"according\", \"friends\", \"months\", \"minutes\", \"teachers\", \"former\", \"based\", \"studies\",\n    \"words\", \"seems\", \"comes\", \"results\", \"college\", \"economic\", \"members\", \"looks\", \"parents\", \"likely\", \"instead\", \"policy\", \"groups\", \"problems\", \"hours\", \"began\",\n    \"needs\", \"county\", \"sometimes\", \"military\", \"issues\", \"living\", \"learning\", \"listen\", \"thinking\", \"seemed\", \"perhaps\", \"clear\", \"known\", \"taken\", \"analysis\", \"questions\",\n    \"finally\", \"reading\", \"quite\", \"yourself\", \"clinton\", \"happen\", \"class\", \"exactly\", \"higher\", \"simply\", \"society\", \"everybody\", \"wants\", \"recent\", \"following\", \"companies\",\n    \"programs\", \"officials\", \"campaign\", \"services\", \"personal\", \"director\", \"rights\", \"lives\", \"schools\", \"games\", \"running\", \"article\", \"needed\", \"became\", \"break\", \"building\",\n    \"whatever\", \"itself\", \"knowledge\", \"americans\", \"romney\", \"weeks\", \"third\", \"further\", \"effect\", \"trump\", \"david\", \"reported\", \"whose\", \"longer\", \"points\", \"somebody\",\n    \"worked\", \"single\", \"terms\", \"works\", \"certainly\", \"teacher\", \"takes\", \"chance\", \"value\", \"nearly\", \"ground\", \"press\", \"behavior\", \"continue\", \"areas\", \"changes\",\n    \"attention\", \"countries\", \"cases\", \"knows\", \"comments\", \"stood\", \"players\", \"medical\", \"situation\", \"writing\", \"difficult\", \"approach\", \"george\", \"election\", \"create\", \"levels\",\n    \"books\", \"patients\", \"natural\", \"involved\", \"decision\", \"shows\", \"recently\", \"potential\", \"financial\", \"playing\", \"billion\", \"specific\", \"beautiful\", \"feeling\", \"moved\", \"posted\",\n    \"training\", \"spent\", \"michael\", \"wrote\", \"treatment\", \"teaching\", \"growth\", \"systems\", \"texas\", \"shall\", \"cultural\", \"supposed\", \"skills\", \"usually\", \"foreign\", \"quickly\",\n    \"waiting\", \"earlier\", \"china\", \"democrats\", \"included\", \"related\", \"lower\", \"therefore\", \"despite\", \"workers\", \"provided\", \"district\", \"serious\", \"walked\", \"played\", \"addition\",\n    \"resources\", \"greater\", \"central\", \"miles\", \"decided\", \"meeting\", \"watching\", \"global\", \"positive\", \"factors\", \"career\", \"moving\", \"content\", \"written\", \"expected\", \"created\",\n    \"nobody\", \"religious\", \"sunday\", \"beginning\", \"telling\", \"stories\", \"families\", \"pulled\", \"leaders\", \"changed\", \"increased\", \"clearly\", \"computer\", \"costs\", \"justice\", \"received\",\n    \"events\", \"senate\", \"committee\", \"activity\", \"seeing\", \"necessary\", \"required\", \"added\", \"chicago\", \"suddenly\", \"values\", \"numbers\", \"growing\", \"movement\", \"standing\", \"learned\",\n    \"plans\", \"atlanta\", \"comment\", \"november\", \"developed\", \"calls\", \"james\", \"opened\", \"happens\", \"married\", \"indeed\", \"academic\", \"ideas\", \"effective\", \"politics\", \"event\",\n    \"internet\", \"except\", \"standard\", \"journal\", \"store\", \"forces\", \"passed\", \"majority\", \"efforts\", \"talked\", \"allowed\", \"player\", \"english\", \"league\", \"robert\", \"obviously\",\n    \"sounds\", \"rules\", \"critical\", \"older\", \"rates\", \"character\", \"products\", \"meant\", \"status\", \"reality\", \"species\", \"helped\", \"showed\", \"modern\", \"places\", \"complete\",\n    \"built\", \"reports\", \"starting\", \"followed\", \"straight\", \"loved\", \"reasons\", \"reached\", \"insurance\", \"pressure\", \"limited\", \"executive\", \"compared\", \"influence\", \"leaving\", \"spending\",\n    \"lived\", \"weight\", \"respect\", \"described\", \"agency\", \"western\", \"statement\", \"asking\", \"benefits\", \"previous\", \"governor\", \"francisco\", \"context\", \"worse\", \"generally\", \"smith\",\n    \"watched\", \"continued\", \"designed\", \"dollars\", \"sales\", \"standards\", \"sports\", \"lines\", \"holding\", \"secretary\", \"attorney\", \"closed\", \"published\", \"reach\", \"turns\", \"florida\",\n    \"teams\", \"product\", \"parts\", \"imagine\", \"gives\", \"speech\", \"europe\", \"council\", \"calling\", \"professor\", \"thousands\", \"measures\", \"named\", \"voters\", \"raised\", \"provides\",\n    \"safety\", \"officer\", \"interview\", \"structure\", \"touch\", \"evening\", \"overall\", \"directly\", \"colorado\", \"slowly\", \"items\", \"larger\", \"basis\", \"employees\", \"models\", \"football\",\n    \"denver\", \"serve\", \"complex\", \"voiceover\", \"fingers\", \"scores\", \"windows\", \"tough\", \"findings\", \"practices\", \"multiple\", \"includes\", \"taxes\", \"biggest\", \"challenge\", \"leading\",\n    \"houston\", \"georgia\", \"basically\", \"breath\", \"manager\", \"images\", \"official\", \"walking\", \"meaning\", \"prices\", \"methods\", \"policies\", \"trees\", \"smiled\", \"argument\", \"nodded\",\n    \"contact\", \"highly\", \"happening\", \"steps\", \"johnson\", \"willing\", \"features\", \"classroom\", \"station\", \"putting\", \"editor\", \"powerful\", \"french\", \"speaking\", \"sources\", \"realize\",\n    \"function\", \"identity\", \"doubt\", \"british\", \"nations\", \"spoke\", \"finding\", \"concerned\", \"types\", \"wonderful\", \"offered\", \"plant\", \"wearing\", \"southern\", \"currently\", \"stars\",\n    \"shook\", \"authority\", \"records\", \"corner\", \"appears\", \"drugs\", \"decisions\", \"forms\", \"mostly\", \"wednesday\", \"candidate\", \"peter\", \"returned\", \"noted\", \"christmas\", \"presented\",\n    \"decades\", \"hearing\", \"folks\", \"somewhere\", \"concern\", \"presence\", \"religion\", \"factor\", \"determine\", \"materials\", \"appeared\", \"planning\", \"yards\", \"totally\", \"sidebar\", \"relations\",\n    \"variables\", \"climate\", \"crisis\", \"cells\", \"bought\", \"served\", \"becomes\", \"otherwise\", \"homes\", \"notes\", \"agreement\", \"interests\", \"goals\", \"richard\", \"latest\", \"suggests\",\n    \"leaves\", \"plants\", \"promise\", \"claims\", \"liked\", \"thomas\", \"block\", \"audience\", \"apartment\", \"offers\", \"weapons\", \"clothes\", \"fighting\", \"thinks\", \"citizens\", \"angeles\",\n    \"picked\", \"residents\", \"actions\", \"chris\", \"variety\", \"released\", \"larry\", \"direction\", \"software\", \"regarding\", \"website\", \"realized\", \"officers\", \"native\", \"mission\", \"mental\",\n    \"concerns\", \"institute\", \"largest\", \"forced\", \"finished\", \"active\", \"daddy\", \"driving\", \"details\", \"seriously\", \"names\", \"animals\", \"missing\", \"mentioned\", \"sites\", \"projects\",\n    \"keeping\", \"closer\", \"concept\", \"produced\", \"yours\", \"users\", \"baseball\", \"instance\", \"attempt\", \"feels\", \"fully\", \"setting\", \"troops\", \"opening\", \"covered\", \"mexico\",\n    \"customers\", \"subjects\", \"parties\", \"turning\", \"prior\", \"beside\", \"conflict\", \"continues\", \"agreed\", \"towards\", \"responses\", \"condition\", \"dropped\", \"cities\", \"suggested\", \"vision\",\n    \"jones\", \"facebook\", \"progress\", \"healthy\", \"frank\", \"joining\", \"indian\", \"millions\", \"believed\", \"creating\", \"pictures\", \"accept\", \"hundreds\", \"tells\", \"requires\", \"surprised\",\n    \"knowing\", \"funds\", \"virginia\", \"strange\", \"dangerous\", \"william\", \"caused\", \"threat\", \"broke\", \"russia\", \"chairman\", \"conducted\", \"steve\", \"announced\", \"providing\", \"easier\",\n    \"somehow\", \"mayor\", \"observed\", \"arrived\", \"tests\", \"slightly\", \"thoughts\", \"helping\", \"charles\", \"becoming\", \"handle\", \"grand\", \"readers\", \"indicated\", \"laughed\", \"contract\",\n    \"silence\", \"division\", \"stress\", \"lights\", \"sides\", \"plays\", \"doctors\", \"smaller\", \"pieces\", \"williams\", \"starts\", \"elements\", \"experts\", \"classes\", \"london\", \"minister\",\n    \"changing\", \"worried\", \"writer\", \"walls\", \"showing\", \"scott\", \"separate\", \"focused\", \"extent\", \"movies\", \"views\", \"strength\", \"facts\", \"mmhmm\", \"shape\", \"jackson\",\n    \"donald\", \"seconds\", \"defined\", \"placed\", \"proposed\", \"adults\", \"grade\", \"possibly\", \"japan\", \"score\", \"patterns\", \"noticed\", \"attacks\", \"fourth\", \"stared\", \"contrast\",\n    \"losing\", \"younger\", \"martin\", \"advantage\", \"charges\", \"streets\", \"shared\", \"taught\", \"count\", \"internal\", \"winning\", \"allows\", \"partner\", \"corporate\", \"beneath\", \"behaviors\",\n    \"scared\", \"terrible\", \"listening\", \"smell\", \"processes\", \"prepared\", \"options\", \"regional\", \"tools\", \"thousand\", \"authors\", \"missed\", \"honor\", \"signed\", \"lawyer\", \"harry\",\n    \"anywhere\", \"outcomes\", \"familiar\", \"forever\", \"emotional\", \"plane\", \"kinds\", \"greatest\", \"carolina\", \"soldiers\", \"helps\", \"carried\", \"testing\", \"ourselves\", \"explained\", \"pointed\",\n    \"affect\", \"largely\", \"stepped\", \"driver\", \"prove\", \"pushed\", \"housing\", \"heads\", \"applied\", \"apply\", \"serving\", \"marketing\", \"perceived\", \"painting\", \"relative\", \"essential\",\n    \"boston\", \"markets\", \"artists\", \"extremely\", \"joined\", \"shoes\", \"examples\", \"banks\", \"stands\", \"coverage\", \"medicine\", \"equipment\", \"thick\", \"russian\", \"figures\", \"canada\",\n    \"favor\", \"storm\", \"shoulders\", \"teeth\", \"funding\", \"letters\", \"expensive\", \"northern\", \"signs\", \"pages\", \"photos\", \"victims\", \"fellow\", \"clinical\", \"existing\", \"faces\",\n    \"votes\", \"wondered\", \"aspects\", \"feelings\", \"recognize\", \"entirely\", \"begins\", \"charlie\", \"maintain\", \"selling\", \"relevant\", \"highest\", \"careful\", \"eastern\", \"inches\", \"matters\",\n    \"england\", \"typically\", \"capacity\", \"narrative\", \"pounds\", \"agencies\", \"managed\", \"henry\", \"germany\", \"tradition\", \"emergency\", \"prime\", \"location\", \"represent\", \"doors\", \"longterm\",\n    \"waited\", \"remained\", \"honest\", \"operation\", \"supported\", \"buying\", \"selected\", \"tears\", \"supra\", \"bedroom\", \"objects\", \"stated\", \"believes\", \"bodies\", \"massive\", \"humans\",\n    \"elected\", \"revealed\", \"occurred\", \"houses\", \"michigan\", \"attitudes\", \"persons\", \"guilty\", \"creative\", \"stores\", \"besides\", \"moreover\", \"articles\", \"discuss\", \"respond\", \"educators\",\n    \"excellent\", \"kidding\", \"posts\", \"explains\", \"hoping\", \"unlike\", \"bringing\", \"moments\", \"newspaper\", \"france\", \"reduced\", \"technical\", \"staring\", \"pocket\", \"tight\", \"davis\",\n    \"exposure\", \"completed\", \"grown\", \"manner\", \"adding\", \"owners\", \"committed\", \"opposite\", \"talks\", \"reader\", \"keeps\", \"assistant\", \"belief\", \"suppose\", \"performed\", \"discussed\",\n    \"birthday\", \"remaining\", \"meanwhile\", \"leaned\", \"planned\", \"hardly\", \"brothers\", \"charged\", \"forth\", \"treated\", \"intended\", \"answers\", \"analyses\", \"singing\", \"investors\", \"iraqi\",\n    \"reporting\", \"voted\", \"consumer\", \"anonymous\", \"consumers\", \"leads\", \"revenue\", \"india\", \"golden\", \"drinking\", \"likes\", \"causes\", \"existence\", \"thats\", \"kennedy\", \"stayed\",\n    \"merely\", \"fields\", \"passing\", \"arizona\", \"elections\", \"bathroom\", \"hollywood\", \"accepted\", \"hillary\", \"nearby\", \"creation\", \"clients\", \"choices\", \"expressed\", \"throat\", \"songs\",\n    \"louis\", \"fired\", \"dozen\", \"combined\", \"estimated\", \"lawyers\", \"dealing\", \"somewhat\", \"classic\", \"moves\", \"positions\", \"courses\", \"seeking\", \"sarah\", \"framework\", \"cards\",\n    \"primarily\", \"documents\", \"reporter\", \"trail\", \"dressed\", \"laughing\", \"beliefs\", \"falling\", \"saved\", \"victim\", \"medium\", \"proper\", \"acting\", \"courts\", \"critics\", \"regime\",\n    \"woods\", \"kevin\", \"saddam\", \"increases\", \"fewer\", \"pleasure\", \"request\", \"holds\", \"gentlemen\", \"detroit\", \"entered\", \"removed\", \"sharing\", \"whereas\", \"surgery\", \"glanced\",\n    \"degrees\", \"bottle\", \"musical\", \"writers\", \"headed\", \"accounts\", \"offering\", \"buildings\", \"advanced\", \"obtained\", \"downtown\", \"paint\", \"donaldson\", \"argued\", \"miller\", \"devices\",\n    \"democrat\", \"dreams\", \"powers\", \"studio\", \"korea\", \"selection\", \"wondering\", \"breaking\", \"hanging\", \"parking\", \"sleeping\", \"broad\", \"brian\", \"regard\", \"allowing\", \"answered\",\n    \"perform\", \"excited\", \"brings\", \"spiritual\", \"walks\", \"principle\", \"notion\", \"literally\", \"measured\", \"examined\", \"reagan\", \"birds\", \"agents\", \"operating\", \"sector\", \"flowers\",\n    \"wilson\", \"criteria\", \"dying\", \"films\", \"knees\", \"hopes\", \"diversity\", \"cooking\", \"threw\", \"opposed\", \"phase\", \"samples\", \"purposes\", \"andor\", \"carrying\", \"papers\",\n    \"sharp\", \"offense\", \"improved\", \"paris\", \"loves\", \"variable\", \"examine\", \"foods\", \"colleges\", \"perfectly\", \"practical\", \"centers\", \"jordan\", \"accused\", \"polls\", \"located\",\n    \"formal\", \"figured\", \"bills\", \"limits\", \"external\", \"expert\", \"affairs\", \"sought\", \"billy\", \"similarly\", \"award\", \"barbara\", \"finds\", \"touched\", \"rooms\", \"widely\",\n    \"lifted\", \"awareness\", \"symptoms\", \"colors\", \"graduate\", \"offensive\", \"jerry\", \"struck\", \"maam\", \"ordered\", \"agenda\", \"shopping\", \"susan\", \"fairly\", \"whenever\", \"relation\",\n    \"units\", \"partners\", \"guest\", \"concepts\", \"promised\", \"studied\", \"secondary\", \"collected\", \"arrested\", \"queen\", \"estimates\", \"appeal\", \"campus\", \"breakfast\", \"closely\", \"organized\",\n    \"narrator\", \"roles\", \"survive\", \"daniel\", \"roberts\", \"extreme\", \"whispered\", \"austin\", \"falls\", \"links\", \"constant\", \"chose\", \"strongly\", \"suffering\", \"seasons\", \"nervous\",\n    \"defensive\", \"cutting\", \"childhood\", \"drawn\", \"tickets\", \"rolled\", \"follows\", \"replied\", \"firms\", \"retired\", \"extended\", \"illinois\", \"schedule\", \"detective\", \"smiling\", \"tested\",\n    \"surely\", \"protein\", \"command\", \"severe\", \"kelly\", \"establish\", \"violent\", \"procedure\", \"spanish\", \"criticism\", \"demands\", \"formula\", \"filed\", \"customer\", \"raising\", \"writes\",\n    \"dollar\", \"formed\", \"immediate\", \"pants\", \"meetings\", \"earned\", \"package\", \"athletes\", \"shots\", \"therapy\", \"claimed\", \"attempts\", \"heaven\", \"scholars\", \"sounded\", \"drawing\",\n    \"pulling\", \"evolution\", \"microsoft\", \"diverse\", \"letting\", \"refused\", \"engaged\", \"goods\", \"recovery\", \"warning\", \"pushing\", \"taylor\", \"locked\", \"chemical\", \"reduction\", \"andrew\",\n    \"pulls\", \"coaches\", \"reporters\", \"loose\", \"principal\", \"academy\", \"boyfriend\", \"elsewhere\", \"forgot\", \"recorded\", \"farmers\", \"neighbors\", \"hired\", \"joseph\", \"scored\", \"arguments\",\n    \"absence\", \"mountains\", \"howard\", \"fishing\", \"regions\", \"islamic\", \"settings\", \"connected\", \"begun\", \"facility\", \"barack\", \"sending\", \"tasks\", \"proposal\", \"judgment\", \"faced\",\n    \"hussein\", \"males\", \"contains\", \"equally\", \"laughter\", \"videotape\", \"networks\", \"lessons\", \"literary\", \"risks\", \"miami\", \"functions\", \"counter\", \"grabbed\", \"accurate\", \"carter\",\n    \"valuable\", \"adopted\", \"fixed\", \"owned\", \"lovely\", \"exists\", \"orders\", \"objective\", \"ideal\", \"rarely\", \"elizabeth\", \"opens\", \"chopped\", \"visitors\", \"platform\", \"memories\",\n    \"staying\", \"enjoyed\", \"approved\", \"serves\", \"settled\", \"incident\", \"texts\", \"solutions\", \"speaker\", \"shares\", \"voices\", \"resulting\", \"explore\", \"quietly\", \"edition\", \"mothers\",\n    \"returns\", \"linked\", \"depends\", \"pressed\", \"issued\", \"chain\", \"secure\", \"computers\", \"literacy\", \"launch\", \"highway\", \"virtually\", \"assess\", \"enormous\", \"medicare\", \"universal\",\n    \"directed\", \"frequency\", \"convinced\", \"fallen\", \"danny\", \"females\", \"discourse\", \"genetic\", \"employee\", \"nights\", \"trained\", \"historic\", \"opinions\", \"helpful\", \"viewed\", \"scheduled\",\n    \"anderson\", \"minds\", \"feedback\", \"stocks\", \"disaster\", \"dramatic\", \"component\", \"personnel\", \"reviews\", \"visible\", \"deficit\", \"involving\", \"strategic\", \"channel\", \"commander\", \"receiving\",\n    \"informed\", \"waves\", \"syria\", \"calories\", \"referred\", \"telephone\", \"wooden\", \"nancy\", \"glasses\", \"stops\", \"depending\", \"inspired\", \"guests\", \"bears\", \"destroyed\", \"versus\",\n    \"addressed\", \"defend\", \"suffered\", \"prince\", \"stronger\", \"vietnam\", \"calif\", \"harris\", \"exposed\", \"initially\", \"roger\", \"clark\", \"hills\", \"dallas\", \"repeated\", \"detailed\",\n    \"indicates\", \"bobby\", \"signal\", \"hopefully\", \"britain\", \"bones\", \"checked\", \"technique\", \"republic\", \"roughly\", \"hoped\", \"burning\", \"dependent\", \"seats\", \"cleveland\", \"marry\",\n    \"employed\", \"crossed\", \"contain\", \"files\", \"omitted\", \"deserve\", \"invited\", \"gently\", \"rolling\", \"jason\", \"messages\", \"honestly\", \"simon\", \"loans\", \"cultures\", \"socalled\",\n    \"vehicles\", \"breathing\", \"minnesota\", \"lewis\", \"listed\", \"apparent\", \"passage\", \"survival\", \"seattle\", \"forgotten\", \"baltimore\", \"wanting\", \"describes\", \"driven\", \"hunting\", \"concrete\",\n    \"sawyer\", \"replaced\", \"compare\", \"tries\", \"assets\", \"expansion\", \"involves\", \"reserve\", \"allen\", \"handed\", \"joins\", \"managers\", \"smiles\", \"properly\", \"kansas\", \"declined\",\n    \"simpson\", \"smoking\", \"fought\", \"organic\", \"finance\", \"proved\", \"launched\", \"italian\", \"discovery\", \"plain\", \"button\", \"heavily\", \"islam\", \"confirmed\", \"horrible\", \"divided\",\n    \"resulted\", \"laughs\", \"sandy\", \"bureau\", \"worker\", \"imagined\", \"shrugged\", \"patrick\", \"maryland\", \"storage\", \"delivered\", \"responded\", \"porch\", \"passion\", \"achieved\", \"normally\",\n    \"paused\", \"teaspoon\", \"slipped\", \"nowhere\", \"privacy\", \"screaming\", \"controls\", \"coalition\", \"sciences\", \"warming\", \"dancing\", \"permanent\", \"gathered\", \"intense\", \"household\", \"springs\",\n    \"sensitive\", \"heading\", \"bruce\", \"sighed\", \"scenes\", \"approval\", \"movements\", \"hurricane\", \"exciting\", \"granted\", \"flickr\", \"frankly\", \"chances\", \"lincoln\", \"painted\", \"emerged\",\n    \"precisely\", \"stretch\", \"veterans\", \"cited\", \"assumed\", \"ratio\", \"wrapped\", \"extensive\", \"closing\", \"passes\", \"tommy\", \"unlikely\", \"leather\", \"brinkley\", \"testimony\", \"declared\",\n    \"occurs\", \"machines\", \"returning\", \"egypt\", \"sisters\", \"amounts\", \"indians\", \"naturally\", \"chocolate\", \"denied\", \"visited\", \"columbia\", \"flesh\", \"parks\", \"rachel\", \"trends\",\n    \"paintings\", \"judges\", \"deals\", \"regularly\", \"harvard\", \"supports\", \"topics\", \"jumped\", \"economics\", \"distinct\", \"attended\", \"rocks\", \"injuries\", \"marked\", \"horses\", \"spoken\",\n    \"sessions\", \"distant\", \"delivery\", \"trading\", \"concluded\", \"pakistan\", \"stephen\", \"recommend\", \"reducing\", \"bother\", \"confused\", \"dialogue\", \"theories\", \"anthony\", \"studying\", \"muslims\",\n    \"blocks\", \"reaching\", \"hitting\", \"genes\", \"shake\", \"oregon\", \"profile\", \"infection\", \"combat\", \"dozens\", \"mainly\", \"validity\", \"deeper\", \"losses\", \"waters\", \"rapidly\",\n    \"friendly\", \"listened\", \"fifteen\", \"interior\", \"recalls\", \"fifty\", \"reminded\", \"roads\", \"picking\", \"publicly\", \"absolute\", \"forgive\", \"throwing\", \"sweat\", \"analysts\", \"territory\",\n    \"saudi\", \"presents\", \"admitted\", \"burned\", \"hospitals\", \"shouted\", \"moore\", \"actors\", \"angel\", \"generated\", \"rating\", \"moderate\", \"gifted\", \"dominant\", \"exception\", \"saving\",\n    \"tracks\", \"caller\", \"stability\", \"peers\", \"ratings\", \"assembly\", \"nursing\", \"forehead\", \"deaths\", \"shadows\", \"giants\", \"assigned\", \"pointing\", \"empire\", \"johnny\", \"eddie\",\n    \"offices\", \"clouds\", \"chronicle\", \"memorial\", \"thrown\", \"walter\", \"formation\", \"amazon\", \"mommy\", \"hated\", \"roots\", \"founded\", \"dedicated\", \"mistakes\", \"steady\", \"comedy\",\n    \"counsel\", \"emerging\", \"capitol\", \"contained\", \"stations\", \"instant\", \"reflected\", \"associate\", \"cameras\", \"clothing\", \"traveling\", \"stream\", \"confident\", \"branch\", \"periods\", \"estimate\",\n    \"walker\", \"injured\", \"weekly\", \"threats\", \"grades\", \"speaks\", \"inaudible\", \"terry\", \"hiding\", \"newly\", \"ruling\", \"bonds\", \"orleans\", \"diego\", \"districts\", \"drivers\",\n    \"diane\", \"improving\", \"fantastic\", \"wildlife\", \"metro\", \"humanity\", \"protected\", \"routine\", \"shower\", \"oakland\", \"everyday\", \"covering\", \"linda\", \"abandoned\", \"thread\", \"payments\",\n    \"poetry\", \"churches\", \"summary\", \"causing\", \"breathe\", \"physics\", \"gained\", \"vacation\", \"seeds\", \"creates\", \"mount\", \"annie\", \"australia\", \"compete\", \"pleased\", \"videos\",\n    \"covers\", \"capture\", \"worldwide\", \"producer\", \"tables\", \"origin\", \"oklahoma\", \"awards\", \"profits\", \"ignored\", \"furniture\", \"bound\", \"lifetime\", \"ethical\", \"athletic\", \"generate\",\n    \"climbed\", \"sighs\", \"operate\", \"wisconsin\", \"searching\", \"edward\", \"inflation\", \"alice\", \"barry\", \"bucks\", \"acres\", \"supplies\", \"sanctions\", \"variance\", \"attacked\", \"attached\",\n    \"prominent\", \"mortgage\", \"doctrine\", \"reaches\", \"manhattan\", \"italy\", \"cheek\", \"pollution\", \"centuries\", \"jennifer\", \"copyright\", \"broader\", \"breaks\", \"shortly\", \"sections\", \"protest\",\n    \"decent\", \"kerry\", \"entrance\", \"locations\", \"producing\", \"marks\", \"contrary\", \"gains\", \"earnings\", \"commonly\", \"opponents\", \"scenario\", \"predicted\", \"emissions\", \"loading\", \"wings\",\n    \"goodbye\", \"chairs\", \"reply\", \"superior\", \"baker\", \"founder\", \"packed\", \"ministry\", \"remote\", \"alleged\", \"alliance\", \"theatre\", \"baghdad\", \"softly\", \"allies\", \"phones\",\n    \"visiting\", \"boxes\", \"neighbor\", \"telescope\", \"spots\", \"societies\", \"focusing\", \"collapse\", \"adequate\", \"attempted\", \"helen\", \"temple\", \"steal\", \"diagnosis\", \"announcer\", \"doorway\",\n    \"refer\", \"rejected\", \"accuracy\", \"voter\", \"roman\", \"desperate\", \"emotions\", \"consensus\", \"convicted\", \"singer\", \"disney\", \"guidance\", \"argues\", \"contracts\", \"expanded\", \"warned\",\n    \"recession\", \"hallway\", \"loving\", \"hearts\", \"themes\", \"aircraft\", \"factory\", \"karen\", \"lately\", \"stolen\", \"thompson\", \"resident\", \"laura\", \"engineers\", \"derived\", \"kicked\",\n    \"stages\", \"vegas\", \"recording\", \"taiwan\", \"races\", \"grounds\", \"captured\", \"drives\", \"intent\", \"insisted\", \"trials\", \"proven\", \"waved\", \"commerce\", \"beans\", \"alabama\",\n    \"landing\", \"belong\", \"creature\", \"employers\", \"expecting\", \"targets\", \"divine\", \"happiness\", \"muscles\", \"wished\", \"errors\", \"romantic\", \"missouri\", \"resort\", \"monthly\", \"preferred\",\n    \"format\", \"daughters\", \"variation\", \"conflicts\", \"extension\", \"greek\", \"posting\", \"greatly\", \"wallace\", \"scary\", \"managing\", \"scales\", \"analyzed\", \"pregnancy\", \"ships\", \"peoples\",\n    \"bloody\", \"aimed\", \"wealthy\", \"shore\", \"salary\", \"thereby\", \"pursue\", \"unions\", \"mechanism\", \"refers\", \"kissed\", \"integrity\", \"lists\", \"partly\", \"checking\", \"contest\",\n    \"morgan\", \"designer\", \"youre\", \"lawmakers\", \"preparing\", \"legacy\", \"witnesses\", \"trips\", \"beating\", \"colonel\", \"cheeks\", \"stranger\", \"featured\", \"stare\", \"warren\", \"grateful\",\n    \"temporary\", \"enemies\", \"pretend\", \"civilian\", \"chamber\", \"evident\", \"battery\", \"referring\", \"reflects\", \"assuming\", \"entering\", \"handful\", \"gordon\", \"couples\", \"versions\", \"stewart\",\n    \"drops\", \"scientist\", \"consent\", \"recalled\", \"matthew\", \"painful\", \"cents\", \"moscow\", \"overcome\", \"flour\", \"kinda\", \"defeat\", \"entitled\", \"disorders\", \"courage\", \"priest\",\n    \"encounter\", \"hardware\", \"emily\", \"editorial\", \"advocates\", \"promoting\", \"guarantee\", \"sorts\", \"succeed\", \"tragedy\", \"intensity\", \"isolated\", \"fears\", \"irish\", \"string\", \"database\",\n    \"behalf\", \"stretched\", \"drinks\", \"visits\", \"longtime\", \"tension\", \"sweetie\", \"celebrate\", \"picks\", \"knocked\", \"promises\", \"spain\", \"gifts\", \"arthur\", \"blogs\", \"apologize\",\n    \"korean\", \"acquired\", \"expenses\", \"homeless\", \"reveals\", \"robinson\", \"directors\", \"closet\", \"charlotte\", \"scandal\", \"handsome\", \"chart\", \"belly\", \"lifestyle\", \"kuwait\", \"hunter\",\n    \"cares\", \"gates\", \"viewers\", \"insight\", \"reliable\", \"outta\", \"checks\", \"construct\", \"tomatoes\", \"steven\", \"dishes\", \"lands\", \"liberals\", \"tennessee\", \"guards\", \"purchased\",\n    \"strip\", \"indiana\", \"hispanic\", \"adams\", \"providers\", \"chuck\", \"designs\", \"leaning\", \"shocked\", \"radiation\", \"assessed\", \"perry\", \"volunteer\", \"circuit\", \"summit\", \"airlines\",\n    \"strikes\", \"ownership\", \"register\", \"murdered\", \"potatoes\", \"qualified\", \"watches\", \"ranging\", \"briefly\", \"provision\", \"elderly\", \"counties\", \"biden\", \"gathering\", \"meals\", \"ruled\",\n    \"surveys\", \"swimming\", \"baseline\", \"islands\", \"russell\", \"barriers\", \"dynamics\", \"hampshire\", \"norms\", \"trillion\", \"racism\", \"filling\", \"adoption\", \"reforms\", \"devoted\", \"maria\",\n    \"landed\", \"cleaning\", \"competing\", \"graham\", \"coaching\", \"dennis\", \"walters\", \"buchanan\", \"nurses\", \"survived\", \"shelter\", \"sergeant\", \"rings\", \"employer\", \"nelson\", \"arguing\",\n    \"nixon\", \"artistic\", \"theology\", \"dates\", \"alexander\", \"choosing\", \"abilities\", \"existed\", \"perot\", \"striking\", \"ballot\", \"corps\", \"targeted\", \"sodium\", \"expertise\", \"relatives\",\n    \"wayne\", \"sooner\", \"olympics\", \"seemingly\", \"senators\", \"preserve\", \"princess\", \"rational\", \"stares\", \"snapped\", \"treaty\", \"grandma\", \"towns\", \"followup\", \"parallel\", \"grave\",\n    \"styles\", \"turner\", \"theyre\", \"mitchell\", \"desired\", \"introduce\", \"counts\", \"rhetoric\", \"folded\", \"sacrifice\", \"verbal\", \"commit\", \"margaret\", \"lowest\", \"handling\", \"farther\",\n    \"chuckles\", \"cohen\", \"expense\", \"youtube\", \"brazil\", \"scoring\", \"cleared\", \"jacob\", \"engaging\", \"makeup\", \"sheets\", \"secrets\", \"edwards\", \"bastard\", \"lightly\", \"clubs\",\n    \"confusion\", \"examining\", \"equality\", \"horizon\", \"producers\", \"titles\", \"fathers\", \"powell\", \"correctly\", \"tendency\", \"claiming\", \"stake\", \"michelle\", \"appointed\", \"screening\", \"parental\",\n    \"stones\", \"reverse\", \"playoffs\", \"jonathan\", \"franchise\", \"spaces\", \"raises\", \"traveled\", \"jesse\", \"louisiana\", \"adventure\", \"cokie\", \"classical\", \"wounded\", \"requiring\", \"nonprofit\",\n    \"parker\", \"contexts\", \"copies\", \"stanford\", \"smelled\", \"purple\", \"brooklyn\", \"currency\", \"boards\", \"cambridge\", \"educated\", \"ceremony\", \"reads\", \"precious\", \"aesthetic\", \"modest\",\n    \"campaigns\", \"activists\", \"kentucky\", \"suspected\", \"parked\", \"actively\", \"basement\", \"franklin\", \"branches\", \"wright\", \"julie\", \"attorneys\", \"impressed\", \"ronald\", \"physician\", \"varied\",\n    \"expanding\", \"forty\", \"separated\", \"gardens\", \"carries\", \"edges\", \"debates\", \"lawrence\", \"engineer\", \"unity\", \"wherever\", \"cardinals\", \"satellite\", \"ranks\", \"southwest\", \"refugees\",\n    \"sunlight\", \"wells\", \"playoff\", \"shifted\", \"regarded\", \"creatures\", \"twisted\", \"learners\", \"receiver\", \"touchdown\", \"exclusive\", \"languages\", \"overseas\", \"arabia\", \"stopping\", \"aaron\",\n    \"signals\", \"occasion\", \"reviewed\", \"taliban\", \"marshall\", \"cookies\", \"chips\", \"breasts\", \"intention\", \"broadway\", \"sizes\", \"billions\", \"satisfied\", \"cabinet\", \"adviser\", \"borders\",\n    \"hiring\", \"appeals\", \"collins\", \"jerusalem\", \"default\", \"relate\", \"server\", \"invisible\", \"broncos\", \"immigrant\", \"alongside\", \"douglas\", \"charity\", \"equation\", \"blues\", \"reactions\",\n    \"favorites\", \"linear\", \"dropping\", \"inclusion\", \"bishop\", \"revenues\", \"shade\", \"audio\", \"logical\", \"oldest\", \"poured\", \"demanded\", \"winds\", \"attending\", \"worlds\", \"berkeley\",\n    \"prisoners\", \"healing\", \"wages\", \"theres\", \"counting\", \"taxpayers\", \"shops\", \"complaint\", \"dispute\", \"invasion\", \"resolve\", \"rated\", \"balanced\", \"transport\", \"trucks\", \"libraries\",\n    \"prospect\", \"craig\", \"modified\", \"reasoning\", \"yankees\", \"overnight\", \"feeding\", \"consists\", \"suits\", \"flood\", \"spectrum\", \"northwest\", \"adopt\", \"download\", \"rangers\", \"justify\",\n    \"scream\", \"martha\", \"migration\", \"admission\", \"installed\", \"blond\", \"requests\", \"instances\", \"struggled\", \"focuses\", \"gibson\", \"promising\", \"grabs\", \"displayed\", \"campbell\", \"autonomy\",\n    \"deadly\", \"claire\", \"produces\", \"plates\", \"dimension\", \"crowded\", \"loaded\", \"trace\", \"explicit\", \"morris\", \"tribal\", \"modeling\", \"tossed\", \"cooper\", \"advocate\", \"oclock\",\n    \"portland\", \"evaluated\", \"touching\", \"circles\", \"planes\", \"arrival\", \"nutrition\", \"bradley\", \"remembers\", \"wheels\", \"habits\", \"decreased\", \"motivated\", \"heels\", \"impacts\", \"magnitude\",\n    \"backs\", \"pockets\", \"forcing\", \"maggie\", \"equity\", \"comparing\", \"freshman\", \"suburban\", \"closest\", \"lined\", \"applying\", \"subtle\", \"jefferson\", \"wider\", \"trapped\", \"halfway\",\n    \"nebraska\", \"celebrity\", \"rushed\", \"antonio\", \"pleasant\", \"alaska\", \"featuring\", \"affects\", \"cooked\", \"trauma\", \"servings\", \"proposals\", \"noting\", \"enjoying\", \"seventh\", \"demanding\",\n    \"lobby\", \"justin\", \"array\", \"signing\", \"arkansas\", \"murphy\", \"grinned\", \"likewise\", \"angels\", \"oscar\", \"funded\", \"defending\", \"accessed\", \"julia\", \"portrait\", \"layers\",\n    \"custody\", \"buyers\", \"waist\", \"jackie\", \"lowered\", \"realistic\", \"slavery\", \"rushing\", \"updated\", \"ignorant\", \"passenger\", \"debut\", \"fires\", \"remarks\", \"faded\", \"jennings\",\n    \"makers\", \"observers\", \"katie\", \"forests\", \"duties\", \"tender\", \"identical\", \"camps\", \"talented\", \"hurts\", \"imposed\", \"privilege\", \"printed\", \"corridor\", \"francis\", \"yelled\",\n    \"novels\", \"rivers\", \"hearings\", \"overhead\", \"farms\", \"lover\", \"pitcher\", \"crossing\", \"tends\", \"treasury\", \"goodness\", \"complain\", \"dominated\", \"recipes\", \"meets\", \"disappear\",\n    \"arranged\", \"laden\", \"updates\", \"iranian\", \"electoral\", \"habitat\", \"teens\", \"enhanced\", \"worthy\", \"sanders\", \"instantly\", \"readily\", \"conscious\", \"sliced\", \"peaceful\", \"rolls\",\n    \"rocky\", \"vegetable\", \"protests\", \"shaped\", \"maine\", \"jamie\", \"chill\", \"newshour\", \"courtesy\", \"russians\", \"sidewalk\", \"climbing\", \"dressing\", \"grants\", \"someday\", \"solely\",\n    \"opponent\", \"damaged\", \"strain\", \"nathan\", \"crops\", \"evolved\", \"particles\", \"jokes\", \"websites\", \"libya\", \"violation\", \"profound\", \"cheaper\", \"retrieved\", \"medicaid\", \"tracking\",\n    \"terrific\", \"missile\", \"floating\", \"trunk\", \"virtue\", \"keith\", \"deserves\", \"magazines\", \"crown\", \"removal\", \"donna\", \"shapes\", \"washed\", \"allegedly\", \"nonsense\", \"promotion\",\n    \"worship\", \"secular\", \"heroes\", \"analyze\", \"reminds\", \"stirring\", \"editors\", \"symbolic\", \"boats\", \"wishes\", \"attracted\", \"musicians\", \"spotted\", \"qualities\", \"airline\", \"planets\",\n    \"minimal\", \"paragraph\", \"southeast\", \"handled\", \"paula\", \"fails\", \"delicious\", \"shakes\", \"masters\", \"signature\", \"publisher\", \"charter\", \"audiences\", \"warner\", \"brooks\", \"applies\",\n    \"insights\", \"seniors\", \"bleeding\", \"bottles\", \"ignorance\", \"madison\", \"jeffrey\", \"safer\", \"twins\", \"headlines\", \"generous\", \"fulltime\", \"frowned\", \"annually\", \"toxic\", \"measuring\",\n    \"bands\", \"slaves\", \"socially\", \"wiped\", \"restore\", \"afterward\", \"sustained\", \"aboard\", \"dough\", \"blessed\", \"believing\", \"careers\", \"cheney\", \"homeland\", \"molly\", \"civilians\",\n    \"grows\", \"coastal\", \"suspended\", \"brains\", \"gorbachev\", \"necessity\", \"counted\", \"pressures\", \"scattered\", \"efficacy\", \"victor\", \"expects\", \"iraqis\", \"assessing\", \"traits\", \"ellen\",\n    \"dragged\", \"patience\", \"disabled\", \"occupied\", \"tucked\", \"mason\", \"sometime\", \"rebecca\", \"partial\", \"addresses\", \"legally\", \"hawaii\", \"scent\", \"defendant\", \"survivors\", \"sally\",\n    \"followers\", \"toronto\", \"civic\", \"jessica\", \"transit\", \"automatic\", \"credits\", \"implies\", \"engines\", \"informal\", \"tigers\", \"treating\", \"tended\", \"ireland\", \"acute\", \"freak\",\n    \"sponsored\", \"graph\", \"stanley\", \"enters\", \"admits\", \"inherent\", \"smells\", \"strict\", \"fruits\", \"defining\", \"exploring\", \"composed\", \"nightmare\", \"realm\", \"defeated\", \"placement\",\n    \"nicole\", \"ethnicity\", \"viewing\", \"sampling\", \"channels\", \"blank\", \"freeze\", \"prospects\", \"lebanon\", \"submitted\", \"betty\", \"graphic\", \"speakers\", \"berlin\", \"booth\", \"eleven\",\n    \"monica\", \"firmly\", \"delicate\", \"drain\", \"isolation\", \"entity\", \"quarters\", \"emphasize\", \"cared\", \"origins\", \"flexible\", \"stays\", \"spite\", \"philip\", \"residence\", \"sticks\",\n    \"acted\", \"silently\", \"adapted\", \"graduated\", \"vaccine\", \"slices\", \"quest\", \"corners\", \"gloves\", \"protocol\", \"hotels\", \"adjusted\", \"quoted\", \"spirits\", \"seated\", \"dismissed\",\n    \"steam\", \"innings\", \"tourists\", \"hamilton\", \"episodes\", \"jenny\", \"backup\", \"winners\", \"trailer\", \"sharon\", \"dealt\", \"muttered\", \"workplace\", \"shifts\", \"economies\", \"maker\",\n    \"grams\", \"troubled\", \"rubbed\", \"momentum\", \"eighth\", \"crosstalk\", \"putin\", \"sandwich\", \"diagnosed\", \"poorly\", \"codes\", \"consisted\", \"brands\", \"react\", \"solving\", \"ranged\",\n    \"shouting\", \"rounds\", \"stuffed\", \"courtroom\", \"pursuit\", \"excluded\", \"throws\", \"achieving\", \"petraeus\", \"historian\", \"seeks\", \"bases\", \"attacking\", \"startled\", \"pressing\", \"advocacy\",\n    \"sheep\", \"journals\", \"lightning\", \"recover\", \"sentences\", \"ralph\", \"inning\", \"critique\", \"emails\", \"deadline\", \"strangers\", \"displays\", \"driveway\", \"lakes\", \"morality\", \"rockets\",\n    \"blowing\", \"insist\", \"catching\", \"attribute\", \"yelling\", \"beard\", \"farmer\", \"trusted\", \"phillips\", \"portfolio\", \"arnold\", \"marie\", \"hunters\", \"wives\", \"beloved\", \"answering\",\n    \"flies\", \"brandon\", \"invested\", \"cracked\", \"shorter\", \"halloween\", \"intimate\", \"teenage\", \"counselor\", \"redskins\", \"screamed\", \"twentieth\", \"agrees\", \"beaten\", \"vitamin\", \"namely\",\n    \"damned\", \"mature\", \"trails\", \"heights\", \"advances\", \"blocked\", \"belongs\", \"jumping\", \"gentleman\", \"accepting\", \"souls\", \"enrolled\", \"conclude\", \"meters\", \"onions\", \"requested\",\n    \"projected\", \"incidence\", \"lighting\", \"shifting\", \"provider\", \"stiff\", \"contents\", \"janet\", \"escaped\", \"suite\", \"teaches\", \"tours\", \"median\", \"perceive\", \"diana\", \"openly\",\n    \"exhausted\", \"unclear\", \"permitted\", \"province\", \"patent\", \"meantime\", \"stored\", \"greens\", \"tanks\", \"mueller\", \"anxious\", \"specified\", \"columnist\", \"rises\", \"revealing\", \"designers\",\n    \"mister\", \"exercises\", \"interact\", \"temporal\", \"struggles\", \"northeast\", \"bored\", \"swallowed\", \"benjamin\", \"planted\", \"streak\", \"assured\", \"pitching\", \"calendar\", \"safely\", \"investing\",\n    \"pasta\", \"squad\", \"homework\", \"interface\", \"urged\", \"quotes\", \"grasp\", \"sucks\", \"partially\", \"ignoring\", \"statute\", \"saints\", \"pills\", \"sells\", \"detected\", \"flights\",\n    \"resolved\", \"towel\", \"promoted\", \"wireless\", \"browser\", \"syrian\", \"tyler\", \"stealing\", \"panels\", \"catherine\", \"criterion\", \"mentally\", \"founding\", \"accent\", \"respected\", \"bernie\",\n    \"steep\", \"stance\", \"columbus\", \"missiles\", \"jewelry\", \"draws\", \"suspects\", \"hunger\", \"workout\", \"corrupt\", \"warmth\", \"incidents\", \"placing\", \"eyebrows\", \"teammates\", \"prompted\",\n    \"screams\", \"metaphor\", \"starter\", \"backward\", \"murray\", \"feared\", \"hannah\", \"casey\", \"allstar\", \"mobility\", \"occasions\", \"wendy\", \"inventory\", \"threshold\", \"warrant\", \"deciding\",\n    \"guided\", \"galaxies\", \"financing\", \"writings\", \"shelf\", \"fighters\", \"excessive\", \"tropical\", \"evans\", \"recovered\", \"curiosity\", \"qualify\", \"montana\", \"traded\", \"mining\", \"obesity\",\n    \"screwed\", \"strengths\", \"nevada\", \"belonged\", \"hears\", \"footage\", \"sheer\", \"meanings\", \"blown\", \"bearing\", \"kenny\", \"forrest\", \"proceed\", \"activist\", \"lucas\", \"symbols\",\n    \"carlos\", \"suitable\", \"possess\", \"reserves\", \"highlight\", \"workshop\", \"collar\", \"albert\", \"graduates\", \"chemistry\", \"eagles\", \"infected\", \"reception\", \"vinegar\", \"hansen\", \"vincent\",\n    \"avoided\", \"shuttle\", \"lacking\", \"sectors\", \"lineup\", \"greece\", \"stepping\", \"amanda\", \"shiny\", \"matches\", \"awarded\", \"embassy\", \"incentive\", \"colin\", \"bothered\", \"jurors\",\n    \"voluntary\", \"decides\", \"gasoline\", \"explored\", \"masses\", \"oliver\", \"retain\", \"missions\", \"squeezed\", \"hostile\", \"paradigm\", \"spends\", \"developer\", \"teenagers\", \"spreading\", \"departure\",\n    \"happily\", \"haiti\", \"donations\", \"tales\", \"invented\", \"orchestra\", \"aliens\", \"benghazi\", \"palin\", \"flows\", \"magnetic\", \"holmes\", \"detection\", \"organize\", \"ukraine\", \"removing\",\n    \"barrier\", \"nothin\", \"loyalty\", \"knight\", \"fights\", \"shining\", \"villages\", \"harvey\", \"economist\", \"converted\", \"sticking\", \"relieved\", \"poems\", \"hurting\", \"affecting\", \"hurried\",\n    \"lighter\", \"studios\", \"malcolm\", \"locker\", \"revenge\", \"lungs\", \"tablet\", \"testament\", \"notably\", \"wears\", \"flames\", \"publish\", \"justified\", \"pillow\", \"divorced\", \"relating\",\n    \"export\", \"worries\", \"grandpa\", \"marcus\", \"sharply\", \"hesitated\", \"leonard\", \"entities\", \"polling\", \"desktop\", \"lifting\", \"backyard\", \"inability\", \"norman\", \"authentic\", \"finishing\",\n    \"interpret\", \"companion\", \"depressed\", \"rogers\", \"labeled\", \"contacts\", \"altered\", \"distress\", \"centre\", \"essays\", \"deemed\", \"vessels\", \"pickup\", \"lions\", \"prints\", \"blogging\",\n    \"bosnia\", \"laser\", \"bride\", \"railroad\", \"mercury\", \"relaxed\", \"graphics\", \"testified\", \"dealer\", \"pearl\", \"fleet\", \"regimes\", \"holidays\", \"floors\", \"midst\", \"drawer\",\n    \"banned\", \"addiction\", \"countless\", \"fighter\", \"sends\", \"revised\", \"embedded\", \"liver\", \"vanished\", \"teenager\", \"marines\", \"reserved\", \"rumors\", \"yeltsin\", \"cuban\", \"occurring\",\n    \"zones\", \"transform\", \"stunning\", \"battles\", \"testify\", \"paths\", \"harold\", \"freely\", \"anytime\", \"matching\", \"judgments\", \"collapsed\", \"tolerance\", \"latino\", \"creator\", \"weakness\",\n    \"earning\", \"costly\", \"insists\", \"treasure\", \"marty\", \"carrier\", \"tampa\", \"varieties\", \"partisan\", \"modes\", \"cowboys\", \"boulder\", \"delayed\", \"wallet\", \"pursuing\", \"intensive\",\n    \"pathetic\", \"avoiding\", \"kings\", \"failures\", \"skillet\", \"edited\", \"kicking\", \"regards\", \"reminder\", \"dealers\", \"considers\", \"magical\", \"butler\", \"prayers\", \"starters\", \"polish\",\n    \"proteins\", \"backing\", \"priests\", \"shipping\", \"utterly\", \"rebounds\", \"insects\", \"resume\", \"spinning\", \"glances\", \"faithful\", \"crushed\", \"terrain\", \"quinn\", \"bennett\", \"compound\",\n    \"colorful\", \"digging\", \"accounted\", \"sullivan\", \"laying\", \"imagery\", \"youngest\", \"molecules\", \"skinny\", \"brutal\", \"terrified\", \"resting\", \"favorable\", \"shorts\", \"egyptian\", \"pairs\",\n    \"nails\", \"pilots\", \"posed\", \"intend\", \"desires\", \"tribes\", \"emergence\", \"exports\", \"stating\", \"charming\", \"turkish\", \"wonders\", \"puerto\", \"apples\", \"citing\", \"mounted\",\n    \"applause\", \"governing\", \"slope\", \"advisory\", \"dylan\", \"rebels\", \"fisher\", \"witnessed\", \"forming\", \"socks\", \"strictly\", \"carved\", \"senses\", \"slammed\", \"brushed\", \"initiated\",\n    \"printing\", \"opposing\", \"succeeded\", \"manning\", \"scholar\", \"averaged\", \"tavis\", \"favored\", \"doubled\", \"sliding\", \"tenure\", \"surgeon\", \"mighty\", \"container\", \"lesser\", \"palms\",\n    \"bulls\", \"relevance\", \"destiny\", \"knocking\", \"operated\", \"assure\", \"samsung\", \"dakota\", \"ballots\", \"samuel\", \"angela\", \"loudly\", \"tapes\", \"polite\", \"catches\", \"discount\",\n    \"louder\", \"reverend\", \"novak\", \"bullying\", \"stressed\", \"skilled\", \"colleague\", \"tapped\", \"switched\", \"ripped\", \"rides\", \"sprinkle\", \"rejection\", \"glenn\", \"cleaned\", \"teddy\",\n    \"visitor\", \"chiefs\", \"foolish\", \"scratch\", \"permits\", \"bizarre\", \"tourism\", \"miserable\", \"dreamed\", \"architect\", \"occupy\", \"leans\", \"receives\", \"palestine\", \"blamed\", \"gaining\",\n    \"hometown\", \"formerly\", \"symphony\", \"vanilla\", \"stern\", \"routinely\", \"stark\", \"tensions\", \"derek\", \"youths\", \"bullets\", \"travelers\", \"armstrong\", \"watson\", \"domains\", \"crowds\",\n    \"rodriguez\", \"andrea\", \"jeremy\", \"sympathy\", \"practiced\", \"religions\", \"scrutiny\", \"labels\", \"terribly\", \"cohort\", \"earliest\", \"hosts\", \"ancestors\", \"passive\", \"murders\", \"chasing\",\n    \"batman\", \"prisoner\", \"dusty\", \"medieval\", \"annoying\", \"verse\", \"garcia\", \"bryant\", \"spencer\", \"searched\", \"farming\", \"gasps\", \"cheating\", \"trains\", \"buttons\", \"strongest\",\n    \"observer\", \"matched\", \"weekends\", \"loses\", \"organisms\", \"yields\", \"subsidies\", \"peterson\", \"orlando\", \"abundance\", \"nearest\", \"equipped\", \"suburbs\", \"bridges\", \"wounds\", \"shocking\",\n    \"homer\", \"lasted\", \"wasted\", \"kathy\", \"appealing\", \"patriots\", \"airplane\", \"costume\", \"parenting\", \"richmond\", \"tucson\", \"tumor\", \"surgical\", \"observing\", \"desirable\", \"irony\",\n    \"lawsuits\", \"legendary\", \"theaters\", \"divisions\", \"blessing\", \"skeptical\", \"cheers\", \"warriors\", \"tires\", \"screens\", \"caribbean\", \"adverse\", \"tribune\", \"operator\", \"probe\", \"sentenced\",\n    \"hates\", \"aurora\", \"statue\", \"valued\", \"inmates\", \"mandatory\", \"honored\", \"replacing\", \"imaging\", \"prophet\", \"germans\", \"kissing\", \"jupiter\", \"flashed\", \"enabled\", \"caroline\",\n    \"rewards\", \"realizing\", \"oversight\", \"champagne\", \"dense\", \"workforce\", \"sophomore\", \"rested\", \"straw\", \"museums\", \"donors\", \"continent\", \"optimal\", \"clearing\", \"restored\", \"certified\",\n    \"ounces\", \"vermont\", \"notions\", \"sweeping\", \"downs\", \"hudson\", \"recycling\", \"titled\", \"binding\", \"minimize\", \"sweater\", \"cookie\", \"murmured\", \"solved\", \"heather\", \"confusing\",\n    \"retailers\", \"abraham\", \"somethin\", \"sentiment\", \"ranking\", \"drifted\", \"doubts\", \"clarity\", \"reduces\", \"premise\", \"dated\", \"hierarchy\", \"harrison\", \"histories\", \"cycles\", \"keyboard\",\n    \"operates\", \"shelves\", \"hangs\", \"stevens\", \"casting\", \"tricks\", \"lloyd\", \"scenarios\", \"carrie\", \"seized\", \"severely\", \"pushes\", \"charm\", \"propose\", \"realities\", \"drawings\",\n    \"taxpayer\", \"washing\", \"prevented\", \"convert\", \"cries\", \"speeches\", \"chains\", \"limiting\", \"bailey\", \"guides\", \"hightech\", \"investor\", \"popped\", \"commented\", \"sixteen\", \"randomly\",\n    \"salaries\", \"archives\", \"closes\", \"hiking\", \"milwaukee\", \"violated\", \"blogger\", \"fried\", \"louise\", \"lasting\", \"routes\", \"trout\", \"thrust\", \"analyzing\", \"framed\", \"supper\",\n    \"elevated\", \"freshly\", \"barnes\", \"arriving\", \"limbs\", \"compact\", \"aloud\", \"rotation\", \"lovers\", \"thesis\", \"sequences\", \"triple\", \"quantity\", \"mitch\", \"travis\", \"colony\",\n    \"princeton\", \"bikes\", \"indirect\", \"towers\", \"maintains\", \"melissa\", \"selfish\", \"paradise\", \"shoved\", \"obstacles\", \"castro\", \"crude\", \"tucker\", \"spine\", \"peered\", \"severity\",\n    \"integral\", \"victories\", \"packages\", \"processor\", \"slowed\", \"appearing\", \"surfaces\", \"raymond\", \"ashley\", \"judged\", \"shields\", \"exclusion\", \"threaten\", \"enables\", \"judging\", \"delight\",\n    \"furious\", \"starr\", \"christie\", \"praying\", \"suspicion\", \"frames\", \"releases\", \"boundary\", \"hardest\", \"europeans\", \"risky\", \"dodgers\", \"therapist\", \"publicity\", \"aides\", \"confront\",\n    \"damages\", \"charging\", \"lakers\", \"diameter\", \"poster\", \"targeting\", \"pipeline\", \"painter\", \"notre\", \"rental\", \"static\", \"scripture\", \"dorothy\", \"hatch\", \"regulate\", \"blonde\",\n    \"hughes\", \"amazed\", \"pounding\", \"saturated\", \"speeds\", \"grunts\", \"resigned\", \"shout\", \"gazed\", \"lauren\", \"extract\", \"majors\", \"optional\", \"greta\", \"dangers\", \"glowing\",\n    \"longest\", \"scholarly\", \"workshops\", \"shirts\", \"consumed\", \"storms\", \"hopeful\", \"blows\", \"flowing\", \"declare\", \"dessert\", \"kitty\", \"poland\", \"intel\", \"impaired\", \"normative\",\n    \"declining\", \"tastes\", \"texture\", \"batteries\", \"contacted\", \"victoria\", \"martinez\", \"raiders\", \"shawn\", \"fortunate\", \"drought\", \"amongst\", \"invention\", \"dresses\", \"cameron\", \"deficits\",\n    \"naval\", \"overview\", \"embraced\", \"exhibited\", \"idiots\", \"nitrogen\", \"weigh\", \"credible\", \"clusters\", \"ballet\", \"privately\", \"ellis\", \"stumbled\", \"mentor\", \"delegates\", \"imply\",\n    \"operators\", \"mills\", \"goldman\", \"sensation\", \"utilities\", \"chile\", \"rooted\", \"ethan\", \"disputes\", \"footsteps\", \"fuels\", \"mickey\", \"slides\", \"forecast\", \"theirs\", \"blair\",\n    \"cooling\", \"natalie\", \"arlington\", \"broth\", \"scouts\", \"falcons\", \"headline\", \"notebook\", \"customs\", \"locate\", \"travels\", \"arrives\", \"heated\", \"ensuring\", \"riley\", \"beats\",\n    \"columns\", \"implied\", \"swinging\", \"kenneth\", \"canon\", \"optical\", \"sucked\", \"discharge\", \"sophie\", \"alternate\", \"roses\", \"terminal\", \"accidents\", \"purchases\", \"precision\", \"tribute\",\n    \"cowboy\", \"stems\", \"designing\", \"chapters\", \"quarterly\", \"persian\", \"sealed\", \"recipient\", \"motel\", \"surrender\", \"coupled\", \"tokyo\", \"renewed\", \"centered\", \"dumped\", \"fourteen\",\n    \"troubles\", \"comply\", \"spotlight\", \"defines\", \"chapel\", \"indicator\", \"artifacts\", \"urgent\", \"worrying\", \"dreaming\", \"marginal\", \"compost\", \"viewer\", \"gregory\", \"sweep\", \"servants\",\n    \"harper\", \"judiciary\", \"predictor\", \"bloggers\", \"steadily\", \"chorus\", \"hosted\", \"visually\", \"flipped\", \"harmony\", \"thrilled\", \"siblings\", \"kisses\", \"onethird\", \"fictional\", \"inspector\",\n    \"tense\", \"buses\", \"talkin\", \"albeit\", \"overtime\", \"relied\", \"extending\", \"curtains\", \"midwest\", \"computing\", \"whats\", \"griffin\", \"underwear\", \"moses\", \"finest\", \"charts\",\n    \"editing\", \"proves\", \"idaho\", \"gravel\", \"robbery\", \"backwards\", \"rockies\", \"facial\", \"intake\", \"bloom\", \"depicted\", \"heating\", \"basin\", \"cottage\", \"cousins\", \"grounded\",\n    \"fluency\", \"crews\", \"streams\", \"chick\", \"shades\", \"donated\", \"refuge\", \"flooding\", \"suited\", \"comics\", \"motive\", \"steering\", \"integrate\", \"indonesia\", \"possessed\", \"mushrooms\",\n    \"password\", \"frontier\", \"penalties\", \"needle\", \"nutrients\", \"drilling\", \"pricing\", \"explosive\", \"conceived\", \"analogy\", \"candles\", \"tuned\", \"surveyed\", \"vendors\", \"haven\", \"pelosi\",\n    \"nicely\", \"klein\", \"relates\", \"compounds\", \"carriers\", \"outlined\", \"admire\", \"listing\", \"whispers\", \"profiles\", \"pleaded\", \"interval\", \"competent\", \"finely\", \"motives\", \"intrinsic\",\n    \"suitcase\", \"riders\", \"starring\", \"strains\", \"composite\", \"passages\", \"wasting\", \"broadly\", \"hazardous\", \"readings\", \"breathed\", \"phases\", \"utilized\", \"justices\", \"immunity\", \"factories\",\n    \"subscribe\", \"thief\", \"arguably\", \"coded\", \"stuart\", \"fisheries\", \"slapped\", \"nashville\", \"minced\", \"dominate\", \"crashed\", \"venus\", \"rendered\", \"creepy\", \"finals\", \"convey\",\n    \"lacks\", \"brady\", \"sundays\", \"mixing\", \"renewable\", \"nigeria\", \"platforms\", \"obsessed\", \"nexus\", \"statewide\", \"implicit\", \"sixty\", \"carson\", \"budgets\", \"kinsley\", \"aftermath\",\n    \"breeding\", \"liane\", \"recruited\", \"peppers\", \"ringing\", \"planting\", \"thankful\", \"elites\", \"strips\", \"blocking\", \"smoked\", \"refusing\", \"parttime\", \"portable\", \"zealand\", \"cheer\",\n    \"maternal\", \"serial\", \"blake\", \"selecting\", \"shells\", \"fellas\", \"trevor\", \"rationale\", \"thighs\", \"elders\", \"porter\", \"segments\", \"coding\", \"pursued\", \"ideals\", \"thirteen\",\n    \"atomic\", \"newman\", \"wildly\", \"specialty\", \"warehouse\", \"ellie\", \"genuinely\", \"sleeve\", \"ranges\", \"waitress\", \"melted\", \"elvis\", \"cindy\", \"omaha\", \"lifts\", \"comet\",\n    \"consume\", \"bryan\", \"rivals\", \"leverage\", \"generic\", \"someplace\", \"deserved\", \"wolves\", \"freezing\", \"formally\", \"waits\", \"hostages\", \"risen\", \"selective\", \"wandered\", \"bells\",\n    \"proceeds\", \"canceled\", \"governors\", \"shortage\", \"denying\", \"retained\", \"danced\", \"spill\", \"slower\", \"volumes\", \"mario\", \"morally\", \"wines\", \"ensemble\", \"newest\", \"stakes\",\n    \"simmer\", \"trans\", \"obtaining\", \"astros\", \"bloomberg\", \"byebye\", \"gloria\", \"translate\", \"sweden\", \"fitting\", \"clayton\", \"absorbed\", \"slipping\", \"treats\", \"strings\", \"secondly\",\n    \"greeted\", \"argentina\", \"sensed\", \"certainty\", \"tracy\", \"listeners\", \"champions\", \"pitchers\", \"examines\", \"shotgun\", \"borrowed\", \"illegally\", \"premiere\", \"motors\", \"trainer\", \"holder\",\n    \"curtis\", \"entries\", \"portrayed\", \"outlets\", \"memorable\", \"pitched\", \"boulevard\", \"ironic\", \"peaks\", \"poles\", \"fists\", \"zimmerman\", \"disposal\", \"processed\", \"reviewing\", \"portions\",\n    \"lacked\", \"breakdown\", \"defended\", \"imports\", \"musician\", \"flags\", \"logan\", \"stephanie\", \"surviving\", \"handy\", \"marriages\", \"extends\", \"polished\", \"thrones\", \"peeled\", \"decorated\",\n    \"carroll\", \"intervals\", \"concludes\", \"flawed\", \"allied\", \"loads\", \"survivor\", \"excerpt\", \"unified\", \"lending\", \"bowed\", \"jumps\", \"appendix\", \"communism\", \"cellular\", \"console\",\n    \"connie\", \"patricia\", \"overly\", \"nodding\", \"tubes\", \"comin\", \"enacted\", \"offset\", \"talents\", \"taller\", \"chambers\", \"greed\", \"admiral\", \"regulated\", \"rosie\", \"stats\",\n    \"burke\", \"exploded\", \"drafted\", \"yielded\", \"landmark\", \"albums\", \"christine\", \"linking\", \"mistaken\", \"outright\", \"kindle\", \"founders\", \"dominance\", \"stossel\", \"preserved\", \"offended\",\n    \"swings\", \"packing\", \"wicked\", \"waiter\", \"megan\", \"affection\", \"leslie\", \"glancing\", \"sensors\", \"clues\", \"courtyard\", \"spelling\", \"primitive\", \"sporting\", \"gettin\", \"happier\",\n    \"shark\", \"flavors\", \"favors\", \"licensed\", \"secured\", \"flashing\", \"deborah\", \"sunshine\", \"hugged\", \"smarter\", \"darker\", \"gestured\", \"neurons\", \"outdoors\", \"trait\", \"offerings\",\n    \"guardian\", \"detention\", \"exceed\", \"elect\", \"grunting\", \"plains\", \"notices\", \"patted\", \"sideways\", \"browns\", \"interim\", \"ministers\", \"innocence\", \"crosses\", \"objection\", \"mentality\",\n    \"palmer\", \"kicks\", \"undermine\", \"annoyed\", \"finances\", \"newton\", \"carlson\", \"ricky\", \"fairness\", \"shattered\", \"optimism\", \"causal\", \"monsters\", \"exchanges\", \"thorough\", \"genome\",\n    \"respects\", \"needing\", \"cartoon\", \"manages\", \"rubbing\", \"seasonal\", \"kenya\", \"import\", \"topped\", \"warnings\", \"rented\", \"specimens\", \"preschool\", \"sandra\", \"genesis\", \"wrestling\",\n    \"imported\", \"launching\", \"cooler\", \"withdraw\", \"doctoral\", \"hopkins\", \"corpse\", \"curry\", \"evenly\", \"shooter\", \"singapore\", \"ratios\", \"begging\", \"chickens\", \"groans\", \"systemic\",\n    \"basil\", \"feathers\", \"recruit\", \"posters\", \"damaging\", \"serum\", \"glorious\", \"subjected\", \"husbands\", \"gonzalez\", \"crust\", \"lookin\", \"panthers\", \"offenders\", \"forbes\", \"jerked\",\n    \"diplomacy\", \"stripped\", \"affective\", \"feminine\", \"gestures\", \"curricula\", \"descent\", \"hardy\", \"preheat\", \"hosting\", \"carrots\", \"echoed\", \"refuses\", \"messed\", \"grilled\", \"sydney\",\n    \"cheat\", \"paperwork\", \"robots\", \"alfred\", \"laurie\", \"ducks\", \"relying\", \"relies\", \"mouths\", \"censored\", \"costa\", \"brett\", \"ravens\", \"ranger\", \"breed\", \"phrases\",\n    \"shouts\", \"queens\", \"matthews\", \"stimuli\", \"preceding\", \"candle\", \"supporter\", \"clinics\", \"bowls\", \"fertility\", \"combining\", \"deployed\", \"dragging\", \"tilted\", \"superman\", \"coleman\",\n    \"blaming\", \"whisk\", \"enron\", \"marvel\", \"toyota\", \"delighted\", \"swiss\", \"releasing\", \"cracks\", \"folder\", \"discusses\", \"margins\", \"teaspoons\", \"viruses\", \"fixing\", \"searches\",\n    \"isaac\", \"cardinal\", \"rusty\", \"wishing\", \"squash\", \"persuade\", \"cautious\", \"elbows\", \"outline\", \"sensible\", \"steelers\", \"walmart\", \"runners\", \"educator\", \"chloe\", \"realizes\",\n    \"mustard\", \"prayed\", \"endorsed\", \"praised\", \"supplied\", \"pretended\", \"interrupt\", \"cooperate\", \"joking\", \"joshua\", \"sponsors\", \"proving\", \"surplus\", \"spark\", \"freaking\", \"animated\",\n    \"circus\", \"seventeen\", \"stresses\", \"nerves\", \"fastest\", \"boiling\", \"rounded\", \"cheering\", \"smallest\", \"emerges\", \"busted\", \"wandering\", \"auburn\", \"gabriel\", \"excuses\", \"computed\",\n    \"repeating\", \"closure\", \"holdings\", \"easter\", \"hispanics\", \"floated\", \"roasted\", \"traces\", \"mapping\", \"reinforce\", \"meredith\", \"dietary\", \"lanes\", \"confined\", \"fragments\", \"julian\",\n    \"reliance\", \"lengthy\", \"streaming\", \"varies\", \"wyoming\", \"nicholas\", \"lectures\", \"parkway\", \"meter\", \"enabling\", \"olivia\", \"calculate\", \"crossfire\", \"frankie\", \"fountain\", \"corrected\",\n    \"compiled\", \"prejudice\", \"schemes\", \"demons\", \"deviation\", \"felony\", \"newer\", \"hercules\", \"clara\", \"secretly\", \"violet\", \"thereof\", \"criticize\", \"peninsula\", \"enjoys\", \"tricky\",\n    \"atoms\", \"saturn\", \"piled\", \"dont\", \"walsh\", \"residual\", \"commands\", \"wires\", \"powered\", \"carla\", \"conan\", \"mines\", \"delivers\", \"packs\", \"mattress\", \"mastery\",\n    \"pupils\", \"commodity\", \"nervously\", \"betrayed\", \"spilled\", \"timely\", \"precedent\", \"limbaugh\", \"oddly\", \"refusal\", \"outreach\", \"homemade\", \"repeal\", \"delays\", \"nintendo\", \"sacks\",\n    \"prevalent\", \"poses\", \"delaware\", \"liberties\", \"myers\", \"statutes\", \"premier\", \"grains\", \"biased\", \"livestock\", \"particle\", \"prairie\", \"nobel\", \"elaine\", \"brenda\", \"hawks\",\n    \"portraits\", \"bushes\", \"christina\", \"scotland\", \"flaws\", \"contend\", \"massage\", \"hormone\", \"raced\", \"stamps\", \"vaguely\", \"boeing\", \"stretches\", \"cycling\", \"necklace\", \"bankers\",\n    \"comprised\", \"chili\", \"dancer\", \"meyer\", \"woody\", \"stacked\", \"appetite\", \"singles\", \"revision\", \"luckily\", \"rigorous\", \"markers\", \"visions\", \"revival\", \"learner\", \"tablets\",\n    \"figuring\", \"rainbow\", \"masks\", \"cardboard\", \"slick\", \"fishery\", \"rituals\", \"endure\", \"shepherd\", \"broker\", \"baseman\", \"debbie\", \"promotes\", \"alltime\", \"valentine\", \"gerald\",\n    \"shoots\", \"spiral\", \"testers\", \"literal\", \"healthier\", \"opener\", \"tissues\", \"locks\", \"offseason\", \"throne\", \"lifelong\", \"niche\", \"joyce\", \"thermal\", \"evolving\", \"stirred\",\n    \"condemned\", \"feminism\", \"depths\", \"offshore\", \"resign\", \"puzzled\", \"starving\", \"advise\", \"grammar\", \"basics\", \"handles\", \"successes\", \"surprises\", \"donation\", \"distances\", \"curls\",\n    \"marco\", \"backpack\", \"communal\", \"confess\", \"stained\", \"probable\", \"concerts\", \"balloon\", \"assert\", \"develops\", \"monitors\", \"denise\", \"elliott\", \"colonies\", \"handing\", \"mentions\",\n    \"pools\", \"grabbing\", \"strokes\", \"darwin\", \"saucepan\", \"clarence\", \"tasted\", \"arrests\", \"briefing\", \"flooded\", \"differed\", \"textbooks\", \"debts\", \"plots\", \"whistle\", \"sherman\",\n    \"settling\", \"obsession\", \"lottery\", \"packers\", \"manifest\", \"preseason\", \"maximize\", \"truths\", \"interfere\", \"forbidden\", \"balancing\", \"ontario\", \"saves\", \"tolerate\", \"violate\", \"allison\",\n    \"punished\", \"blankets\", \"chuckled\", \"synthetic\", \"marietta\", \"priced\", \"pavement\", \"turtles\", \"choir\", \"timeline\", \"pierce\", \"angles\", \"cloves\", \"sonny\", \"disclose\", \"switching\",\n    \"doomed\", \"servers\", \"posture\", \"triggered\", \"glared\", \"punish\", \"lester\", \"battered\", \"carpenter\", \"premiums\", \"exhibits\", \"chrysler\", \"comeback\", \"turnout\", \"audrey\", \"crawford\",\n    \"trades\", \"sensor\", \"rocking\", \"reversed\", \"crafts\", \"remedy\", \"neglected\", \"saddle\", \"scarf\", \"troubling\", \"headache\", \"twoyear\", \"altar\", \"dancers\", \"blades\", \"sprint\",\n    \"probation\", \"graves\", \"vicious\", \"deleted\", \"clutching\", \"marital\", \"circular\", \"descended\", \"gasped\", \"consult\", \"lengths\", \"haunted\", \"contempt\", \"calvin\", \"henderson\", \"compelled\",\n    \"memoir\", \"hedge\", \"acids\", \"strangely\", \"uniforms\", \"pipes\", \"netanyahu\", \"planetary\", \"fills\", \"barrels\", \"resistant\", \"imaginary\", \"truman\", \"sammy\", \"capita\", \"showbiz\",\n    \"vaccines\", \"moonlight\", \"mattered\", \"forums\", \"saturdays\", \"subscale\", \"andrews\", \"intimacy\", \"freed\", \"crises\", \"poetic\", \"kindness\", \"gripped\", \"quayle\", \"easiest\", \"prisons\",\n    \"averaging\", \"dolphins\", \"nicky\", \"mornings\", \"parameter\", \"remark\", \"weeds\", \"carriage\", \"calmly\", \"textual\", \"flung\", \"helpless\", \"enhancing\", \"slips\", \"serbs\", \"athens\",\n    \"robertson\", \"downward\", \"peggy\", \"outlet\", \"ambiguous\", \"caption\", \"labour\", \"suppliers\", \"savannah\", \"patty\", \"accord\", \"savage\", \"flushed\", \"colts\", \"licenses\", \"romans\",\n    \"guiding\", \"thailand\", \"coats\", \"patches\", \"preview\", \"rider\", \"machinery\", \"camping\", \"sticky\", \"threads\", \"hayes\", \"bacterial\", \"offspring\", \"tweets\", \"coins\", \"sweating\",\n    \"fishermen\", \"theorists\", \"miniature\", \"schooling\", \"clicking\", \"snakes\", \"galleries\", \"reign\", \"tones\", \"ferguson\", \"cherokee\", \"wholly\", \"nowadays\", \"predators\", \"librarian\", \"mistress\",\n    \"whipped\", \"warmer\", \"losers\", \"directing\", \"myths\", \"artwork\", \"shipped\", \"teachings\", \"batting\", \"prevents\", \"winston\", \"airports\", \"clenched\", \"ruins\", \"spinach\", \"realism\",\n    \"fools\", \"modernity\", \"exclaimed\", \"foremost\", \"nasdaq\", \"pitches\", \"buddies\", \"crawled\", \"enjoyment\", \"piles\", \"replies\", \"observes\", \"swollen\", \"dripping\", \"dental\", \"carolyn\",\n    \"wreck\", \"sinking\", \"santorum\", \"coffin\", \"decreases\", \"patterson\", \"bonnie\", \"katherine\", \"gardening\", \"render\", \"shootings\", \"summers\", \"pathways\", \"campuses\", \"adrian\", \"successor\",\n    \"tearing\", \"muddy\", \"siegel\", \"jenkins\", \"vibrant\", \"explorer\", \"whitney\", \"chooses\", \"chefs\", \"arises\", \"exploit\", \"rankings\", \"vince\", \"teammate\", \"marsh\", \"draped\",\n    \"feasible\", \"scanned\", \"sanchez\", \"breach\", \"lethal\", \"diamonds\", \"casually\", \"benny\", \"gauge\", \"geraldo\", \"narrowed\", \"samantha\", \"nationals\", \"poets\", \"statutory\", \"startup\",\n    \"uncovered\", \"lindsay\", \"perched\", \"wagner\", \"lateral\", \"shrink\", \"poised\", \"programme\", \"lousy\", \"fouryear\", \"gallon\", \"lenses\", \"batter\", \"electron\", \"marker\", \"frederick\",\n    \"ambition\", \"disasters\", \"imagining\", \"cursed\", \"keywords\", \"crashing\", \"rehearsal\", \"radically\", \"singers\", \"cleaner\", \"tackles\", \"fridge\", \"mentoring\", \"deserted\", \"monroe\", \"fiveyear\",\n    \"woodruff\", \"imposing\", \"gases\", \"patrons\", \"curved\", \"mainland\", \"flush\", \"traumatic\", \"halls\", \"morrison\", \"marilyn\", \"traced\", \"licensing\", \"heavier\", \"killers\", \"utilize\",\n    \"oneself\", \"mineral\", \"marched\", \"subscales\", \"defenses\", \"scratched\", \"ankles\", \"curves\", \"froze\", \"readiness\", \"transfers\", \"dateline\", \"leisure\", \"genocide\", \"catcher\", \"rosemary\",\n    \"smoothly\", \"misses\", \"sleeves\", \"proudly\", \"explores\", \"thrill\", \"situated\", \"gangs\", \"seller\", \"panting\", \"momma\", \"robbed\", \"modem\", \"responds\", \"eleanor\", \"mound\",\n    \"notorious\", \"arrogant\", \"lively\", \"defender\", \"bounced\", \"willis\", \"punched\", \"darkened\", \"borrowing\", \"gardner\", \"cornell\", \"schedules\", \"clicked\", \"oceans\", \"layout\", \"trousers\",\n    \"overlap\", \"milky\", \"michel\", \"sincere\", \"shelters\", \"veins\", \"bites\", \"covenant\", \"fueled\", \"anova\", \"minus\", \"perimeter\", \"lowering\", \"freeman\", \"slightest\", \"hitter\",\n    \"remainder\", \"stimulate\", \"becky\", \"perfume\", \"mindset\", \"norway\", \"filters\", \"eased\", \"rests\", \"drifting\", \"ambiguity\", \"swedish\", \"joints\", \"strive\", \"virtues\", \"sudan\",\n    \"manners\", \"displaced\", \"pervasive\", \"triangle\", \"seals\", \"vanessa\", \"marcia\", \"elliot\", \"filthy\", \"heroic\", \"wyatt\", \"exchanged\", \"lipstick\", \"slowing\", \"motions\", \"simpler\",\n    \"aligned\", \"holland\", \"gilbert\", \"passport\", \"tightened\", \"lenders\", \"denies\", \"evidently\", \"repairs\", \"kelley\", \"florence\", \"freedoms\", \"marvin\", \"paste\", \"climbs\", \"phoebe\",\n    \"shoppers\", \"footnote\", \"colombia\", \"mounting\", \"lieberman\", \"michele\", \"costumes\", \"roommate\", \"tactic\", \"asteroid\", \"anonymity\", \"mortgages\", \"exterior\", \"specify\", \"activism\", \"netflix\",\n    \"skywalker\", \"pumps\", \"africans\", \"tracked\", \"scanning\", \"plague\", \"andre\", \"messenger\", \"geneva\", \"hostility\", \"finale\", \"defenders\", \"knicks\", \"shannon\", \"mortal\", \"floyd\",\n    \"folding\", \"noticing\", \"eyebrow\", \"dangling\", \"edgar\", \"restrict\", \"whilst\", \"randall\", \"mutually\", \"rebellion\", \"prose\", \"nascar\", \"mosque\", \"rumsfeld\", \"lydia\", \"govern\",\n    \"vernon\", \"policeman\", \"marching\", \"boasts\", \"kosovo\", \"verge\", \"awaiting\", \"sensory\", \"claude\", \"soaked\", \"continuum\", \"handson\", \"agnes\", \"baylor\", \"wrists\", \"venezuela\",\n    \"johns\", \"doses\", \"worthless\", \"newsweek\", \"stressful\", \"sterling\", \"begged\", \"databases\", \"peering\", \"reactor\", \"methodist\", \"seafood\", \"decisive\", \"equations\", \"endured\", \"sworn\",\n    \"prompt\", \"gallons\", \"insect\", \"wander\", \"alignment\", \"clergy\", \"ramsey\", \"medicines\", \"amended\", \"gradual\", \"cleanup\", \"messy\", \"mentors\", \"shutdown\", \"whereby\", \"receivers\",\n    \"neural\", \"montreal\", \"victorian\", \"evelyn\", \"crouched\", \"phillip\", \"pinch\", \"thinly\", \"formats\", \"auditory\", \"stabbed\", \"primaries\", \"sequel\", \"sunni\", \"eternity\", \"bodily\",\n    \"twisting\", \"bankrupt\", \"norfolk\", \"grated\", \"deposits\", \"simmons\", \"quoting\", \"settlers\", \"beams\", \"diving\", \"acquiring\", \"bully\", \"urgency\", \"hottest\", \"plasma\", \"weary\",\n    \"automated\", \"remarked\", \"chunks\", \"binary\", \"shane\", \"patio\", \"pledged\", \"killings\", \"filming\", \"tugged\", \"flynn\", \"embodied\", \"hiphop\", \"bulletin\", \"illnesses\", \"notified\",\n    \"ports\", \"melting\", \"mcconnell\", \"cease\", \"differing\", \"getty\", \"burton\", \"monitored\", \"archive\", \"pinned\", \"trustees\", \"bailout\", \"planners\", \"feeds\", \"initiate\", \"textbook\",\n    \"tangible\", \"staffers\", \"sailing\", \"nasal\", \"pathway\", \"persuaded\", \"apollo\", \"linux\", \"brightly\", \"diced\", \"greeting\", \"exceeded\", \"sausage\", \"sheila\", \"scrambled\", \"jackets\",\n    \"shiite\", \"sucking\", \"beers\", \"drowned\", \"predicts\", \"staircase\", \"disclosed\", \"sugars\", \"propped\", \"knives\", \"rightly\", \"fella\", \"friedman\", \"iconic\", \"retiring\", \"foliage\",\n    \"minerals\", \"paramount\", \"consuming\", \"sings\", \"disgust\", \"pains\", \"handbook\", \"politely\", \"cochran\", \"accusing\", \"cigar\", \"evenings\", \"melody\", \"yanked\", \"attic\", \"rescued\",\n    \"ventures\", \"modeled\", \"depot\", \"combines\", \"protects\", \"patents\", \"hubble\", \"lettuce\", \"diesel\", \"sparked\", \"avoidance\", \"robbie\", \"jared\", \"believer\", \"skiers\", \"betsy\",\n    \"animation\", \"connor\", \"wordpress\", \"salesman\", \"apparatus\", \"provinces\", \"dared\", \"paranoid\", \"heavens\", \"sellers\", \"frances\", \"squinted\", \"canned\", \"mysteries\", \"anyways\", \"endeavor\",\n    \"forensic\", \"mutant\", \"honda\", \"dwight\", \"consist\", \"genetics\", \"yorker\", \"pumping\", \"blinking\", \"enjoyable\", \"prostate\", \"pauses\", \"generates\", \"miguel\", \"smashed\", \"stein\",\n    \"bubbles\", \"judgement\", \"performs\", \"earnest\", \"disciples\", \"scars\", \"doubles\", \"clips\", \"winding\", \"renewal\", \"explode\", \"crawling\", \"cheryl\", \"governed\", \"bowling\", \"juliet\",\n    \"blended\", \"underway\", \"cooks\", \"greene\", \"decay\", \"warns\", \"righteous\", \"offenses\", \"linen\", \"briefcase\", \"sights\", \"promptly\", \"amusement\", \"sabrina\", \"claws\", \"needles\",\n    \"metals\", \"activated\", \"commons\", \"greedy\", \"postal\", \"brighter\", \"hampton\", \"threatens\", \"nursery\", \"latinos\", \"proceeded\", \"bothering\", \"pragmatic\", \"butterfly\", \"chess\", \"viewpoint\",\n    \"flashes\", \"comedian\", \"fibers\", \"freezer\", \"reuters\", \"bulbs\", \"hobby\", \"chelsea\", \"fries\", \"weaker\", \"attendant\", \"uncommon\", \"stall\", \"sleek\", \"ideally\", \"impress\",\n    \"boomers\", \"palette\", \"stahl\", \"clarke\", \"boarding\", \"freeway\", \"whales\", \"aristotle\", \"postwar\", \"clutched\", \"strained\", \"cosby\", \"littleton\", \"slopes\", \"prototype\", \"vitamins\",\n    \"feminists\", \"coached\", \"gamble\", \"bronx\", \"tweeted\", \"communion\", \"finishes\", \"massacre\", \"jerome\", \"cardiac\", \"plaintiff\", \"showcase\", \"richards\", \"fracture\", \"eventual\", \"fitted\",\n    \"tumors\", \"rewarding\", \"chased\", \"crooked\", \"patriot\", \"mandela\", \"isaiah\", \"wrinkled\", \"softened\", \"unusually\", \"violating\", \"armies\", \"fuller\", \"touring\", \"pastel\", \"tangled\",\n    \"shaken\", \"shirley\", \"intervene\", \"realtime\", \"railing\", \"generals\", \"prefers\", \"declines\", \"trademark\", \"butcher\", \"bosses\", \"slumped\", \"mandated\", \"reggie\", \"swamp\", \"daniels\",\n    \"thanked\", \"reminding\", \"belle\", \"slams\", \"troop\", \"outsiders\", \"dread\", \"antiques\", \"kimberly\", \"schorr\", \"benefited\", \"goddess\", \"taxation\", \"cereal\", \"snorted\", \"cheerful\",\n    \"vastly\", \"metaphors\", \"rodney\", \"shredded\", \"differs\", \"shrugs\", \"pierre\", \"relay\", \"moist\", \"printer\", \"sting\", \"longing\", \"grandson\", \"mammals\", \"lindsey\", \"solomon\",\n    \"mercedes\", \"owens\", \"richer\", \"turnover\", \"sharks\", \"bastards\", \"greet\", \"staged\", \"savvy\", \"rubio\", \"definite\", \"mustache\", \"remotely\", \"composer\", \"scarce\", \"barney\",\n    \"tshirts\", \"betting\", \"steer\", \"jonah\", \"harlem\", \"decatur\", \"traders\", \"credited\", \"strands\", \"artillery\", \"collector\", \"cancers\", \"charities\", \"resembles\", \"hernandez\", \"verizon\",\n    \"spice\", \"sipped\", \"strode\", \"prestige\", \"trailing\", \"marion\", \"stray\", \"bouncing\", \"fearful\", \"specifics\", \"sailor\", \"resisted\", \"clung\", \"creators\", \"hunched\", \"snatched\",\n    \"fines\", \"flown\", \"echoes\", \"wiping\", \"soils\", \"diplomats\", \"freddie\", \"headnote\", \"paired\", \"rewarded\", \"jacobs\", \"openness\", \"homers\", \"equals\", \"listens\", \"persist\",\n    \"confessed\", \"rifles\", \"lowfat\", \"numerical\", \"skirts\", \"devotion\", \"swore\", \"exits\", \"lakewood\", \"brushing\", \"tract\", \"freud\", \"goose\", \"preaching\", \"directory\", \"pastoral\",\n    \"accompany\", \"felix\", \"hazards\", \"wasnt\", \"singular\", \"vancouver\", \"superb\", \"lamps\", \"boris\", \"broccoli\", \"habitats\", \"chargers\", \"proposing\", \"groaned\", \"earrings\", \"declaring\",\n    \"tactical\", \"monkeys\", \"vienna\", \"cheated\", \"manny\", \"americas\", \"hostess\", \"circled\", \"splash\", \"norton\", \"swiftly\", \"herbert\", \"isabel\", \"undergo\", \"piper\", \"impatient\",\n    \"sparks\", \"tenants\", \"improves\", \"discrete\", \"wired\", \"worms\", \"frasier\", \"muscular\", \"sidney\", \"agreeing\", \"messing\", \"storyline\", \"exposing\", \"deepest\", \"graders\", \"performer\",\n    \"preorder\", \"bullpen\", \"startling\", \"pillows\", \"barking\", \"alumni\", \"bending\", \"villain\", \"hints\", \"cites\", \"stupidity\", \"deputies\", \"dances\", \"venues\", \"valerie\", \"ambitions\",\n    \"battling\", \"grapes\", \"chicks\", \"luggage\", \"marrying\", \"employing\", \"diets\", \"sleepy\", \"veronica\", \"granite\", \"beatles\", \"parted\", \"riots\", \"islamist\", \"schwartz\", \"groceries\",\n    \"pursuant\", \"judith\", \"recruits\", \"dolls\", \"cakes\", \"cracking\", \"concealed\", \"shapiro\", \"harmless\", \"tornado\", \"denmark\", \"poked\", \"autopsy\", \"suffers\", \"arthritis\", \"outbreaks\",\n    \"alicia\", \"leaked\", \"protocols\", \"backlash\", \"quicker\", \"freelance\", \"favourite\", \"villagers\", \"referral\", \"taped\", \"clearer\", \"framing\", \"curly\", \"rains\", \"brooke\", \"sebastian\",\n    \"medals\", \"grease\", \"extracted\", \"ropes\", \"garth\", \"lingering\", \"thieves\", \"downhill\", \"dawson\", \"signaling\", \"groaning\", \"recycled\", \"dixon\", \"blink\", \"tossing\", \"roswell\",\n    \"scarcely\", \"protested\", \"restraint\", \"garrett\", \"iranians\", \"verses\", \"herman\", \"kindly\", \"tenth\", \"mumbled\", \"finite\", \"presently\", \"toddler\", \"drake\", \"popping\", \"mediation\",\n    \"dudes\", \"paints\", \"derive\", \"rendering\", \"salient\", \"troll\", \"jenna\", \"thinkers\", \"destined\", \"sweaty\", \"booked\", \"logging\", \"restless\", \"buster\", \"gateway\", \"spoiled\",\n    \"stink\", \"whining\", \"paradox\", \"exposures\", \"debated\", \"dissolve\", \"huddled\", \"archer\", \"accepts\", \"webster\", \"collision\", \"skating\", \"famously\", \"cocked\", \"enforced\", \"natives\",\n    \"drums\", \"crashes\", \"spicy\", \"backdrop\", \"hissed\", \"leaks\", \"ramirez\", \"spouses\", \"bumps\", \"albany\", \"stalin\", \"schmidt\", \"dinners\", \"dissent\", \"pamela\", \"classics\",\n    \"weakened\", \"wetlands\", \"seize\", \"pedagogy\", \"champ\", \"commanded\", \"highways\", \"generator\", \"denny\", \"shivering\", \"globally\", \"thyme\", \"alison\", \"premises\", \"civilized\", \"cockpit\",\n    \"diffusion\", \"perez\", \"presses\", \"daring\", \"pastry\", \"growers\", \"hisher\", \"anita\", \"shrinking\", \"carnegie\", \"trope\", \"holders\", \"goldberg\", \"cavuto\", \"cables\", \"prolife\",\n    \"crater\", \"painters\", \"departed\", \"outraged\", \"seating\", \"youve\", \"pointless\", \"amusing\", \"aiming\", \"genres\", \"confirms\", \"mandates\", \"podcast\", \"folds\", \"bosnian\", \"fantasies\",\n    \"jammed\", \"renowned\", \"metric\", \"snaps\", \"ethic\", \"shivered\", \"proxy\", \"appealed\", \"leftist\", \"sprawling\", \"drones\", \"squares\", \"brokers\", \"milton\", \"chavez\", \"freddy\",\n    \"landlord\", \"blessings\", \"trent\", \"deceased\", \"sincerely\", \"attain\", \"excluding\", \"embargo\", \"wildcats\", \"marina\", \"posttest\", \"obese\", \"nodes\", \"nichols\", \"plunged\", \"poorer\",\n    \"buffy\", \"educating\", \"employs\", \"tryin\", \"gasping\", \"ceramic\", \"depended\", \"coughing\", \"retrieve\", \"overhaul\", \"packaging\", \"wesley\", \"watts\", \"owning\", \"spectacle\", \"naomi\",\n    \"rouge\", \"syracuse\", \"drowning\", \"tunes\", \"erica\", \"alliances\", \"electrons\", \"freshmen\", \"securing\", \"suntimes\", \"starbucks\", \"creep\", \"subtitles\", \"cafeteria\", \"gunshot\", \"tiles\",\n    \"marking\", \"martial\", \"republics\", \"lasts\", \"reallife\", \"lilly\", \"meadow\", \"accuse\", \"dresser\", \"biting\", \"summoned\", \"cubic\", \"superstar\", \"elevation\", \"periodic\", \"durable\",\n    \"organism\", \"hilton\", \"rugged\", \"deeds\", \"gibbs\", \"apologies\", \"sunrise\", \"withdrew\", \"damon\", \"icons\", \"heartbeat\", \"filmmaker\", \"dividing\", \"vanity\", \"fleeing\", \"expresses\",\n    \"assign\", \"hairs\", \"examiner\", \"barber\", \"treaties\", \"mourning\", \"foreman\", \"pounded\", \"wrapping\", \"razor\", \"miners\", \"snapping\", \"stump\", \"augustine\", \"valve\", \"pumped\",\n    \"strap\", \"cellphone\", \"tails\", \"mediated\", \"buffer\", \"booming\", \"populated\", \"wholesale\", \"salvador\", \"detained\", \"rulers\", \"eliot\", \"coward\", \"arsenal\", \"colour\", \"portray\",\n    \"intends\", \"retailer\", \"renee\", \"underwent\", \"prophets\", \"undertake\", \"hopeless\", \"presumed\", \"willow\", \"slack\", \"induce\", \"brightest\", \"roller\", \"sparkling\", \"stella\", \"kurtz\",\n    \"prizes\", \"jessie\", \"captures\", \"capturing\", \"sneakers\", \"wakes\", \"dante\", \"discarded\", \"bookstore\", \"energetic\", \"addicted\", \"rocked\", \"prophecy\", \"banker\", \"ronnie\", \"currents\",\n    \"entertain\", \"tariffs\", \"clubhouse\", \"conrad\", \"bakery\", \"cognition\", \"excel\", \"headaches\", \"stroked\", \"yearly\", \"rattled\", \"compares\", \"chapman\", \"maurice\", \"crumpled\", \"ignores\",\n    \"swelling\", \"nokia\", \"vault\", \"resorts\", \"comey\", \"favour\", \"opted\", \"softball\", \"highend\", \"weiss\", \"takeover\", \"leaped\", \"choked\", \"crunch\", \"utilizing\", \"impacted\",\n    \"drying\", \"exams\", \"fairfax\", \"reservoir\", \"siege\", \"portal\", \"aquatic\", \"proposes\", \"roaring\", \"slippery\", \"traveler\", \"turnovers\", \"dementia\", \"snacks\", \"scottish\", \"contests\",\n    \"nolan\", \"canopy\", \"averages\", \"assemble\", \"harriet\", \"vargas\", \"reset\", \"prevail\", \"exempt\", \"jacques\", \"apartheid\", \"chandler\", \"legends\", \"weber\", \"relieve\", \"shuddered\",\n    \"contends\", \"vines\", \"goodman\", \"conductor\", \"chores\", \"evidenced\", \"sniffed\", \"chewed\", \"spilling\", \"uniquely\", \"embracing\", \"esther\", \"allergic\", \"pensions\", \"hauled\", \"sears\",\n    \"filmed\", \"newcomers\", \"remedies\", \"stain\", \"strand\", \"poultry\", \"reviewers\", \"steroids\", \"widened\", \"mandy\", \"logistic\", \"speeding\", \"shutting\", \"strapped\", \"anaheim\", \"shanghai\",\n    \"connects\", \"betrayal\", \"libby\", \"foley\", \"boycott\", \"maxwell\", \"brennan\", \"sailors\", \"liable\", \"cliffs\", \"melanie\", \"bella\", \"pretest\", \"defects\", \"thriving\", \"malaria\",\n    \"metabolic\", \"tester\", \"restoring\", \"oversees\", \"chaotic\", \"tighter\", \"mulder\", \"greatness\", \"seeming\", \"rubin\", \"doubted\", \"rivera\", \"reese\", \"arising\", \"benign\", \"debating\",\n    \"versatile\", \"haley\", \"stripes\", \"trailed\", \"peasant\", \"wouldbe\", \"immoral\", \"exploited\", \"smash\", \"cathy\", \"belts\", \"condemn\", \"exercised\", \"traps\", \"flowed\", \"graceful\",\n    \"stride\", \"vivian\", \"claudia\", \"levin\", \"treasures\", \"churchill\", \"emanuel\", \"dictate\", \"fallout\", \"devised\", \"faintly\", \"distorted\", \"emerson\", \"tents\", \"teasing\", \"isolates\",\n    \"needless\", \"stigma\", \"dragons\", \"aired\", \"planner\", \"dinosaurs\", \"congo\", \"clinging\", \"aerial\", \"suppress\", \"contested\", \"swirling\", \"bathing\", \"grind\", \"flicked\", \"malaysia\",\n    \"raining\", \"seventy\", \"puppet\", \"relaxing\", \"termed\", \"drawers\", \"savior\", \"tasty\", \"tasting\", \"seahawks\", \"fractures\", \"shovel\", \"oblivious\", \"violently\", \"subset\", \"richest\",\n    \"forge\", \"bonuses\", \"minded\", \"speculate\", \"hoover\", \"scans\", \"rushes\", \"newborn\", \"shelly\", \"peters\", \"shaved\", \"jules\", \"audition\", \"pulitzer\", \"trimmed\", \"baldwin\",\n    \"poisoning\", \"torch\", \"gardeners\", \"depicts\", \"stacks\", \"workouts\", \"cosmos\", \"lunden\", \"tesla\", \"lobster\", \"keller\", \"midway\", \"bounds\", \"wherein\", \"morton\", \"township\",\n    \"arrows\", \"pines\", \"zombies\", \"patiently\", \"doyle\", \"passions\", \"wardrobe\", \"lastly\", \"richie\", \"erupted\", \"consulate\", \"devote\", \"resembled\", \"knights\", \"sonic\", \"bidding\",\n    \"painfully\", \"eyelids\", \"ducked\", \"patriotic\", \"motivate\", \"elephants\", \"conquest\", \"thirsty\", \"claus\", \"barred\", \"eagerly\", \"labeling\", \"farewell\", \"parallels\", \"acoustic\", \"alarming\",\n    \"distract\", \"brendan\", \"pedro\", \"schumer\", \"illicit\", \"elena\", \"aspen\", \"recount\", \"payne\", \"dubious\", \"heavenly\", \"airplanes\", \"obliged\", \"enlisted\", \"madrid\", \"realise\",\n    \"abrams\", \"crafted\", \"contrasts\", \"armored\", \"secrecy\", \"leaps\", \"scandals\", \"tutoring\", \"glowed\", \"receipt\", \"pluralism\", \"spinal\", \"venice\", \"intellect\", \"token\", \"unveiled\",\n    \"probes\", \"forged\", \"chang\", \"growled\", \"schneider\", \"danish\", \"digest\", \"baskets\", \"chrome\", \"versa\", \"messiah\", \"outsider\", \"dolly\", \"scalp\", \"rubble\", \"brent\",\n    \"watergate\", \"moody\", \"sayin\", \"offender\", \"prohibit\", \"marxist\", \"episcopal\", \"layoffs\", \"financed\", \"warmed\", \"paige\", \"bingo\", \"ruler\", \"intricate\", \"conform\", \"guatemala\",\n    \"intensely\", \"energies\", \"roared\", \"locke\", \"wally\", \"spreads\", \"newport\", \"ethiopia\", \"styling\", \"shave\", \"cutter\", \"screws\", \"fooled\", \"sachs\", \"barton\", \"malone\",\n    \"breaths\", \"reacted\", \"disguise\", \"factions\", \"surgeons\", \"declares\", \"diplomat\", \"browned\", \"bricks\", \"benson\", \"appraisal\", \"preach\", \"nailed\", \"monty\", \"arrogance\", \"mutations\",\n    \"guinea\", \"resumed\", \"bleed\", \"butch\", \"shelby\", \"newark\", \"unlocked\", \"therapies\", \"switches\", \"leapt\", \"showers\", \"bedrooms\", \"verified\", \"seasoned\", \"clearance\", \"intrigued\",\n    \"levine\", \"sonya\", \"crushing\", \"moose\", \"dissolved\", \"meadows\", \"pauline\", \"shortstop\", \"geeks\", \"circling\", \"cellar\", \"persona\", \"clint\", \"hungary\", \"carey\", \"biases\",\n    \"allocated\", \"phony\", \"twenties\", \"removes\", \"buddhist\", \"wastes\", \"kabul\", \"pottery\", \"peasants\", \"charcoal\", \"cabinets\", \"famed\", \"arched\", \"trusting\", \"singled\", \"rejecting\",\n    \"deception\", \"yells\", \"predator\", \"shores\", \"nucleus\", \"fertile\", \"cramped\", \"panetta\", \"darcy\", \"rainy\", \"intuitive\", \"disagreed\", \"contender\", \"amazingly\", \"regrets\", \"rivalry\",\n    \"brink\", \"spear\", \"woodward\", \"magnet\", \"austria\", \"banning\", \"endurance\", \"licked\", \"volcano\", \"granting\", \"feather\", \"asians\", \"analogous\", \"clockwise\", \"frowning\", \"validated\",\n    \"sprang\", \"precinct\", \"knocks\", \"tailored\", \"sensing\", \"uprising\", \"strauss\", \"endowment\", \"recorder\", \"rotating\", \"pleading\", \"beatrice\", \"motioned\", \"garner\", \"maritime\", \"devils\",\n    \"winked\", \"stacy\", \"ninety\", \"sophia\", \"chilling\", \"bothers\", \"remedial\", \"halftime\", \"grunted\", \"spins\", \"roberta\", \"pundits\", \"tumbled\", \"celtics\", \"apostles\", \"cruising\",\n    \"retirees\", \"reversal\", \"bolts\", \"sailed\", \"scrub\", \"rodgers\", \"kristen\", \"dayton\", \"directs\", \"judaism\", \"sketches\", \"airborne\", \"villa\", \"schieffer\", \"jarriel\", \"whitman\",\n    \"cocacola\", \"forgiven\", \"bruno\", \"cubes\", \"grouped\", \"renal\", \"corey\", \"dominican\", \"discard\", \"shitty\", \"benedict\", \"prompting\", \"johnston\", \"atlas\", \"paralyzed\", \"condo\",\n    \"knots\", \"defence\", \"shortages\", \"blender\", \"baron\", \"councils\", \"unite\", \"caleb\", \"striped\", \"symposium\", \"psycho\", \"simulated\", \"intently\", \"corpus\", \"irritated\", \"sandals\",\n    \"pharmacy\", \"creditors\", \"coyote\", \"bounty\", \"goats\", \"issuing\", \"dinosaur\", \"barrett\", \"latent\", \"guild\", \"isolate\", \"routines\", \"poorest\", \"thumbs\", \"carlton\", \"prosecute\",\n    \"receptor\", \"patron\", \"graphs\", \"joked\", \"discounts\", \"flipping\", \"spurs\", \"sipping\", \"multitude\", \"colon\", \"hunted\", \"exceeds\", \"downturn\", \"steals\", \"youthful\", \"dividends\",\n    \"panicked\", \"brushes\", \"molecule\", \"smelling\", \"plight\", \"retreated\", \"walton\", \"applicant\", \"booze\", \"specimen\", \"plunge\", \"drainage\", \"hannity\", \"quebec\", \"bumped\", \"intern\",\n    \"grinding\", \"janice\", \"specially\", \"humane\", \"augusta\", \"maureen\", \"plato\", \"doctrines\", \"litter\", \"forecasts\", \"flatow\", \"randolph\", \"metallic\", \"marin\", \"compass\", \"avery\",\n    \"blurred\", \"pathogens\", \"surfing\", \"resonance\", \"narrowly\", \"delia\", \"scouting\", \"pinched\", \"depicting\", \"bumper\", \"narration\", \"matchup\", \"emory\", \"straps\", \"posterior\", \"frogs\",\n    \"outset\", \"granny\", \"copied\", \"emptied\", \"perkins\", \"disrupt\", \"ledge\", \"manuel\", \"squeezing\", \"alpine\", \"oilers\", \"hitters\", \"wales\", \"confuse\", \"stationed\", \"inmate\",\n    \"wolfe\", \"chilly\", \"doubling\", \"bourne\", \"morale\", \"amsterdam\", \"sherry\", \"entails\", \"chatter\", \"consulted\", \"bourgeois\", \"grande\", \"fetus\", \"shrine\", \"asphalt\", \"gazette\",\n    \"costing\", \"candidacy\", \"rainfall\", \"analytics\", \"voiced\", \"downside\", \"brussels\", \"brigade\", \"monuments\", \"shortz\", \"napoleon\", \"paved\", \"condoms\", \"pluto\", \"stunt\", \"carrot\",\n    \"shaky\", \"sleeps\", \"fences\", \"specter\", \"thriller\", \"pedal\", \"stuffing\", \"metrics\", \"analytic\", \"carmen\", \"squat\", \"reactors\", \"catalogue\", \"tractor\", \"deprived\", \"cronbach\",\n    \"chuckling\", \"olson\", \"ensures\", \"fletcher\", \"smoky\", \"flourish\", \"caves\", \"reasoned\", \"skeptics\", \"monsieur\", \"gripping\", \"sixties\", \"minors\", \"supplier\", \"intuition\", \"skipped\",\n    \"boiled\", \"disputed\", \"marlins\", \"worldview\", \"withdrawn\", \"steaming\", \"bedside\", \"spectator\", \"fabrics\", \"scripts\", \"letterman\", \"doris\", \"plump\", \"scrape\", \"mechanic\", \"oneyear\",\n    \"registry\", \"dishonest\", \"maneuver\", \"bunker\", \"attendees\", \"phillies\", \"commute\", \"outlines\", \"clasped\", \"floods\", \"volcanic\", \"rampant\", \"sinatra\", \"simplest\", \"benchmark\", \"gourmet\",\n    \"serena\", \"rafael\", \"rochester\", \"fostering\", \"winters\", \"escaping\", \"coercion\", \"props\", \"awakened\", \"crumbs\", \"gotcha\", \"stylish\", \"edison\", \"courtney\", \"libyan\", \"prepares\",\n    \"catalyst\", \"cartoons\", \"mantle\", \"empowered\", \"wheeler\", \"portugal\", \"finland\", \"daley\", \"hawkins\", \"detainees\", \"greasy\", \"tanner\", \"blindness\", \"posing\", \"vengeance\", \"brook\",\n    \"topping\", \"hugging\", \"scissors\", \"ballpark\", \"environ\", \"stint\", \"healed\", \"caucasian\", \"preceded\", \"guarded\", \"wartime\", \"glaring\", \"extremist\", \"reckon\", \"milosevic\", \"modernist\",\n    \"forbid\", \"pleasures\", \"stevie\", \"reviewer\", \"highland\", \"rhythms\", \"overlook\", \"plead\", \"stroll\", \"podium\", \"oysters\", \"balances\", \"billie\", \"twists\", \"lesions\", \"editions\",\n    \"highrisk\", \"plucked\", \"rallies\", \"applaud\", \"onetime\", \"unrest\", \"replicate\", \"wills\", \"extremes\", \"larvae\", \"fortunes\", \"joanna\", \"sasha\", \"radius\", \"staggered\", \"packet\",\n    \"morals\", \"lenny\", \"allergies\", \"humidity\", \"freaked\", \"cruelty\", \"clare\", \"marge\", \"pertinent\", \"grasped\", \"plaster\", \"clumsy\", \"festivals\", \"hammond\", \"cured\", \"tammy\",\n    \"runoff\", \"glossy\", \"stumbling\", \"marshal\", \"methane\", \"facto\", \"agendas\", \"allan\", \"imitation\", \"canoe\", \"sloan\", \"cruiser\", \"greeks\", \"coarse\", \"buzzing\", \"linkedin\",\n    \"platter\", \"broadband\", \"impending\", \"lowcost\", \"lingered\", \"forearm\", \"disgusted\", \"kneeling\", \"mythology\", \"mikey\", \"porcelain\", \"nuggets\", \"seminary\", \"slamming\", \"blasted\", \"suicidal\",\n    \"flats\", \"detector\", \"fellows\", \"crest\", \"clueless\", \"alarmed\", \"invent\", \"erase\", \"ripping\", \"oversee\", \"pours\", \"norwegian\", \"tattoos\", \"pudding\", \"echoing\", \"stressors\",\n    \"chilled\", \"implying\", \"cookbook\", \"spelled\", \"hateful\", \"sherr\", \"trembled\", \"borrowers\", \"cohesion\", \"buffet\", \"desserts\", \"haircut\", \"attained\", \"marketers\", \"pasture\", \"pasadena\",\n    \"lesbians\", \"disparity\", \"ottoman\", \"salem\", \"vacations\", \"jewel\", \"remnants\", \"flora\", \"dickens\", \"lineage\", \"traction\", \"trench\", \"modules\", \"mildly\", \"signaled\", \"recess\",\n    \"chatting\", \"gracious\", \"jeanne\", \"captive\", \"withstand\", \"lucinda\", \"paces\", \"richness\", \"fragment\", \"blaze\", \"flickered\", \"scarlet\", \"anglers\", \"browse\", \"fargo\", \"noses\",\n    \"woodlands\", \"creeping\", \"bruised\", \"playful\", \"childish\", \"choke\", \"danielle\", \"directive\", \"reside\", \"rails\", \"teased\", \"bedtime\", \"blooms\", \"seminars\", \"customary\", \"blackness\",\n    \"vicki\", \"scalia\", \"wraps\", \"gears\", \"scenic\", \"conceive\", \"battalion\", \"pancakes\", \"johnnie\", \"logically\", \"darren\", \"royals\", \"pacing\", \"scares\", \"checklist\", \"donkey\",\n    \"traitor\", \"hillside\", \"downright\", \"feinstein\", \"croatia\", \"staples\", \"spared\", \"taxed\", \"scenery\", \"hairy\", \"corridors\", \"listener\", \"shines\", \"poisoned\", \"marta\", \"skins\",\n    \"thornton\", \"announces\", \"gramm\", \"messaging\", \"rhythmic\", \"punches\", \"spears\", \"artery\", \"mallory\", \"crowley\", \"surfaced\", \"singh\", \"enclosed\", \"antitrust\", \"mailing\", \"monks\",\n    \"celestial\", \"screened\", \"decidedly\", \"darryl\", \"crystals\", \"hopped\", \"sidewalks\", \"halfhour\", \"tenant\", \"awkwardly\", \"equitable\", \"strides\", \"improper\", \"covert\", \"wisely\", \"notation\",\n    \"reacting\", \"gardener\", \"coughed\", \"roland\", \"aided\", \"clapped\", \"swaying\", \"scraped\", \"statistic\", \"smokers\", \"newsroom\", \"barked\", \"variant\", \"triggers\", \"highs\", \"placebo\",\n    \"slippers\", \"gerry\", \"blatant\", \"starfleet\", \"enact\", \"wouldnt\", \"blitzer\", \"stranded\", \"viability\", \"harvested\", \"borne\", \"andersen\", \"jamaica\", \"longevity\", \"warrants\", \"pinky\",\n    \"recalling\", \"enforcing\", \"bananas\", \"stalled\", \"mystical\", \"shrubs\", \"graphite\", \"preston\", \"spheres\", \"billboard\", \"disturb\", \"splitting\", \"sampled\", \"crumbling\", \"wellness\", \"serbian\",\n    \"browsing\", \"retaining\", \"afforded\", \"donovan\", \"amelia\", \"statues\", \"theodore\", \"squirrel\", \"fridays\", \"abigail\", \"outfits\", \"debra\", \"boone\", \"persisted\", \"routledge\", \"subgroups\",\n    \"roofs\", \"robes\", \"brows\", \"barcelona\", \"chops\", \"screwing\", \"forefront\", \"bengals\", \"casinos\", \"align\", \"thugs\", \"discern\", \"juicy\", \"overt\", \"presume\", \"disparate\",\n    \"ancestral\", \"openings\", \"decree\", \"leaking\", \"awakening\", \"titanic\", \"derrick\", \"brokerage\", \"dreadful\", \"acclaimed\", \"breadth\", \"thinner\", \"recurring\", \"exert\", \"mariners\", \"sneaking\",\n    \"bliss\", \"hikes\", \"reformers\", \"highlands\", \"dispatch\", \"pristine\", \"arbor\", \"dividend\", \"bauer\", \"rabbits\", \"dwell\", \"astronaut\", \"coherence\", \"barefoot\", \"haitian\", \"moriarty\",\n    \"circuits\", \"spices\", \"mccoy\", \"resolving\", \"olives\", \"staging\", \"mediocre\", \"cassie\", \"giggled\", \"conquer\", \"operative\", \"outdated\", \"salads\", \"boredom\", \"artie\", \"rattle\",\n    \"subsidy\", \"blossoms\", \"softer\", \"spells\", \"tumbling\", \"bracket\", \"ahmed\", \"appoint\", \"penguin\", \"shear\", \"lender\", \"marissa\", \"chalk\", \"sheldon\", \"goodnight\", \"tentative\",\n    \"thematic\", \"comprise\", \"mixer\", \"shuffled\", \"veggies\", \"legion\", \"clicks\", \"everett\", \"shiver\", \"gabrielle\", \"nietzsche\", \"watershed\", \"plagued\", \"concede\", \"reconcile\", \"deduction\",\n    \"cannabis\", \"striving\", \"flakes\", \"riverside\", \"locking\", \"fashioned\", \"mitigate\", \"bends\", \"arsenic\", \"enzymes\", \"clintons\", \"theresa\", \"growling\", \"vanguard\", \"herbal\", \"imperfect\",\n    \"warden\", \"emptiness\", \"arousal\", \"unfolding\", \"pleasing\", \"jeremiah\", \"launches\", \"magician\", \"stephens\", \"laborers\", \"curiously\", \"rejects\", \"intraday\", \"geared\", \"sprawled\", \"pence\",\n    \"sticker\", \"sarge\", \"divergent\", \"wrinkles\", \"tosses\", \"rattling\", \"tipping\", \"solemn\", \"activate\", \"menus\", \"purdue\", \"scraping\", \"stale\", \"roadside\", \"jointly\", \"acrylic\",\n    \"plumbing\", \"endlessly\", \"navajo\", \"ticking\", \"mates\", \"grouping\", \"innate\", \"buddha\", \"winced\", \"spaghetti\", \"cushion\", \"gallup\", \"chuckle\", \"opposes\", \"bruises\", \"broadwell\",\n    \"clemens\", \"fragrant\", \"expansive\", \"stabilize\", \"dashed\", \"yorkers\", \"policing\", \"whistling\", \"sorting\", \"royalty\", \"dataset\", \"muted\", \"lowell\", \"renew\", \"liner\", \"revive\",\n    \"hackers\", \"ached\", \"hating\", \"flicker\", \"meltdown\", \"choral\", \"notify\", \"sideline\", \"padded\", \"fiduciary\", \"billing\", \"conveyed\", \"norris\", \"gloom\", \"slots\", \"backstage\",\n    \"tighten\", \"scarcity\", \"reeves\", \"listings\", \"cheered\", \"sarajevo\", \"durham\", \"sized\", \"residency\", \"furiously\", \"balloons\", \"midtown\", \"naughty\", \"stainless\", \"pathology\", \"darted\",\n    \"possesses\", \"avenues\", \"serbia\", \"peyton\", \"hicks\", \"fearing\", \"lineman\", \"rutgers\", \"laptops\", \"summed\", \"cancelled\", \"crackdown\", \"smoothed\", \"watkins\", \"welch\", \"filtered\",\n    \"halted\", \"antibody\", \"moderator\", \"thinkin\", \"juices\", \"pierced\", \"penelope\", \"penetrate\", \"sanity\", \"chester\", \"hides\", \"fossils\", \"martian\", \"variants\", \"scraps\", \"breakup\",\n    \"ponytail\", \"amenities\", \"needy\", \"greenspan\", \"conceal\", \"anterior\", \"flattened\", \"diapers\", \"helena\", \"textile\", \"additions\", \"typed\", \"firefox\", \"bigotry\", \"recurrent\", \"deter\",\n    \"stature\", \"ribbons\", \"vinyl\", \"frazier\", \"bridget\", \"vapor\", \"conceded\", \"keeper\", \"reich\", \"virgil\", \"hurdles\", \"grasses\", \"wipes\", \"divisive\", \"reprinted\", \"therein\",\n    \"defect\", \"sirens\", \"whine\", \"coating\", \"casts\", \"stains\", \"enhances\", \"runaway\", \"lowers\", \"archie\", \"receptive\", \"dropout\", \"correlate\", \"gavin\", \"cocoa\", \"undergone\",\n    \"bolivia\", \"storing\", \"plateau\", \"heroine\", \"emergent\", \"citations\", \"almonds\", \"willingly\", \"outspoken\", \"distrust\", \"damascus\", \"undecided\", \"cosmetic\", \"provoked\", \"modernism\", \"exploding\",\n    \"aspiring\", \"analog\", \"refund\", \"rican\", \"hugely\", \"scifi\", \"cooled\", \"wheeled\", \"orchard\", \"sands\", \"excerpts\", \"galveston\", \"objected\", \"heres\", \"madeleine\", \"leaping\",\n    \"partition\", \"macro\", \"hayden\", \"chanting\", \"dynasty\", \"thursdays\", \"derives\", \"brutality\", \"racially\", \"vansant\", \"ariel\", \"gladly\", \"sinks\", \"kickoff\", \"plaque\", \"urges\",\n    \"anchored\", \"sidelines\", \"dialog\", \"edged\", \"hybrids\", \"longed\", \"endeavors\", \"detached\", \"aching\", \"moons\", \"pratt\", \"hardship\", \"betray\", \"tribunal\", \"enriched\", \"rents\",\n    \"optics\", \"straining\", \"airways\", \"staffing\", \"gravy\", \"copying\", \"nurturing\", \"portrayal\", \"startups\", \"saudis\", \"psyche\", \"spying\", \"brewers\", \"discovers\", \"foucault\", \"farmhouse\",\n    \"slated\", \"gould\", \"duluth\", \"header\", \"alleviate\", \"peeling\", \"bladder\", \"silva\", \"raids\", \"robotic\", \"tongues\", \"cantor\", \"makeshift\", \"unanimous\", \"allergy\", \"tease\",\n    \"whipping\", \"notch\", \"salty\", \"manually\", \"unjust\", \"populist\", \"expands\", \"stung\", \"repeats\", \"kitchens\", \"boarded\", \"bathtub\", \"merge\", \"spielberg\", \"bland\", \"evacuated\",\n    \"earns\", \"affinity\", \"separates\", \"weaken\", \"trayvon\", \"oversized\", \"regimen\", \"coated\", \"fragrance\", \"rapids\", \"canadians\", \"bangs\", \"upgrades\", \"thirties\", \"pastors\", \"invade\",\n    \"morocco\", \"mortar\", \"benches\", \"revisions\", \"pelley\", \"reyes\", \"trainers\", \"ascii\", \"stalking\", \"expired\", \"oneway\", \"swayed\", \"milan\", \"rotting\", \"abrupt\", \"embryos\",\n    \"suites\", \"freestyle\", \"ballroom\", \"plainly\", \"satire\", \"apparel\", \"banged\", \"aerobic\", \"goodwill\", \"ruining\", \"depiction\", \"howling\", \"pinterest\", \"spies\", \"barren\", \"algeria\",\n    \"racks\", \"slung\", \"warranted\", \"crank\", \"bethesda\", \"prompts\", \"archival\", \"impetus\", \"valleys\", \"nausea\", \"expelled\", \"texting\", \"hazel\", \"formative\", \"guitarist\", \"rotate\",\n    \"sadie\", \"cyclists\", \"soften\", \"crackers\", \"perch\", \"celia\", \"folklore\", \"descend\", \"grading\", \"convict\", \"flips\", \"logistics\", \"unlock\", \"tracing\", \"treason\", \"fluids\",\n    \"maura\", \"digits\", \"creed\", \"precincts\", \"famine\", \"algae\", \"hardened\", \"overthrow\", \"meats\", \"decoding\", \"santiago\", \"dispersed\", \"offend\", \"fronts\", \"haunting\", \"suffice\",\n    \"clipped\", \"packaged\", \"implant\", \"trustee\", \"scramble\", \"grins\", \"fisherman\", \"trusts\", \"bates\", \"stylist\", \"converts\", \"submarine\", \"detecting\", \"drafting\", \"ruthless\", \"valuation\",\n    \"careless\", \"aerospace\", \"fungi\", \"elicit\", \"mailed\", \"greenberg\", \"grieving\", \"rosen\", \"superhero\", \"francesca\", \"spurred\", \"transmit\", \"alexis\", \"quitting\", \"malls\", \"doubtful\",\n    \"dawkins\", \"warranty\", \"humorous\", \"amazement\", \"mateo\", \"residuals\", \"hadley\", \"markedly\", \"ponder\", \"selves\", \"doorbell\", \"stamped\", \"deposited\", \"expletive\", \"crammed\", \"cambodia\",\n    \"cursing\", \"windy\", \"quartet\", \"crate\", \"attracts\", \"evils\", \"mosquito\", \"shuts\", \"showdown\", \"nicer\", \"trolls\", \"rebuilt\", \"punitive\", \"counters\", \"expanse\", \"affirmed\",\n    \"lords\", \"altering\", \"ensembles\", \"robbins\", \"wreckage\", \"provoke\", \"remake\", \"punching\", \"glaze\", \"couldnt\", \"entirety\", \"coroner\", \"footing\", \"violates\", \"slump\", \"burnett\",\n    \"dismissal\", \"creations\", \"soaking\", \"subpoena\", \"mileage\", \"twotime\", \"fares\", \"bolted\", \"parasites\", \"anguish\", \"pausing\", \"diners\", \"crusade\", \"hacked\", \"watering\", \"hailed\",\n    \"necks\", \"spoil\", \"numbered\", \"aquinas\", \"delegate\", \"fascist\", \"colder\", \"federally\", \"manure\", \"lexington\", \"daschle\", \"cervical\", \"detectors\", \"vitality\", \"lever\", \"tangle\",\n    \"clout\", \"policemen\", \"satin\", \"shady\", \"caregiver\", \"mimic\", \"aquarium\", \"giggling\", \"calves\", \"thicker\", \"rallied\", \"leftover\", \"pressured\", \"sununu\", \"continual\", \"spacious\",\n    \"allowance\", \"unborn\", \"hideous\", \"referrals\", \"commuter\", \"muster\", \"gregg\", \"alphabet\", \"symbolism\", \"scaling\", \"imbalance\", \"cultivate\", \"skier\", \"reins\", \"flapping\", \"shale\",\n    \"earthly\", \"profanity\", \"linger\", \"seizure\", \"mormons\", \"dolan\", \"unfolded\", \"dealings\", \"diversion\", \"flowering\", \"corpses\", \"lyons\", \"cartel\", \"photoshop\", \"pineapple\", \"overheard\",\n    \"stillness\", \"coworkers\", \"wilder\", \"nicaragua\", \"cleansing\", \"resisting\", \"muttering\", \"sheen\", \"scooped\", \"auntie\", \"ransom\", \"artifact\", \"desks\", \"whichever\", \"vitro\", \"prevailed\",\n    \"lillian\", \"collects\", \"blueprint\", \"payoff\", \"mailbox\", \"detailing\", \"visionary\", \"cutler\", \"mocking\", \"bitterly\", \"ensuing\", \"scoffs\", \"textiles\", \"stringent\", \"disks\", \"handgun\",\n    \"anecdotal\", \"havoc\", \"embarrass\", \"sunscreen\", \"airlock\", \"paperback\", \"bearded\", \"reactive\", \"affidavit\", \"outskirts\", \"sighted\", \"eldest\", \"squinting\", \"forgiving\", \"ashcroft\", \"receipts\",\n    \"transient\", \"luxurious\", \"romania\", \"murdering\", \"starred\", \"erased\", \"perks\", \"fannie\", \"amish\", \"flagship\", \"sixteenth\", \"curling\", \"rigged\", \"validate\", \"liturgy\", \"taxing\",\n    \"kissinger\", \"powerless\", \"prudent\", \"upgraded\", \"backers\", \"shadowy\", \"evergreen\", \"motif\", \"pollen\", \"linkage\", \"fluttered\", \"carve\", \"skate\", \"hauling\", \"uttered\", \"thyroid\",\n    \"gaunt\", \"hemingway\", \"fifties\", \"repay\", \"stairwell\", \"staffer\", \"groan\", \"regiment\", \"familial\", \"nearer\", \"quirky\", \"gaping\", \"logged\", \"geometric\", \"lithuania\", \"revived\",\n    \"appalled\", \"xavier\", \"della\", \"printers\", \"riches\", \"homeowner\", \"spectral\", \"exceeding\", \"harmed\", \"blinding\", \"fallacy\", \"spiders\", \"hearty\", \"cohorts\", \"idiotic\", \"airway\",\n    \"carbo\", \"diagnoses\", \"slows\", \"didnt\", \"competed\", \"fleeting\", \"defiance\", \"browsers\", \"prohibits\", \"attrition\", \"powdered\", \"sighing\", \"rosenberg\", \"denounced\", \"tripped\", \"railway\",\n    \"faction\", \"murmur\", \"moderates\", \"stylistic\", \"subtest\", \"fished\", \"informing\", \"shampoo\", \"carbs\", \"murdoch\", \"dismay\", \"updating\", \"dilemmas\", \"cocktails\", \"collusion\", \"leonardo\",\n    \"formulate\", \"flirting\", \"retains\", \"repaired\", \"bathrooms\", \"flank\", \"golfers\", \"dictated\", \"donny\", \"rinsed\", \"scorer\", \"agitated\", \"tulsa\", \"starling\", \"pillars\", \"islamists\",\n    \"franken\", \"lawful\", \"landfill\", \"galactic\", \"secession\", \"mastered\", \"cerebral\", \"construed\", \"footprint\", \"likert\", \"timeless\", \"chung\", \"hesitant\", \"tuesdays\", \"delhi\", \"radiant\",\n    \"surreal\", \"clauses\", \"ponds\", \"stalks\", \"gamers\", \"reliably\", \"annabelle\", \"upstream\", \"exemplary\", \"conquered\", \"carts\", \"shoving\", \"thirst\", \"punishing\", \"motifs\", \"liars\",\n    \"brisk\", \"marketed\", \"severed\", \"furnished\", \"gendered\", \"escorted\", \"sinners\", \"formulas\", \"drills\", \"summarize\", \"estates\", \"affirm\", \"strolled\", \"opaque\", \"clocks\", \"pecans\",\n    \"phelps\", \"amidst\", \"strung\", \"guardians\", \"abdomen\", \"barnett\", \"devoid\", \"alamo\", \"abdullah\", \"humanist\", \"boast\", \"cutline\", \"arranging\", \"tutorial\", \"avengers\", \"chiles\",\n    \"bullied\", \"diaspora\", \"canton\", \"bathed\", \"morgue\", \"cuffs\", \"obscene\", \"puzzles\", \"scarred\", \"trickle\", \"groove\", \"deserving\", \"fungal\", \"pinpoint\", \"theyve\", \"petals\",\n    \"fined\", \"plurality\", \"critiques\", \"faults\", \"breeds\", \"buckle\", \"obligated\", \"spitting\", \"fostered\", \"ancestry\", \"extras\", \"pillar\", \"settles\", \"cercla\", \"weekdays\", \"hacker\",\n    \"platinum\", \"yielding\", \"gesturing\", \"fastball\", \"fixes\", \"malicious\", \"jerks\", \"bottled\", \"quotas\", \"quotation\", \"taiwanese\", \"mickelson\", \"nestled\", \"buzzed\", \"petitions\", \"asteroids\",\n    \"decency\", \"pronounce\", \"gradient\", \"pantry\", \"billed\", \"favre\", \"resides\", \"wording\", \"blossom\", \"decor\", \"nielsen\", \"milestone\", \"kendall\", \"flare\", \"beeping\", \"audible\",\n    \"mayer\", \"relish\", \"candid\", \"poignant\", \"narcotics\", \"loops\", \"unfairly\", \"edith\", \"dazed\", \"carville\", \"ritter\", \"seeded\", \"vocals\", \"canonical\", \"lurking\", \"blinded\",\n    \"syntax\", \"impulses\", \"harassed\", \"absentee\", \"sectarian\", \"vibration\", \"chimney\", \"brock\", \"helmets\", \"murderers\", \"renting\", \"colonists\", \"linkages\", \"coyotes\", \"thrilling\", \"blinds\",\n    \"glamour\", \"busch\", \"surrogate\", \"arteries\", \"auditors\", \"filings\", \"plugin\", \"lawns\", \"norcross\", \"tattered\", \"easing\", \"combo\", \"patronage\", \"wallpaper\", \"edible\", \"hammered\",\n    \"flared\", \"faulty\", \"dickinson\", \"clashes\", \"moaned\", \"residue\", \"eliza\", \"falsely\", \"depletion\", \"cinemark\", \"cecilia\", \"ryder\", \"haters\", \"littered\", \"grady\", \"visibly\",\n    \"suspend\", \"replaces\", \"tabloid\", \"obscured\", \"toddlers\", \"gallagher\", \"scowled\", \"sharpton\", \"occupying\", \"densities\", \"ancestor\", \"annoyance\", \"thatcher\", \"coarsely\", \"immensely\", \"spawned\",\n    \"coupling\", \"succeeds\", \"steaks\", \"scanner\", \"receptors\", \"renders\", \"jesuit\", \"twoway\", \"supremacy\", \"quantify\", \"ventured\", \"registers\", \"remorse\", \"vested\", \"debacle\", \"surgeries\",\n    \"shameful\", \"vicinity\", \"catering\", \"fixation\", \"snowy\", \"roasting\", \"schultz\", \"blindly\", \"offline\", \"widening\", \"morons\", \"graveyard\", \"fractured\", \"cling\", \"monstrous\", \"salvage\",\n    \"karzai\", \"saunders\", \"threeday\", \"synagogue\", \"smear\", \"withheld\", \"upwards\", \"motorists\", \"parody\", \"upstate\", \"fennel\", \"reformed\", \"yates\", \"avoids\", \"engages\", \"depart\",\n    \"preached\", \"magically\", \"sakes\", \"ballistic\", \"midday\", \"conducive\", \"fairway\", \"yearold\", \"footnotes\", \"sorted\", \"bandwidth\", \"twostory\", \"promoter\", \"swirled\", \"thump\", \"smartest\",\n    \"ambient\", \"boutique\", \"greetings\", \"whistled\", \"spans\", \"compose\", \"diaries\", \"treasurer\", \"divinity\", \"disrupted\", \"carly\", \"masked\", \"muller\", \"populace\", \"disagrees\", \"accessing\",\n    \"grips\", \"whack\", \"lashes\", \"resilient\", \"disguised\", \"barracks\", \"midterm\", \"hustle\", \"ortiz\", \"jamal\", \"stoop\", \"prized\", \"periphery\", \"endemic\", \"summon\", \"bachmann\",\n    \"informs\", \"marriott\", \"stickers\", \"liaison\", \"cheapest\", \"lunches\", \"brutally\", \"sterile\", \"drafts\", \"imagines\", \"alienated\", \"classify\", \"winfrey\", \"blames\", \"mixes\", \"dreaded\",\n    \"docks\", \"carcinoma\", \"whirled\", \"furnace\", \"heath\", \"pests\", \"ambush\", \"expressly\", \"grimaced\", \"rubric\", \"addictive\", \"bottoms\", \"regretted\", \"plugged\", \"menopause\", \"macarthur\",\n    \"lurched\", \"ethos\", \"denim\", \"herein\", \"comprises\", \"rustic\", \"keyword\", \"turbines\", \"interplay\", \"facade\", \"watery\", \"optimum\", \"paranoia\", \"scant\", \"reliever\", \"happiest\",\n    \"coupons\", \"shaving\", \"eyeing\", \"crippled\", \"phoned\", \"handmade\", \"piedmont\", \"plotting\", \"sails\", \"emerald\", \"streaks\", \"wiley\", \"attentive\", \"revise\", \"unarmed\", \"diarrhea\",\n    \"caste\", \"lighten\", \"buckets\", \"resent\", \"winery\", \"risking\", \"tally\", \"margarine\", \"hungarian\", \"italians\", \"riggs\", \"mashable\", \"amounted\", \"dryer\", \"unmarried\", \"predatory\",\n    \"trendy\", \"acquitted\", \"trillions\", \"deference\", \"hesitates\", \"hydraulic\", \"parishes\", \"glued\", \"darkest\", \"peaked\", \"ensign\", \"bitten\", \"makeover\", \"marrow\", \"regan\", \"renovated\",\n    \"albright\", \"dichotomy\", \"shooters\", \"paulo\", \"steamed\", \"briefed\", \"reassure\", \"recounts\", \"peril\", \"memoirs\", \"supplying\", \"pageant\", \"seasoning\", \"cloning\", \"coveted\", \"alarms\",\n    \"rooting\", \"jailed\", \"boise\", \"muffin\", \"plaid\", \"forestry\", \"poisonous\", \"comrades\", \"sprouts\", \"diffuse\", \"boulders\", \"leveled\", \"visas\", \"prolific\", \"anomaly\", \"workings\",\n    \"eclectic\", \"postponed\", \"blending\", \"hitchcock\", \"elegance\", \"starve\", \"entrees\", \"irons\", \"smeared\", \"hallmark\", \"bullies\", \"dismal\", \"twitched\", \"mindful\", \"dominates\", \"clerks\",\n    \"uniformed\", \"deferred\", \"hardcore\", \"unleashed\", \"limestone\", \"beamed\", \"floats\", \"fooling\", \"contours\", \"sponge\", \"englewood\", \"sandusky\", \"destroys\", \"pricey\", \"tedious\", \"countered\",\n    \"margot\", \"folders\", \"router\", \"ranchers\", \"shuffling\", \"paradigms\", \"scaring\", \"newcomer\", \"ensured\", \"primer\", \"explodes\", \"handicap\", \"truthful\", \"villains\", \"mobilize\", \"logos\",\n    \"seventies\", \"composers\", \"mapped\", \"treadmill\", \"tagged\", \"mayors\", \"shipment\", \"kristol\", \"strewn\", \"doctorate\", \"onehalf\", \"alameda\", \"standoff\", \"ellison\", \"bandar\", \"reminders\",\n    \"homestead\", \"tackling\", \"coverup\", \"bryce\", \"snuck\", \"concedes\", \"shoreline\", \"barring\", \"bosch\", \"whoohoo\", \"seekers\", \"highness\", \"regents\", \"reefs\", \"moines\", \"stiffened\",\n    \"uncles\", \"esteem\", \"goldstein\", \"slaps\", \"standings\", \"tugging\", \"grumbled\", \"rooftop\", \"hurrying\", \"seizures\", \"clustered\", \"ridges\", \"attackers\", \"heaved\", \"geese\", \"clutter\",\n    \"dearly\", \"encompass\", \"trumpet\", \"seminal\", \"symmetry\", \"prescribe\", \"taxonomy\", \"enactment\", \"hikers\", \"cherished\", \"realms\", \"ashore\", \"exhaled\", \"inherit\", \"broaden\", \"dipping\",\n    \"baths\", \"dictates\", \"hushed\", \"crumbled\", \"socket\", \"blasting\", \"lured\", \"commenter\", \"garland\", \"shanahan\", \"authorize\", \"aunts\", \"coloring\", \"cupboard\", \"steered\", \"liberated\",\n    \"columbine\", \"gameplay\", \"yearning\", \"lends\", \"commotion\", \"hinted\", \"dogma\", \"humankind\", \"sharia\", \"refine\", \"stockings\", \"plentiful\", \"defeating\", \"cabins\", \"bulky\", \"surged\",\n    \"clamped\", \"cosmetics\", \"grasping\", \"cinematic\", \"dashboard\", \"boosting\", \"plank\", \"distal\", \"farmland\", \"extremism\", \"portrays\", \"vouchers\", \"susteren\", \"overturn\", \"tweeting\", \"hires\",\n    \"gloved\", \"woodstock\", \"deported\", \"standup\", \"fidel\", \"intrusion\", \"benin\", \"specs\", \"override\", \"bashing\", \"macdonald\", \"accents\", \"gordy\", \"rodham\", \"immersed\", \"swelled\",\n    \"disposed\", \"landings\", \"cavaliers\", \"parting\", \"realist\", \"nests\", \"countdown\", \"upsetting\", \"sarcastic\", \"boosted\", \"greenwood\", \"rites\", \"marash\", \"schema\", \"corrosion\", \"battled\",\n    \"knowingly\", \"orphan\", \"antenna\", \"chord\", \"lyric\", \"sprayed\", \"strait\", \"loopholes\", \"helms\", \"bulging\", \"beetles\", \"malware\", \"favoring\", \"composing\", \"filtering\", \"unused\",\n    \"banquet\", \"guarding\", \"congrats\", \"wikileaks\", \"supernova\", \"tunisia\", \"unsalted\", \"sinus\", \"gleamed\", \"stocked\", \"dumpster\", \"avocado\", \"login\", \"laced\", \"abducted\", \"specials\",\n    \"extant\", \"puree\", \"whistles\", \"convoy\", \"sparse\", \"vividly\", \"standout\", \"offending\", \"cutoff\", \"postcard\", \"ebooks\", \"unnamed\", \"moods\", \"worldly\", \"coercive\", \"pandemic\",\n    \"illusions\", \"booths\", \"decorate\", \"alyssa\", \"seedlings\", \"knotted\", \"cushions\", \"webshots\", \"scaled\", \"flurry\", \"chant\", \"blurted\", \"divides\", \"gridlock\", \"profiling\", \"platoon\",\n    \"monarchy\", \"alleging\", \"publishes\", \"fastened\", \"literate\", \"tending\", \"shards\", \"preserves\", \"vitti\", \"cages\", \"clears\", \"audiotape\", \"streaked\", \"hissing\", \"atkins\", \"buddhism\",\n    \"playhouse\", \"caucuses\", \"schadler\", \"intercept\", \"shocks\", \"utopian\", \"squarely\", \"stevenson\", \"packets\", \"lesion\", \"replay\", \"squatted\", \"nuclei\", \"tibet\", \"depleted\", \"stalls\",\n    \"silas\", \"mindless\", \"grimly\", \"creeps\", \"substrate\", \"scarlett\", \"magnesium\", \"confines\", \"turks\", \"discs\", \"wichita\", \"arenas\", \"stairway\", \"embraces\", \"racket\", \"verbally\",\n    \"debuted\", \"hereafter\", \"nearing\", \"revolver\", \"hourly\", \"bouquet\", \"webbased\", \"teamed\", \"elijah\", \"spills\", \"flattered\", \"norah\", \"contended\", \"blushed\", \"brochure\", \"obsessive\",\n    \"peeked\", \"pursed\", \"extrinsic\", \"frontal\", \"tanzania\", \"topical\", \"felicity\", \"appalling\", \"amend\", \"digestive\", \"elian\", \"dialed\", \"realised\", \"watchdog\", \"jongun\", \"airing\",\n    \"parkinson\", \"gracie\", \"priori\", \"defiant\", \"grassy\", \"captivity\", \"headset\", \"landmarks\", \"etched\", \"collapses\", \"harding\", \"govt\", \"favorably\", \"downloads\", \"coupon\", \"mcgee\",\n    \"maher\", \"regained\", \"lockheed\", \"ratified\", \"tandem\", \"constance\", \"giveaway\", \"diagrams\", \"safeguard\", \"glimpsed\", \"informant\", \"turkeys\", \"isabella\", \"attends\", \"racists\", \"weakly\",\n    \"hamstring\", \"polity\", \"fades\", \"selfhelp\", \"grossman\", \"bazaar\", \"grownup\", \"wretched\", \"coaster\", \"hearth\", \"soles\", \"shaded\", \"stinking\", \"suarez\", \"specifies\", \"spruce\",\n    \"whopping\", \"queries\", \"classy\", \"awaits\", \"fruitful\", \"cranberry\", \"watchers\", \"throbbing\", \"absently\", \"parchment\", \"encoding\", \"harbaugh\", \"complains\", \"luncheon\", \"churning\", \"recounted\",\n    \"angled\", \"workin\", \"wrongly\", \"parity\", \"leopold\", \"retrieval\", \"hummed\", \"conducts\", \"genus\", \"drags\", \"cruises\", \"terminate\", \"tragedies\", \"hubbard\", \"handcuffs\", \"simulate\",\n    \"shimano\", \"revisit\", \"proximal\", \"freezes\", \"humid\", \"twohour\", \"waterfall\", \"autistic\", \"stiffly\", \"bounded\", \"photons\", \"submerged\", \"decks\", \"ridicule\", \"lighted\", \"absorbing\",\n    \"angola\", \"oxide\", \"climates\", \"amplified\", \"appellate\", \"sprigs\", \"gritty\", \"booking\", \"splashing\", \"reunited\", \"facets\", \"silvery\", \"forties\", \"survives\", \"flaming\", \"corrupted\",\n    \"clove\", \"requisite\", \"bigtime\", \"turquoise\", \"fernandez\", \"throats\", \"rumbling\", \"faculties\", \"glossary\", \"boils\", \"emitted\", \"persists\", \"manmade\", \"diverted\", \"flair\", \"gergen\",\n    \"recourse\", \"lofty\", \"beckel\", \"serene\", \"doorstep\", \"timetable\", \"throttle\", \"gloomy\", \"pairing\", \"deadlines\", \"mater\", \"rulings\", \"walnuts\", \"starks\", \"slowdown\", \"briskly\",\n    \"auditor\", \"overdue\", \"pursuits\", \"likeness\", \"safest\", \"fastfood\", \"shrill\", \"blackened\", \"sweeps\", \"mounds\", \"sinai\", \"drifts\", \"greer\", \"cautions\", \"landslide\", \"cords\",\n    \"despise\", \"chloride\", \"textures\", \"crates\", \"timed\", \"parasite\", \"stemming\", \"pigment\", \"proclaim\", \"brody\", \"nicklaus\", \"voldemort\", \"folly\", \"guideline\", \"cabrera\", \"maize\",\n    \"tornadoes\", \"quivering\", \"stabbing\", \"discreet\", \"evokes\", \"staten\", \"gentiles\", \"calmed\", \"mediator\", \"garments\", \"dubai\", \"glaciers\", \"explorers\", \"pigeon\", \"wrecked\", \"strangled\",\n    \"autograph\", \"emmett\", \"turbulent\", \"transcend\", \"rained\", \"probing\", \"hereby\", \"greenwich\", \"escapes\", \"silky\", \"laughable\", \"weakening\", \"lagattuta\", \"bearings\", \"hubby\", \"cores\",\n    \"hanks\", \"rumored\", \"growl\", \"prank\", \"argentine\", \"thomson\", \"stitches\", \"cracker\", \"hardwood\", \"surrounds\", \"legit\", \"rocker\", \"thier\", \"priceless\", \"skeletal\", \"sprinkled\",\n    \"scatter\", \"nesting\", \"trenches\", \"mayoral\", \"bedding\", \"pennies\", \"squirrels\", \"uniformly\", \"wagons\", \"notebooks\", \"layered\", \"retina\", \"chipped\", \"paralysis\", \"herds\", \"scrubbed\",\n    \"coolest\", \"radios\", \"clarified\", \"blends\", \"tripled\", \"sanction\", \"revered\", \"mediating\", \"elias\", \"overboard\", \"shoves\", \"trays\", \"boasted\", \"complexes\", \"eyepiece\", \"cessation\",\n    \"coined\", \"euros\", \"psychotic\", \"mediate\", \"spectra\", \"perverse\", \"flannel\", \"cubans\", \"beethoven\", \"flinched\", \"interiors\", \"draining\", \"amplitude\", \"suspense\", \"pigeons\", \"recap\",\n    \"diabetic\", \"ketchup\", \"excused\", \"swallows\", \"diagnose\", \"sheltered\", \"trotted\", \"leftwing\", \"deterrent\", \"occupies\", \"arresting\", \"havent\", \"quiones\", \"cassandra\", \"preface\", \"murderous\",\n    \"badges\", \"hearst\", \"divert\", \"gandhi\", \"reacts\", \"dynamite\", \"awaited\", \"precursor\", \"imposes\", \"cherish\", \"doctrinal\", \"emeritus\", \"beckett\", \"antiquity\", \"flute\", \"nepal\",\n    \"grotesque\", \"bankr\", \"angered\", \"rousseau\", \"leone\", \"relocated\", \"civility\", \"moneyline\", \"stooped\", \"tailor\", \"sluggish\", \"pipelines\", \"lessen\", \"chiefly\", \"alexandra\", \"immersion\",\n    \"embarked\", \"closeness\", \"washes\", \"nominate\", \"sincerity\", \"blockade\", \"referee\", \"festive\", \"surpassed\", \"frigid\", \"risked\", \"patting\", \"primacy\", \"replica\", \"linemen\", \"hopping\",\n    \"neutron\", \"combed\", \"twitch\", \"outfield\", \"schroeder\", \"silverman\", \"smacked\", \"shepard\", \"disliked\", \"seams\", \"finalists\", \"halved\", \"stormed\", \"donating\", \"fixtures\", \"catalogs\",\n    \"bayou\", \"simplify\", \"renamed\", \"runnerup\", \"patsy\", \"blackmail\", \"clooney\", \"quieter\", \"mosques\", \"henri\", \"drilled\", \"alvarez\", \"metadata\", \"dearest\", \"executor\", \"flawless\",\n    \"plotted\", \"patrols\", \"discredit\", \"devise\", \"casualty\", \"raisins\", \"semifinal\", \"anchors\", \"rubbish\", \"elevators\", \"spirited\", \"joyful\", \"quaint\", \"bowen\", \"ferris\", \"colombian\",\n    \"regulars\", \"interns\", \"puppets\", \"lancaster\", \"beaming\", \"knitting\", \"shriek\", \"convened\", \"rustling\", \"grenade\", \"redundant\", \"leftovers\", \"climatic\", \"heaving\", \"shipments\", \"deceptive\",\n    \"tenets\", \"payton\", \"upgrading\", \"rusted\", \"loadings\", \"sweaters\", \"wiser\", \"cones\", \"vocation\", \"eminent\", \"whiteness\", \"commuters\", \"propelled\", \"charred\", \"concerted\", \"tides\",\n    \"opioid\", \"baltic\", \"ascent\", \"blasts\", \"reverence\", \"truce\", \"puffed\", \"majestic\", \"thinker\", \"actresses\", \"barak\", \"rookies\", \"stalked\", \"forks\", \"cautioned\", \"gleam\",\n    \"prognosis\", \"makin\", \"bundled\", \"timer\", \"fixture\", \"vineyards\", \"waged\", \"vents\", \"psych\", \"elicited\", \"gentry\", \"janie\", \"equate\", \"tremble\", \"restart\", \"aristide\",\n    \"chopping\", \"fledgling\", \"syrians\", \"shutters\", \"tread\", \"mondays\", \"bristol\", \"batters\", \"mocked\", \"lifeless\", \"quarry\", \"hitch\", \"garnered\", \"clarice\", \"goodwin\", \"bodyguard\",\n    \"spree\", \"thinning\", \"eruption\", \"forceful\", \"manuals\", \"railroads\", \"moran\", \"boldly\", \"vance\", \"baffled\", \"scratches\", \"reopened\", \"hunch\", \"causality\", \"buckhead\", \"erroneous\",\n    \"workload\", \"ushered\", \"calculus\", \"despised\", \"preclude\", \"handheld\", \"dominic\", \"reeling\", \"nicholson\", \"conserve\", \"airtight\", \"accessory\", \"staining\", \"bustling\", \"stressing\", \"rosenthal\",\n    \"malignant\", \"dangled\", \"emulate\", \"authored\", \"clapping\", \"suitcases\", \"cluttered\", \"squadron\", \"tripp\", \"overdose\", \"recycle\", \"spraying\", \"aspire\", \"reforming\", \"banners\", \"gland\",\n    \"goauld\", \"glide\", \"vowel\", \"widen\", \"attacker\", \"citizenry\", \"plush\", \"puzzling\", \"freeing\", \"giles\", \"modifying\", \"embryonic\", \"harmon\", \"frida\", \"frosting\", \"attire\",\n    \"clumps\", \"walkway\", \"silenced\", \"quota\", \"mclean\", \"shrieked\", \"warsaw\", \"mythical\", \"prophetic\", \"resonate\", \"pitiful\", \"alleges\", \"percy\", \"casimir\", \"reassured\", \"denotes\",\n    \"liquidity\", \"lasers\", \"heirs\", \"grayson\", \"kodak\", \"reelected\", \"illegals\", \"perdue\", \"refining\", \"wilkinson\", \"heartland\", \"sauces\", \"tenor\", \"shortcut\", \"pleas\", \"valves\",\n    \"cortical\", \"fluent\", \"intrusive\", \"qualifies\", \"praising\", \"taxable\", \"finer\", \"gathers\", \"hallways\", \"vigil\", \"exposes\", \"thrift\", \"steinberg\", \"glazed\", \"embryo\", \"evoked\",\n    \"spaceship\", \"compel\", \"vanishing\", \"bumping\", \"barge\", \"agrarian\", \"thanking\", \"chinatown\", \"visualize\", \"annapolis\", \"twoday\", \"wooded\", \"emailed\", \"circa\", \"greenland\", \"rallying\",\n    \"ramon\", \"norma\", \"venerable\", \"anecdotes\", \"inject\", \"walkers\", \"accords\", \"optimize\", \"tracts\", \"newfound\", \"saloon\", \"audubon\", \"devout\", \"axial\", \"barris\", \"antidote\",\n    \"flutter\", \"vigor\", \"crave\", \"swann\", \"canyons\", \"additive\", \"signifies\", \"sensual\", \"gunshots\", \"squid\", \"cummings\", \"concise\", \"residing\", \"bannon\", \"polarized\", \"baggy\",\n    \"marches\", \"outpost\", \"toured\", \"deepened\", \"overgrown\", \"rapists\", \"medically\", \"exploits\", \"enraged\", \"boyle\", \"defective\", \"manafort\", \"cardio\", \"juries\", \"errands\", \"arches\",\n    \"franz\", \"mustang\", \"maternity\", \"macmillan\", \"steroid\", \"abdul\", \"crows\", \"negatives\", \"gorge\", \"resumes\", \"semantics\", \"keynote\", \"colbert\", \"trimmings\", \"downed\", \"elevate\",\n    \"manila\", \"verbs\", \"paypal\", \"pencils\", \"bruise\", \"bundles\", \"beets\", \"prosper\", \"mused\", \"leafy\", \"poetics\", \"delaying\", \"junkie\", \"analyzes\", \"slicing\", \"calhoun\",\n    \"bobbed\", \"feelin\", \"warmly\", \"strife\", \"showered\", \"heartfelt\", \"abduction\", \"envelopes\", \"sculptor\", \"gorilla\", \"tealc\", \"colby\", \"bosom\", \"skipper\", \"harms\", \"creaking\",\n    \"tellin\", \"exhales\", \"rabin\", \"embodies\", \"protector\", \"curses\", \"sweetly\", \"cleaners\", \"curving\", \"coincide\", \"spawning\", \"couture\", \"executing\", \"superiors\", \"gruesome\", \"arcade\",\n    \"endowed\", \"pooled\", \"mckinney\", \"rockville\", \"anime\", \"ebola\", \"budding\", \"starved\", \"offscreen\", \"relegated\", \"anthology\", \"soups\", \"stomped\", \"goodies\", \"harden\", \"nagging\",\n    \"undone\", \"bubbling\", \"stricken\", \"purposely\", \"ticks\", \"starship\", \"raspberry\", \"cersei\", \"applauded\", \"contour\", \"spooky\", \"namespace\", \"dramas\", \"tibetan\", \"wideeyed\", \"elective\",\n    \"vigilant\", \"sheikh\", \"primal\", \"virtuous\", \"millennia\", \"cradled\", \"camden\", \"stalk\", \"idealism\", \"charms\", \"twitching\", \"cashier\", \"hunts\", \"parachute\", \"scooter\", \"hurries\",\n    \"menacing\", \"callers\", \"classmate\", \"volcanoes\", \"fling\", \"cultured\", \"canals\", \"lenin\", \"pulpit\", \"spaced\", \"splits\", \"outweigh\", \"forsyth\", \"dripped\", \"teamwork\", \"solemnly\",\n    \"squared\", \"doesn\", \"tricked\", \"knack\", \"caveat\", \"slogans\", \"pitted\", \"treatise\", \"afterlife\", \"upheaval\", \"olsen\", \"reuben\", \"freakin\", \"wicker\", \"passer\", \"tactile\",\n    \"shalt\", \"townsend\", \"baldemar\", \"matrices\", \"partying\", \"jacobson\", \"pulses\", \"monsanto\", \"gifford\", \"untreated\", \"overtly\", \"tattooed\", \"whitaker\", \"shred\", \"creaked\", \"tallest\",\n    \"fraught\", \"ashtray\", \"bowel\", \"exited\", \"pathogen\", \"genomic\", \"drapes\", \"stripping\", \"furry\", \"cooke\", \"shedding\", \"nicolas\", \"osborne\", \"cohesive\", \"saliva\", \"crafting\",\n    \"massively\", \"arrivals\", \"labored\", \"deepening\", \"sunnis\", \"sharper\", \"waiters\", \"molded\", \"anomalies\", \"forearms\", \"ezekiel\", \"excitedly\", \"macon\", \"cartilage\", \"lecturer\", \"dives\",\n    \"petite\", \"residues\", \"designate\", \"clerical\", \"putnam\", \"pulsing\", \"endorsing\", \"kanye\", \"secede\", \"wrestle\", \"elitist\", \"handler\", \"whores\", \"skeletons\", \"gadget\", \"calming\",\n    \"impartial\", \"fracking\", \"robotics\", \"deficient\", \"stadiums\", \"redesign\", \"macho\", \"downfall\", \"comer\", \"intercom\", \"venera\", \"fencing\", \"hammering\", \"foothills\", \"wormhole\", \"takin\",\n    \"rumbled\", \"momentary\", \"mounts\", \"roommates\", \"withhold\", \"sediments\", \"weasel\", \"politico\", \"kennesaw\", \"departing\", \"enlarge\", \"megyn\", \"mourn\", \"clipboard\", \"medalist\", \"retro\",\n    \"savory\", \"quaid\", \"repent\", \"carney\", \"papal\", \"unheard\", \"blazer\", \"jerking\", \"creasy\", \"kingdoms\", \"instruct\", \"coiled\", \"hotline\", \"signify\", \"lynne\", \"theorem\",\n    \"genotype\", \"tessa\", \"mckenzie\", \"nicknamed\", \"surveying\", \"lange\", \"westbrook\", \"queue\", \"germs\", \"georges\", \"grossly\", \"whips\", \"cheeses\", \"taipei\", \"bribery\", \"basal\",\n    \"wrigley\", \"conveys\", \"casserole\", \"coughs\", \"bentley\", \"darting\", \"carton\", \"brewery\", \"bartlett\", \"lowlevel\", \"eleventh\", \"forensics\", \"handshake\", \"prudence\", \"spanning\", \"musharraf\",\n    \"revolving\", \"genders\", \"cartridge\", \"funerals\", \"pollock\", \"mckay\", \"jobless\", \"oblivion\", \"napkins\", \"degraded\", \"avail\", \"coastline\", \"chilean\", \"ramos\", \"liberia\", \"flashy\",\n    \"restrain\", \"codified\", \"polluted\", \"dormant\", \"shrieking\", \"salted\", \"clothed\", \"heirloom\", \"thumping\", \"marinade\", \"tenet\", \"beltway\", \"jails\", \"dignified\", \"roseanne\", \"humanism\",\n    \"glimpses\", \"lanka\", \"sacrament\", \"spiked\", \"ardent\", \"intro\", \"frowns\", \"erickson\", \"islanders\", \"breakout\", \"tariff\", \"campers\", \"reboot\", \"swanson\", \"chigurh\", \"daria\",\n    \"crackling\", \"customize\", \"promoters\", \"impede\", \"bethlehem\", \"swimmer\", \"brunswick\", \"sheffield\", \"leftists\", \"attest\", \"mackenzie\", \"roars\", \"snarled\", \"darkening\", \"lipid\", \"defends\",\n    \"josephine\", \"stinging\", \"auctions\", \"undue\", \"leach\", \"regal\", \"resultant\", \"frontiers\", \"jaguar\", \"spoiler\", \"coincided\", \"paterno\", \"medicinal\", \"secretive\", \"mamma\", \"doubtless\",\n    \"clinician\", \"energized\", \"fangs\", \"buyout\", \"weekday\", \"playbook\", \"caramel\", \"lapse\", \"whitfield\", \"spotting\", \"carnage\", \"realty\", \"mahmoud\", \"angst\", \"steiner\", \"funnel\",\n    \"polled\", \"purported\", \"diagonal\", \"plummeted\", \"hardships\", \"shortfall\", \"kerrey\", \"flake\", \"lawmaker\", \"subsidize\", \"sterritt\", \"funniest\", \"nacional\", \"brookings\", \"lando\", \"pollster\",\n    \"outcry\", \"senseless\", \"pedals\", \"feral\", \"regulates\", \"spitzer\", \"repealed\", \"lanier\", \"blankly\", \"lancet\", \"melbourne\", \"scents\", \"spacex\", \"dispersal\", \"seamless\", \"wearily\",\n    \"fluke\", \"deceived\", \"squeezes\", \"mutants\", \"howled\", \"stony\", \"tenuous\", \"richly\", \"weakest\", \"cater\", \"trance\", \"marxism\", \"recite\", \"undercut\", \"craters\", \"finnish\",\n    \"guillen\", \"inflict\", \"stockholm\", \"clubhead\", \"cavern\", \"wasteful\", \"melodies\", \"scrimmage\", \"brexit\", \"thirds\", \"shortened\", \"stemmed\", \"convent\", \"legalized\", \"busiest\", \"peruvian\",\n    \"fasting\", \"vacancy\", \"audits\", \"occupants\", \"penchant\", \"royalties\", \"cosmology\", \"hurriedly\", \"mcmahon\", \"reflex\", \"faiths\", \"stumbles\", \"sweetest\", \"endings\", \"cupcakes\", \"plugs\",\n    \"raping\", \"sofia\", \"chords\", \"waning\", \"dartmouth\", \"fallujah\", \"repressed\", \"glint\", \"trophies\", \"buttocks\", \"meyers\", \"spawn\", \"consoles\", \"bathrobe\", \"sprawl\", \"groupings\",\n    \"intrigue\", \"haynes\", \"contra\", \"twelfth\", \"dispose\", \"deceive\", \"averted\", \"afflicted\", \"composure\", \"praises\", \"causation\", \"salazar\", \"haste\", \"boardwalk\", \"adamant\", \"schuster\",\n    \"urgently\", \"corbett\", \"bluetooth\", \"ruben\", \"batted\", \"chore\", \"grounding\", \"narrower\", \"harlan\", \"kneel\", \"exported\", \"vending\", \"embassies\", \"saddened\", \"pained\", \"binge\",\n    \"equator\", \"minimized\", \"polio\", \"patented\", \"jolie\", \"bandage\", \"burying\", \"hover\", \"shutter\", \"exporting\", \"gospels\", \"chained\", \"gilded\", \"unfolds\", \"gazes\", \"cologne\",\n    \"begala\", \"excesses\", \"staffs\", \"escalated\", \"repairing\", \"inhale\", \"blurry\", \"putative\", \"fared\", \"fueling\", \"moans\", \"crossover\", \"skyfall\", \"clientele\", \"piety\", \"doughnuts\",\n    \"compute\", \"aires\", \"courtship\", \"limousine\", \"lonergan\", \"refute\", \"pretense\", \"neared\", \"lures\", \"ankara\", \"trudy\", \"captains\", \"chevron\", \"pastels\", \"sunken\", \"sixmonth\",\n    \"budge\", \"approving\", \"earnhardt\", \"occupancy\", \"selig\", \"justifies\", \"gowns\", \"groves\", \"lowkey\", \"barbed\", \"blooming\", \"mavericks\", \"dreamy\", \"reddit\", \"beginner\", \"restroom\",\n    \"stagnant\", \"plastered\", \"molina\", \"electing\", \"collagen\", \"parcells\", \"scowl\", \"fredricka\", \"algren\", \"amanpour\", \"shallots\", \"unreal\", \"snape\", \"stricter\", \"drenched\", \"oversaw\",\n    \"unifying\", \"cowardly\", \"shrek\", \"morsi\", \"strolling\", \"hypocrite\", \"wetland\", \"chechnya\", \"timid\", \"cartels\", \"hiked\", \"martyr\", \"plunging\", \"narrowing\", \"anchorage\", \"harassing\",\n    \"rembrandt\", \"overload\", \"tworun\", \"smallpox\", \"cesar\", \"bailouts\", \"celsius\", \"crippling\", \"douglass\", \"flask\", \"wakeup\", \"ticked\", \"faraway\", \"condensed\", \"oceanic\", \"winged\",\n    \"schiff\", \"lunchtime\", \"setbacks\", \"whirling\", \"chemist\", \"climbers\", \"rumpled\", \"bluegrass\", \"nathaniel\", \"dialect\", \"iphones\", \"uploaded\", \"chests\", \"surging\", \"melts\", \"obeyed\",\n    \"croatian\", \"nicest\", \"maneuvers\", \"penned\", \"toppled\", \"tripping\", \"planks\", \"allocate\", \"bloodshed\", \"follower\", \"kayak\", \"antics\", \"guthrie\", \"youngster\", \"subtests\", \"flashback\",\n    \"geoff\", \"reversing\", \"hooded\", \"shadowed\", \"rounding\", \"minimally\", \"quilts\", \"sporadic\", \"postcards\", \"everytime\", \"woken\", \"extracts\", \"postpone\", \"nurtured\", \"implanted\", \"disable\",\n    \"comforted\", \"deviant\", \"chatted\", \"monet\", \"confided\", \"pledges\", \"reddish\", \"tensed\", \"anglo\", \"comforts\", \"edinburgh\", \"diluted\", \"tweed\", \"visceral\", \"stubble\", \"recited\",\n    \"drugstore\", \"reared\", \"tabloids\", \"cures\", \"labyrinth\", \"fremont\", \"carcass\", \"troopers\", \"flimsy\", \"postings\", \"recognise\", \"memos\", \"trainees\", \"automaker\", \"dignan\", \"landry\",\n    \"practicum\", \"spores\", \"subsided\", \"isabelle\", \"bailed\", \"warped\", \"cheesy\", \"glands\", \"eyelashes\", \"schindler\", \"crispy\", \"achieves\", \"outlining\", \"datasets\", \"aversion\", \"miner\",\n    \"steed\", \"naples\", \"steward\", \"statesman\", \"grilling\", \"centrist\", \"oversize\", \"cadets\", \"magnolia\", \"crumble\", \"wont\", \"busting\", \"dials\", \"dreamt\", \"annals\", \"hampered\",\n    \"forgets\", \"couric\", \"smoother\", \"dorsey\", \"aback\", \"presided\", \"hurtful\", \"overwhelm\", \"swearing\", \"bellaire\", \"eyeballs\", \"accession\", \"scribbled\", \"splendor\", \"troupe\", \"galley\",\n    \"refresh\", \"nascent\", \"liquids\", \"runnin\", \"cliche\", \"smoothing\", \"hague\", \"perfected\", \"outages\", \"sheds\", \"starboard\", \"tripod\", \"sermons\", \"dialectic\", \"growls\", \"idealized\",\n    \"scorn\", \"kneels\", \"pharma\", \"neary\", \"mccormick\", \"gutierrez\", \"imprint\", \"repayment\", \"auditing\", \"flatly\", \"referees\", \"mixtures\", \"pitfalls\", \"royce\", \"juveniles\", \"lilies\",\n    \"memorized\", \"collier\", \"spacing\", \"swath\", \"katya\", \"georgian\", \"lunged\", \"panelist\", \"chaplain\", \"mobilized\", \"patriarch\", \"congruent\", \"fibrosis\", \"dodging\", \"murmurs\", \"bellevue\",\n    \"wager\", \"altman\", \"highrise\", \"blinks\", \"awaken\", \"bashar\", \"genotypes\", \"rentals\", \"leopard\", \"accorded\", \"foreigner\", \"feldman\", \"woolf\", \"positives\", \"tumblr\", \"ripples\",\n    \"kingston\", \"jerseys\", \"maximal\", \"exerted\", \"conserved\", \"scarves\", \"curing\", \"denis\", \"relic\", \"patterned\", \"tinted\", \"monologue\", \"lament\", \"peeking\", \"perplexed\", \"wilde\",\n    \"securely\", \"mascara\", \"fifteenth\", \"louisa\", \"conferred\", \"commits\", \"beckoned\", \"bandura\", \"appliance\", \"allure\", \"unravel\", \"overcoat\", \"optimized\", \"saviour\", \"undertook\", \"molested\",\n    \"chemo\", \"shrunk\", \"traverse\", \"ipads\", \"twoweek\", \"lamented\", \"brooding\", \"breathes\", \"bulgaria\", \"bungalow\", \"macbook\", \"gliding\", \"regis\", \"removable\", \"exhale\", \"airwaves\",\n    \"anglican\", \"rendition\", \"chaired\", \"accuses\", \"unload\", \"colours\", \"affirms\", \"wacky\", \"swimmers\", \"underdog\", \"moderated\", \"viola\", \"clones\", \"intending\", \"schiller\", \"tonic\",\n    \"pinot\", \"grooming\", \"reckoning\", \"pondered\", \"lumps\", \"absurdity\", \"antiwar\", \"allegheny\", \"fortified\", \"rangel\", \"cranky\", \"plume\", \"digestion\", \"repertory\", \"ballard\", \"davenport\",\n    \"puberty\", \"bonded\", \"pyramids\", \"comedians\", \"serenity\", \"converse\", \"flavored\", \"ignited\", \"georgians\", \"speck\", \"ascribed\", \"pastures\", \"chives\", \"theorist\", \"sculpted\", \"sansa\",\n    \"mcbride\", \"sagged\", \"receding\", \"densely\", \"batches\", \"valet\", \"angelina\", \"crowe\", \"fliers\", \"earners\", \"armey\", \"glimmer\", \"heady\", \"medley\", \"landlords\", \"dumps\",\n    \"gillespie\", \"mosul\", \"chassis\", \"framers\", \"consonant\", \"madeline\", \"deluxe\", \"daryl\", \"markings\", \"odors\", \"aubrey\", \"piers\", \"fonts\", \"amassed\", \"doorknob\", \"twigs\",\n    \"filth\", \"underside\", \"booklet\", \"abiding\", \"encrypted\", \"accuser\", \"cornmeal\", \"avert\", \"saucer\", \"expires\", \"drawbacks\", \"revisited\", \"dwarfs\", \"darts\", \"redefine\", \"carpets\",\n    \"shelton\", \"salinas\", \"rotated\", \"rightful\", \"projector\", \"groomed\", \"sidelined\", \"tacos\", \"pesto\", \"worrisome\", \"rapport\", \"trough\", \"bargains\", \"suicides\", \"cameraman\", \"dries\",\n    \"hartman\", \"spatula\", \"texted\", \"effluent\", \"harshly\", \"paulson\", \"warily\", \"bestowed\", \"foggy\", \"overcame\", \"paleo\", \"resin\", \"parable\", \"converge\", \"crunchy\", \"avian\",\n    \"forwards\", \"princes\", \"minivan\", \"confer\", \"finalist\", \"modesty\", \"bowing\", \"tilting\", \"mullen\", \"mantel\", \"sided\", \"flopped\", \"padding\", \"docking\", \"beginners\", \"grate\",\n    \"atkinson\", \"dialogues\", \"appetizer\", \"connector\", \"underwood\", \"fanned\", \"juniors\", \"glided\", \"loophole\", \"sightings\", \"taping\", \"canons\", \"colossal\", \"spoilers\", \"tackled\", \"thrived\",\n    \"sandstone\", \"aidan\", \"campfire\", \"allright\", \"soybeans\", \"tagging\", \"encoded\", \"usability\", \"melodic\", \"wheaton\", \"sloping\", \"famer\", \"sparkled\", \"checkout\", \"flagged\", \"resented\",\n    \"sharpened\", \"greased\", \"handouts\", \"plowed\", \"parochial\", \"budgetary\", \"retreats\", \"estranged\", \"radon\", \"expos\", \"wilkins\", \"provoking\", \"takers\", \"fullerton\", \"elderman\", \"enlist\",\n    \"stately\", \"borges\", \"attaining\", \"alligator\", \"dismantle\", \"analogies\", \"mouthful\", \"balkans\", \"manifests\", \"bandages\", \"grenades\", \"judah\", \"silicone\", \"barthes\", \"grits\", \"scrubbing\",\n    \"anecdote\", \"briefings\", \"healthful\", \"arisen\", \"shielded\", \"bribes\", \"ashton\", \"roundup\", \"snort\", \"whence\", \"ritchie\", \"defer\", \"straits\", \"veiled\", \"revolves\", \"escalate\",\n    \"destroyer\", \"relics\", \"lugar\", \"coldly\", \"feeny\", \"flares\", \"apathy\", \"tamara\", \"artisans\", \"skates\", \"pendulum\", \"zachary\", \"commuting\", \"ballad\", \"vowels\", \"heroism\",\n    \"presiding\", \"cutbacks\", \"gulped\", \"murals\", \"darla\", \"forging\", \"ovarian\", \"limbo\", \"tutors\", \"flailing\", \"ortega\", \"banished\", \"spits\", \"pedestal\", \"reliant\", \"durant\",\n    \"boosts\", \"friedrich\", \"quark\", \"proxies\", \"shortest\", \"breads\", \"allegory\", \"deserts\", \"shiites\", \"pollsters\", \"watered\", \"jeter\", \"excludes\", \"prada\", \"sixyear\", \"tasked\",\n    \"landuse\", \"streamed\", \"wimbledon\", \"reigning\", \"terminals\", \"grieve\", \"quarrel\", \"drumming\", \"melon\", \"unleash\", \"impeached\", \"widows\", \"overalls\", \"rafters\", \"helper\", \"jamaican\",\n    \"molding\", \"prickly\", \"outputs\", \"hasty\", \"caretaker\", \"closets\", \"noriega\", \"onesided\", \"modestly\", \"coasts\", \"waxed\", \"propel\", \"mingled\", \"palate\", \"cashmere\", \"coals\",\n    \"lizards\", \"lashed\", \"empires\", \"sedentary\", \"cropped\", \"puffs\", \"mistrust\", \"untold\", \"bowers\", \"rapes\", \"sling\", \"perceives\", \"darkly\", \"crowned\", \"pondering\", \"delusions\",\n    \"harmonic\", \"regulator\", \"farthest\", \"lacey\", \"dusted\", \"hawking\", \"redeem\", \"brochures\", \"graded\", \"athena\", \"doorman\", \"schematic\", \"topanga\", \"ledger\", \"clouded\", \"completes\",\n    \"alluded\", \"underage\", \"brigham\", \"rodents\", \"bayesian\", \"stripe\", \"thoreau\", \"acidic\", \"marshes\", \"courier\", \"musicals\", \"warhol\", \"heller\", \"rehnquist\", \"clams\", \"annan\",\n    \"tentacles\", \"baroque\", \"oconnell\", \"thickened\", \"crowding\", \"fullness\", \"aiding\", \"waitin\", \"marshals\", \"fedex\", \"backside\", \"grandeur\", \"longhorns\", \"handbag\", \"dictators\", \"penal\",\n    \"beaumont\", \"outings\", \"swiveled\", \"rhymes\", \"defeats\", \"menhaden\", \"partnered\", \"hermione\", \"shootout\", \"revising\", \"ontology\", \"twinkies\", \"faulkner\", \"grail\", \"rippling\", \"readable\",\n    \"affirming\", \"detergent\", \"purgatory\", \"hattie\", \"cranes\", \"mansfield\", \"ridley\", \"redress\", \"detriment\", \"newsom\", \"entrusted\", \"payers\", \"squatting\", \"westward\", \"syringe\", \"mcguire\",\n    \"errand\", \"bowels\", \"kimble\", \"ethically\", \"bellowed\", \"hangar\", \"gurney\", \"takeoff\", \"brunette\", \"elise\", \"pharaoh\", \"willful\", \"topdown\", \"alaskan\", \"drugged\", \"bandwagon\",\n    \"blanc\", \"deepen\", \"preachers\", \"binds\", \"darden\", \"keepers\", \"alito\", \"humour\", \"rippled\", \"havin\", \"wooten\", \"emirates\", \"clogged\", \"downey\", \"slaying\", \"wrestled\",\n    \"scopes\", \"dutifully\", \"butte\", \"eurozone\", \"crazed\", \"hanged\", \"hardcopy\", \"excerpted\", \"orient\", \"bluntly\", \"severus\", \"trailhead\", \"raptors\", \"crucified\", \"descartes\", \"siberia\",\n    \"bleach\", \"unmanned\", \"flinch\", \"picket\", \"whined\", \"archaic\", \"galleria\", \"alaric\", \"passports\", \"surpass\", \"workable\", \"gravely\", \"wholesome\", \"blackwell\", \"cleric\", \"hayward\",\n    \"stifling\", \"landfills\", \"lyrical\", \"canning\", \"bumpy\", \"soybean\", \"citigroup\", \"disarm\", \"abstracts\", \"playin\", \"proverbs\", \"raided\", \"molten\", \"octopus\", \"charger\", \"vinci\",\n    \"balding\", \"healer\", \"constable\", \"guadalupe\", \"habitual\", \"squeak\", \"pandering\", \"distort\", \"fashions\", \"entailed\", \"wares\", \"bleached\", \"electors\", \"stitched\", \"chiang\", \"mcdowell\",\n    \"midwife\", \"fauna\", \"tubing\", \"mythic\", \"masking\", \"splinter\", \"scarecrow\", \"drains\", \"briefs\", \"tillman\", \"shrewd\", \"legions\", \"excavated\", \"stretcher\", \"shyly\", \"robberies\",\n    \"narrated\", \"tonya\", \"segal\", \"creak\", \"exiled\", \"predation\", \"ferns\", \"jacks\", \"swine\", \"scanners\", \"staffed\", \"mockery\", \"geithner\", \"wishful\", \"curators\", \"andean\",\n    \"derrida\", \"hines\", \"borden\", \"sergei\", \"martyrs\", \"comedies\", \"resists\", \"evanston\", \"buckled\", \"condos\", \"delights\", \"stashed\", \"montage\", \"pretends\", \"trudged\", \"dover\",\n    \"angier\", \"bluray\", \"graphical\", \"marveled\", \"sloane\", \"marcy\", \"waging\", \"comfy\", \"vetoed\", \"levers\", \"gaines\", \"magnets\", \"malik\", \"marquee\", \"darlin\", \"slashing\",\n    \"universes\", \"browne\", \"meteors\", \"quinones\", \"squads\", \"decipher\", \"rowland\", \"miley\", \"allotted\", \"ensued\", \"tabletop\", \"nested\", \"cyclical\", \"supervise\", \"statehood\", \"respite\",\n    \"bathe\", \"elsie\", \"tillotson\", \"dashing\", \"harming\", \"posited\", \"fullest\", \"enslaved\", \"forcibly\", \"unesco\", \"nameless\", \"deploying\", \"shelling\", \"trolley\", \"triad\", \"bordering\",\n    \"finley\", \"thawed\", \"cooker\", \"unsettled\", \"overrun\", \"resonates\", \"operas\", \"facet\", \"markup\", \"proponent\", \"dawned\", \"telltale\", \"alleys\", \"cafes\", \"unfit\", \"creased\",\n    \"summaries\", \"pores\", \"blowout\", \"outfitted\", \"magnified\", \"electrode\", \"wanders\", \"sandler\", \"sprays\", \"menstrual\", \"herrera\", \"visuals\", \"wildfire\", \"fingered\", \"crickets\", \"arrays\",\n    \"glares\", \"maguire\", \"aches\", \"oxidative\", \"durbin\", \"slideshow\", \"manic\", \"crockett\", \"bleachers\", \"sargent\", \"shopper\", \"censure\", \"knockout\", \"mussels\", \"fairs\", \"stamberg\",\n    \"forage\", \"yearbook\", \"virginity\", \"importing\", \"bouts\", \"wondrous\", \"agonizing\", \"colonized\", \"nairobi\", \"impromptu\", \"scripted\", \"postcold\", \"shrub\", \"strangest\", \"allout\", \"homered\",\n    \"gibbons\", \"utterance\", \"moths\", \"posits\", \"nerds\", \"snowfall\", \"travelled\", \"suppl\", \"refinery\", \"imitating\", \"offence\", \"salts\", \"withered\", \"lucia\", \"motivates\", \"crawls\",\n    \"uneasily\", \"deutsche\", \"marquette\", \"breeders\", \"puffing\", \"clawed\", \"unfounded\", \"pointer\", \"variously\", \"screech\", \"necrosis\", \"foresight\", \"equated\", \"obscurity\", \"camped\", \"scoreless\",\n    \"bounces\", \"clutches\", \"nebulae\", \"furrowed\", \"lanterns\", \"crooks\", \"soiled\", \"judas\", \"fillets\", \"ayers\", \"condit\", \"idols\", \"digitally\", \"paychecks\", \"neuronal\", \"digit\",\n    \"dwellers\", \"degrading\", \"bordered\", \"keyboards\", \"bunkers\", \"caviar\", \"boxed\", \"slumber\", \"livin\", \"fractions\", \"summons\", \"proctor\", \"publicist\", \"frankfurt\", \"reeds\", \"whirlwind\",\n    \"stardom\", \"cowards\", \"combating\", \"reinvent\", \"stroller\", \"shreds\", \"tickled\", \"raked\", \"harrowing\", \"crouching\", \"hagel\", \"sockets\", \"dumbbell\", \"faked\", \"thwart\", \"engraving\",\n    \"genomes\", \"crunching\", \"septic\", \"wards\", \"sacked\", \"racked\", \"enticing\", \"manova\", \"harass\", \"memorize\", \"dogged\", \"clippings\", \"cottages\", \"ingram\", \"resided\", \"davey\",\n    \"intifada\", \"weston\", \"bridging\", \"impeach\", \"kenyan\", \"cucumbers\", \"colette\", \"holloway\", \"conveying\", \"grappling\", \"scrawled\", \"affords\", \"pickled\", \"tripoli\", \"clive\", \"sunflower\",\n    \"constrain\", \"downing\", \"meddling\", \"lumia\", \"chimed\", \"pointedly\", \"spaniards\", \"pataki\", \"opting\", \"charters\", \"calendars\", \"foresee\", \"blueberry\", \"crier\", \"knopf\", \"enclave\",\n    \"dreary\", \"vaughan\", \"lumpy\", \"ravaged\", \"engulfed\", \"earthy\", \"spewing\", \"sanjay\", \"capsules\", \"closures\", \"watchful\", \"tendon\", \"wrongs\", \"animosity\", \"beatty\", \"haitians\",\n    \"cultivars\", \"fandom\", \"triumphs\", \"macintosh\", \"prosocial\", \"westeros\", \"clerics\", \"worsening\", \"apostolic\", \"warheads\", \"milling\", \"greeley\", \"larsen\", \"acuity\", \"rebuttal\", \"genie\",\n    \"cholera\", \"commenced\", \"romanian\", \"emile\", \"previews\", \"covariate\", \"tenderly\", \"ethel\", \"underfoot\", \"slimy\", \"legalize\", \"spade\", \"nordic\", \"zipped\", \"handlers\", \"barbour\",\n    \"entangled\", \"tropics\", \"detour\", \"repubs\", \"picky\", \"smirked\", \"swells\", \"humphries\", \"creditor\", \"flaps\", \"staterun\", \"iteration\", \"seduced\", \"rasmussen\", \"fanatics\", \"rescuers\",\n    \"steamy\", \"intensify\", \"streisand\", \"smugglers\", \"bedrock\", \"dukakis\", \"shatter\", \"impulsive\", \"excursion\", \"ringed\", \"shrieks\", \"cripple\", \"perilous\", \"wharton\", \"fateful\", \"compile\",\n    \"donvan\", \"collide\", \"scallions\", \"glacial\", \"ahold\", \"shorty\", \"approves\", \"ridiculed\", \"overrated\", \"playfully\", \"denounce\", \"upholding\", \"disciple\", \"mascot\", \"garza\", \"corral\",\n    \"countess\", \"holyfield\", \"cannes\", \"mormonism\", \"homegrown\", \"damian\", \"mariah\", \"bandit\", \"fullsize\", \"thrashing\", \"selects\", \"crackled\", \"grizzlies\", \"blushing\", \"profane\", \"limitless\",\n    \"middleton\", \"bigoted\", \"cheaply\", \"felon\", \"slanted\", \"moira\", \"minions\", \"graying\", \"sleigh\", \"sanctity\", \"scrooge\", \"reread\", \"bacterium\", \"sufferers\", \"conveyor\", \"sweeter\",\n    \"dinah\", \"defied\", \"gamer\", \"vibrating\", \"agitation\", \"homey\", \"freckled\", \"popup\", \"nineties\", \"epidemics\", \"dismayed\", \"recruiter\", \"molds\", \"reptiles\", \"catchy\", \"threaded\",\n    \"rusher\", \"wildfires\", \"venetian\", \"striding\", \"kelso\", \"mayfield\", \"collage\", \"kellyanne\", \"absorbs\", \"flushing\", \"montaigne\", \"chills\", \"devoured\", \"dulles\", \"creams\", \"giovanni\",\n    \"dialysis\", \"shielding\", \"snatches\", \"caribou\", \"looped\", \"dominique\", \"consumes\", \"margo\", \"fleece\", \"damning\", \"priscilla\", \"enacting\", \"prettier\", \"botched\", \"raged\", \"creeks\",\n    \"snail\", \"eagerness\", \"modular\", \"whitehead\", \"warmup\", \"forwarded\", \"flavorful\", \"knoxville\", \"snapshots\", \"robbers\", \"flapped\", \"raylan\", \"emmanuel\", \"erode\", \"forgo\", \"deceit\",\n    \"altruism\", \"navigator\", \"rearing\", \"redeemed\", \"prodigy\", \"linens\", \"drawback\", \"envied\", \"sketched\", \"tacit\", \"jilly\", \"flicking\", \"cullen\", \"carlisle\", \"neutrinos\", \"corny\",\n    \"lucian\", \"splayed\", \"dusting\", \"matted\", \"outburst\", \"wildcard\", \"envisions\", \"globular\", \"farce\", \"thrusting\", \"issuer\", \"lineages\", \"allege\", \"empress\", \"semblance\", \"shafts\",\n    \"mandarin\", \"veranda\", \"tapestry\", \"courting\", \"dizzying\", \"rooftops\", \"revoked\", \"scrolls\", \"buffs\", \"scolded\", \"anarchist\", \"heaviest\", \"algerian\", \"squealed\", \"ticker\", \"issuance\",\n    \"triangles\", \"bakhtin\", \"underlie\", \"hemmer\", \"delores\", \"immediacy\", \"waller\", \"thwarted\", \"frontline\", \"reston\", \"ignite\", \"medial\", \"worsened\", \"unmet\", \"cornelius\", \"canola\",\n    \"dissident\", \"grapple\", \"esoteric\", \"scams\", \"flatter\", \"innovate\", \"emanating\", \"paving\", \"thrives\", \"oneman\", \"stamina\", \"broadened\", \"sentient\", \"flexed\", \"langley\", \"mediators\",\n    \"jimenez\", \"searing\", \"hitched\", \"obedient\", \"strata\", \"daine\", \"leahy\", \"willed\", \"confronts\", \"scurried\", \"wildest\", \"foraging\", \"patchwork\", \"eaton\", \"excision\", \"variances\",\n    \"pryor\", \"hacks\", \"fours\", \"fondness\", \"dickerson\", \"slider\", \"drummond\", \"droplets\", \"bowden\", \"momentous\", \"trending\", \"refill\", \"callahan\", \"mcintyre\", \"musty\", \"billowing\",\n    \"fountains\", \"gaped\", \"unchecked\", \"centrally\", \"hardline\", \"ascending\", \"sorely\", \"raccoon\", \"boomed\", \"cleanse\", \"valuing\", \"complicit\", \"kimmel\", \"slabs\", \"centres\", \"clearcut\",\n    \"stomping\", \"winslow\", \"putts\", \"snowstorm\", \"moustache\", \"actuality\", \"flooring\", \"shrines\", \"likened\", \"graft\", \"evolves\", \"decaying\", \"mccann\", \"wheeling\", \"inched\", \"windfall\",\n    \"mammalian\", \"walden\", \"overflow\", \"starch\", \"roamed\", \"maude\", \"droid\", \"outlawed\", \"impunity\", \"spatially\", \"maids\", \"exiting\", \"crocodile\", \"entre\", \"knowhow\", \"prism\",\n    \"writhing\", \"agreeable\", \"stirs\", \"bradshaw\", \"contrived\", \"schwab\", \"riparian\", \"bitcoin\", \"distilled\", \"steeped\", \"burgess\", \"plopped\", \"alloy\", \"failings\", \"smuggled\", \"artworks\",\n    \"rustle\", \"unsub\", \"kernels\", \"analysed\", \"shortcuts\", \"brits\", \"clubface\", \"comical\", \"liberate\", \"demonic\", \"impasse\", \"ascension\", \"populous\", \"jumble\", \"craftsman\", \"mania\",\n    \"boyhood\", \"kingwood\", \"recital\", \"buttoned\", \"thumped\", \"armenian\", \"traitors\", \"complied\", \"blaring\", \"cyclist\", \"prescott\", \"talley\", \"noodle\", \"equities\", \"battista\", \"sealing\",\n    \"fainted\", \"negligent\", \"seawater\", \"polyester\", \"polygraph\", \"whacked\", \"conduit\", \"hyperbole\", \"referent\", \"washer\", \"cronies\", \"randi\", \"bronco\", \"ralston\", \"posse\", \"whirl\",\n    \"scented\", \"glassy\", \"combs\", \"tatum\", \"grimy\", \"toobin\", \"circulate\", \"reborn\", \"brighten\", \"unearthed\", \"mayan\", \"antlers\", \"gearing\", \"attuned\", \"entice\", \"mules\",\n    \"diligent\", \"grooves\", \"natalee\", \"conyers\", \"tiananmen\", \"sniffs\", \"effected\", \"grownups\", \"swirls\", \"wield\", \"pedaling\", \"descends\", \"prettiest\", \"litany\", \"matalin\", \"visavis\",\n    \"syntactic\", \"grouse\", \"ejected\", \"surfer\", \"wading\", \"mcdaniel\", \"heresy\", \"floured\", \"geraldine\", \"diversify\", \"radiance\", \"millet\", \"pelvic\", \"savages\", \"succumbed\", \"dearth\",\n    \"gutted\", \"prologue\", \"exertion\", \"glorified\", \"smashes\", \"bolstered\", \"larval\", \"andes\", \"reciting\", \"dieting\", \"camper\", \"stinky\", \"jackpot\", \"islamabad\", \"servaas\", \"glittered\",\n    \"daryn\", \"swamps\", \"keenly\", \"stills\", \"gleaned\", \"amnesia\", \"wellbeing\", \"willfully\", \"rockdale\", \"borrower\", \"premieres\", \"arduous\", \"sighting\", \"finesse\", \"artus\", \"shorten\",\n    \"vases\", \"modelling\", \"grader\", \"legality\", \"sprouted\", \"coulter\", \"melanoma\", \"coups\", \"craze\", \"brownies\", \"melville\", \"ovation\", \"monoxide\", \"kandahar\", \"tombs\", \"elemental\",\n    \"skinned\", \"eastman\", \"suffrage\", \"boyish\", \"headon\", \"eaters\", \"cornered\", \"modality\", \"waterways\", \"lowry\", \"xander\", \"softness\", \"globes\", \"podcasts\", \"revert\", \"ramps\",\n    \"scorched\", \"latte\", \"fonda\", \"stucco\", \"heaps\", \"commend\", \"basing\", \"cradling\", \"leakage\", \"murtaugh\", \"coupe\", \"macvicar\", \"spiraling\", \"stifled\", \"halting\", \"trapping\",\n    \"skillful\", \"stables\", \"degrade\", \"squint\", \"panelists\", \"greets\", \"wrenched\", \"pellets\", \"juncture\", \"roused\", \"portman\", \"furnish\", \"shutout\", \"lilburn\", \"sprained\", \"remarried\",\n    \"boosters\", \"trimming\", \"loudoun\", \"alters\", \"lambs\", \"studs\", \"tractors\", \"replete\", \"lifespan\", \"subtypes\", \"wrongful\", \"karaoke\", \"compliant\", \"glows\", \"rancho\", \"bourdieu\",\n    \"genealogy\", \"atonement\", \"namesake\", \"whoopi\", \"slums\", \"janeiro\", \"stair\", \"youll\", \"poole\", \"crowns\", \"aerobics\", \"stallion\", \"cylinders\", \"frosted\", \"upton\", \"revamped\",\n    \"jayz\", \"shingles\", \"fetched\", \"twofold\", \"senegal\", \"gulls\", \"foregoing\", \"throng\", \"thorns\", \"analyse\", \"dodged\", \"tinkering\", \"alexa\", \"marla\", \"chanted\", \"gorlen\",\n    \"morphin\", \"propriety\", \"widowed\", \"tremor\", \"signified\", \"gnarled\", \"warms\", \"fringes\", \"intl\", \"spooked\", \"collided\", \"elspeth\", \"lasagna\", \"reith\", \"garnett\", \"coils\",\n    \"disarray\", \"tailback\", \"frosty\", \"tillerson\", \"elisabeth\", \"thine\", \"leeks\", \"groping\", \"stocky\", \"righty\", \"finalized\", \"unease\", \"exclaims\", \"lauer\", \"snowden\", \"casing\",\n    \"peptide\", \"cavernous\", \"caress\", \"matured\", \"streep\", \"rehearsed\", \"hardcover\", \"coolly\", \"robby\", \"brunt\", \"geniuses\", \"footwear\", \"swarming\", \"clashed\", \"elegantly\", \"leveraged\",\n    \"mastering\", \"dulaney\", \"flowered\", \"relapse\", \"rodent\", \"acreage\", \"glinting\", \"sleepless\", \"encased\", \"peregrine\", \"illogical\", \"tacky\", \"attaching\", \"farrakhan\", \"evocative\", \"parades\",\n    \"musically\", \"quart\", \"improvise\", \"umpires\", \"couches\", \"wolff\", \"grimes\", \"trumps\", \"haunts\", \"commence\", \"wrapper\", \"earmarks\", \"spherical\", \"micah\", \"juniper\", \"allegra\",\n    \"lowly\", \"margarita\", \"whatnot\", \"petersen\", \"patched\", \"coerced\", \"shellfish\", \"crossings\", \"antigen\", \"pinning\", \"bared\", \"conroe\", \"prevails\", \"doorways\", \"stirfry\", \"collars\",\n    \"gritted\", \"augment\", \"clair\", \"kendrick\", \"felons\", \"settler\", \"fasten\", \"unloaded\", \"reverie\", \"hanoi\", \"purified\", \"pretext\", \"lightest\", \"chipotle\", \"carlyle\", \"hayek\",\n    \"mcintosh\", \"postage\", \"hodges\", \"superfund\", \"cruisers\", \"eternally\", \"platte\", \"swooped\", \"tendrils\", \"complying\", \"leadoff\", \"chernobyl\", \"rossi\", \"matisse\", \"rehearse\", \"flustered\",\n    \"undressed\", \"clasp\", \"handguns\", \"chartered\", \"squeal\", \"friggin\", \"formality\", \"ramsay\", \"bugging\", \"estonia\", \"affleck\", \"espoused\", \"unitary\", \"lifetimes\", \"hitherto\", \"moret\",\n    \"whooping\", \"radial\", \"reigns\", \"donahue\", \"treasured\", \"hubris\", \"newborns\", \"hamid\", \"elisa\", \"dryly\", \"circadian\", \"raincoat\", \"squirmed\", \"marbles\", \"ducking\", \"dumbbells\",\n    \"strives\", \"russo\", \"sonar\", \"parka\", \"subverted\", \"doubly\", \"grainy\", \"stools\", \"fairfield\", \"ranches\", \"falwell\", \"addison\", \"abramson\", \"skied\", \"mingle\", \"moroccan\",\n    \"roomy\", \"ascended\", \"reckoned\", \"netting\", \"symbolize\", \"gusts\", \"backups\", \"bookcase\", \"movin\", \"thicket\", \"cadre\", \"waffles\", \"sitter\", \"federer\", \"jabbed\", \"newscast\",\n    \"precepts\", \"seeped\", \"taxfree\", \"forested\", \"licks\", \"nicki\", \"sputtered\", \"curtail\", \"aromatic\", \"canvases\", \"hathaway\", \"wrenching\", \"reeve\", \"guerrero\", \"drinkers\", \"intercut\",\n    \"pleases\", \"bubbly\", \"skewers\", \"mined\", \"gracias\", \"grazed\", \"likable\", \"untie\", \"perished\", \"boutiques\", \"spotify\", \"glistened\", \"eruptions\", \"riddled\", \"frenchman\", \"mobil\",\n    \"youii\", \"bellies\", \"distaste\", \"grandkids\", \"usaid\", \"lauded\", \"oneday\", \"laidback\", \"arterial\", \"barbaric\", \"blossomed\", \"budgeting\", \"sneaked\", \"basins\", \"redshirt\", \"streetcar\",\n    \"goldwater\", \"cascades\", \"exogenous\", \"garry\", \"mccall\", \"wavering\", \"deadliest\", \"kayla\", \"confesses\", \"shrapnel\", \"antelope\", \"yellowed\", \"foxes\", \"allusion\", \"langdon\", \"pickups\",\n    \"worded\", \"condone\", \"primates\", \"cleavage\", \"eater\", \"networked\", \"darfur\", \"chimes\", \"syndicate\", \"annoy\", \"delve\", \"critters\", \"dogmatic\", \"retiree\", \"brianna\", \"mourners\",\n    \"harbors\", \"slalom\", \"lefties\", \"sittin\", \"tacked\", \"maris\", \"alfonso\", \"pastries\", \"chimps\", \"privy\", \"starched\", \"cello\", \"harkin\", \"lentils\", \"carefree\", \"coffers\",\n    \"blazed\", \"tweaks\", \"pedigree\", \"veritable\", \"chats\", \"dazzle\", \"reviving\", \"matheny\", \"sheppard\", \"billings\", \"prius\", \"woodson\", \"plissken\", \"spokane\", \"kepler\", \"rescuing\",\n    \"hermann\", \"marquez\", \"glitch\", \"pretrial\", \"disperse\", \"tristan\", \"scallops\", \"pavel\", \"scrawny\", \"selma\", \"plantings\", \"blight\", \"heron\", \"apologise\", \"keynes\", \"latency\",\n    \"radiator\", \"textured\", \"annabel\", \"cleverly\", \"coworker\", \"foray\", \"tutorials\", \"genitals\", \"heaped\", \"showcases\", \"annotated\", \"storied\", \"protons\", \"pigments\", \"peels\", \"hatched\",\n    \"slurs\", \"sisko\", \"dozed\", \"entrances\", \"greener\", \"trappings\", \"remington\", \"slander\", \"trashed\", \"rancher\", \"isolating\", \"bigots\", \"heartless\", \"beasley\", \"carousel\", \"shuttered\",\n    \"styled\", \"credence\", \"deranged\", \"realtors\", \"enveloped\", \"primers\", \"hastert\", \"walled\", \"mortals\", \"issuers\", \"breezy\", \"dilution\", \"landfall\", \"rivalries\", \"staked\", \"wideopen\",\n    \"sudanese\", \"paisley\", \"pamphlets\", \"colmes\", \"overruled\", \"drooping\", \"shimmered\", \"wallets\", \"defies\", \"parched\", \"pastime\", \"deflect\", \"barlow\", \"gripes\", \"mainline\", \"citadel\",\n    \"notoriety\", \"rationing\", \"laments\", \"jindal\", \"pacey\", \"alienate\", \"euphoria\", \"salinity\", \"haidt\", \"plugins\", \"bidder\", \"strenuous\", \"seeping\", \"wavered\", \"centauri\", \"prolong\",\n    \"sheik\", \"campsite\", \"deluded\", \"slits\", \"angler\", \"conundrum\", \"brood\", \"stoves\", \"dwellings\", \"shrinks\", \"breached\", \"wakefield\", \"impacting\", \"celiac\", \"hendricks\", \"trampled\",\n    \"balked\", \"vistas\", \"mangled\", \"perils\", \"bette\", \"offroad\", \"keyes\", \"whoop\", \"dreamers\", \"midair\", \"profess\", \"taxonomic\", \"shunned\", \"licensure\", \"droughts\", \"succumb\",\n    \"heats\", \"ferrell\", \"macedonia\", \"polishing\", \"opposites\", \"innocuous\", \"bigot\", \"primed\", \"bandits\", \"merritt\", \"menlo\", \"proofs\", \"blurring\", \"topnotch\", \"vignettes\", \"wherefore\",\n    \"sketchy\", \"dearborn\", \"vandalism\", \"parisian\", \"healy\", \"humbled\", \"brandt\", \"sparking\", \"scoffed\", \"hammock\", \"saith\", \"fictions\", \"shorthand\", \"stacking\", \"schiavo\", \"habitable\",\n    \"minuscule\", \"cabaret\", \"cameo\", \"waterway\", \"vigilance\", \"severance\", \"latitudes\", \"professed\", \"proton\", \"conley\", \"sweats\", \"quivered\", \"resection\", \"tropes\", \"brill\", \"raters\",\n    \"appease\", \"geologist\", \"henson\", \"unsteady\", \"sternly\", \"renters\", \"donned\", \"receded\", \"recharge\", \"raffalon\", \"prodded\", \"shameless\", \"impart\", \"hairline\", \"overlooks\", \"barns\",\n    \"ivanka\", \"earnestly\", \"bridal\", \"unloading\", \"voicing\", \"trawl\", \"kennedys\", \"juarez\", \"capers\", \"sprinted\", \"verde\", \"backlog\", \"forte\", \"manicured\", \"pendleton\", \"phonemic\",\n    \"filler\", \"baines\", \"onlookers\", \"palaces\", \"redirect\", \"levees\", \"satisfies\", \"rewritten\", \"fruition\", \"pantheon\", \"agility\", \"childlike\", \"dropouts\", \"seton\", \"albanian\", \"tranquil\",\n    \"blanks\", \"frenzied\", \"salvaged\", \"deletion\", \"jogged\", \"stave\", \"parasitic\", \"cadence\", \"geordi\", \"simms\", \"lifeline\", \"venous\", \"vitals\", \"recapture\", \"whitetail\", \"salience\",\n    \"paine\", \"dropbox\", \"pokes\", \"handset\", \"waterfowl\", \"polenta\", \"vertigo\", \"bunched\", \"masterful\", \"wielding\", \"plumes\", \"werent\", \"garages\", \"ellington\", \"delicacy\", \"pendant\",\n    \"meatballs\", \"heralded\", \"satanic\", \"embattled\", \"bowles\", \"reinhardt\", \"propane\", \"decoys\", \"authorial\", \"conjured\", \"rotted\", \"phased\", \"addie\", \"cannons\", \"quizzes\", \"copeland\",\n    \"stammered\", \"finnegan\", \"spurrier\", \"custard\", \"awarding\", \"rainwater\", \"worldcom\", \"laziness\", \"spinoza\", \"redefined\", \"liasson\", \"wasps\", \"bulldog\", \"mystique\", \"painless\", \"tampering\",\n    \"acronym\", \"essex\", \"taxis\", \"goodell\", \"shroud\", \"reels\", \"padilla\", \"showroom\", \"barnard\", \"snarky\", \"execs\", \"fillmore\", \"ascend\", \"superboy\", \"clans\", \"meteorite\",\n    \"subspace\", \"wayward\", \"expertly\", \"movers\", \"chime\", \"attaches\", \"pregame\", \"resorted\", \"couscous\", \"waded\", \"amman\", \"topple\", \"fourday\", \"sharif\", \"rosary\", \"negation\",\n    \"sharpen\", \"pegged\", \"decoy\", \"dismisses\", \"laureate\", \"midsummer\", \"breyer\", \"stunts\", \"donatello\", \"feeder\", \"rematch\", \"sayer\", \"paddling\", \"diseased\", \"barrow\", \"betraying\",\n    \"hapless\", \"handlebar\", \"feverish\", \"posit\", \"scrolling\", \"skaters\", \"rollers\", \"vests\", \"pollutant\", \"bookshelf\", \"chants\", \"trickled\", \"antivirus\", \"saltwater\", \"lingers\", \"episodic\",\n    \"governs\", \"marcie\", \"marred\", \"worcester\", \"surfers\", \"creases\", \"outliers\", \"auditions\", \"swears\", \"reprints\", \"delacroix\", \"lecturing\", \"bushy\", \"smarts\", \"theyll\", \"harvests\",\n    \"canary\", \"reclaimed\", \"utensils\", \"corollary\", \"subtract\", \"faltered\", \"kellogg\", \"endearing\", \"randal\", \"occupant\", \"starlight\", \"integer\", \"abramoff\", \"scorsese\", \"swarmed\", \"premiered\",\n    \"speckled\", \"howto\", \"gastric\", \"arcane\", \"deleting\", \"winking\", \"menendez\", \"ferdinand\", \"flatten\", \"brokaw\", \"cheery\", \"legacies\", \"thickly\", \"dizziness\", \"guzman\", \"groped\",\n    \"snarling\", \"gradients\", \"kline\", \"ovens\", \"messes\", \"libel\", \"oncology\", \"coincides\", \"configure\", \"rewriting\", \"bullish\", \"phrasing\", \"brimming\", \"seduction\", \"pollard\", \"beeps\",\n    \"whoosh\", \"senor\", \"openair\", \"panes\", \"tonal\", \"presidio\", \"proclaims\", \"craftsmen\", \"archy\", \"vacancies\", \"loudest\", \"sugary\", \"dalai\", \"squeaked\", \"mottled\", \"lunge\",\n    \"flocks\", \"crested\", \"booted\", \"tarnished\", \"dentists\", \"masse\", \"saban\", \"americana\", \"sorta\", \"lattice\", \"hippies\", \"stupidly\", \"paucity\", \"ponies\", \"debtors\", \"innuendo\",\n    \"realtor\", \"nephews\", \"wisps\", \"repaid\", \"rebounded\", \"scrapes\", \"displace\", \"grassley\", \"crutches\", \"fanciful\", \"pointers\", \"jameson\", \"occult\", \"frugal\", \"canister\", \"marketer\",\n    \"verne\", \"snails\", \"candor\", \"mansions\", \"exporters\", \"valentino\", \"barclays\", \"colds\", \"blisters\", \"studded\", \"sprouting\", \"devour\", \"fester\", \"purses\", \"denzel\", \"twirling\",\n    \"takeaway\", \"fiscally\", \"tradeoff\", \"dunlap\", \"forfeit\", \"angling\", \"saleh\", \"mugabe\", \"recoil\", \"revolve\", \"himher\", \"punks\", \"norville\", \"freer\", \"hanover\", \"romances\",\n    \"bloomed\", \"glinted\", \"barbra\", \"fervent\", \"aretha\", \"rowan\", \"clawing\", \"forlorn\", \"partake\", \"takeout\", \"rockfish\", \"demeaning\", \"vacated\", \"dialing\", \"amenable\", \"scoops\",\n    \"tiers\", \"jamming\", \"penalized\", \"cranked\", \"tweaking\", \"helpers\", \"excite\", \"comme\", \"riveting\", \"underlies\", \"overcast\", \"graces\", \"oozing\", \"levee\", \"limped\", \"enlighten\",\n    \"alluring\", \"artistry\", \"mediums\", \"mouthed\", \"pitts\", \"clipping\", \"warring\", \"backpacks\", \"morbid\", \"woolen\", \"northward\", \"dwindled\", \"enrolling\", \"quickest\", \"northside\", \"snipers\",\n    \"saddled\", \"additives\", \"covington\", \"discord\", \"coriander\", \"niches\", \"expectant\", \"depaul\", \"greats\", \"astray\", \"utilizes\", \"mcpherson\", \"donnelly\", \"bloodied\", \"walkin\", \"freedman\",\n    \"strangle\", \"cahill\", \"sweetened\", \"stuffy\", \"entree\", \"deirdre\", \"knobs\", \"rations\", \"lenora\", \"ranting\", \"resonated\", \"optic\", \"nasser\", \"webpage\", \"maddox\", \"thinned\",\n    \"squirming\", \"innocents\", \"creighton\", \"soulful\", \"muses\", \"hedgehog\", \"spines\", \"errant\", \"maples\", \"mutters\", \"interacts\", \"layering\", \"theta\", \"bindings\", \"jayne\", \"manicure\",\n    \"jonbenet\", \"throwback\", \"wounding\", \"tinnitus\", \"apricot\", \"courteous\", \"palatable\", \"stanza\", \"censor\", \"haggard\", \"amplify\", \"scots\", \"debatable\", \"screeched\", \"passover\", \"toned\",\n    \"martyrdom\", \"stomp\", \"tilts\", \"subpoenas\", \"idling\", \"midsize\", \"selfless\", \"defaults\", \"radiated\", \"deities\", \"gangsters\", \"praxis\", \"bassist\", \"humiliate\", \"lockhart\", \"villanova\",\n    \"partisans\", \"breezes\", \"basra\", \"scotia\", \"stalling\", \"cordelia\", \"secretion\", \"farmed\", \"tumour\", \"compiling\", \"concur\", \"throbbed\", \"plaques\", \"meditate\", \"upsets\", \"graze\",\n    \"basque\", \"posturing\", \"frist\", \"cartons\", \"carvings\", \"newsmaker\", \"tully\", \"shivers\", \"cortez\", \"annuity\", \"castiron\", \"lockers\", \"mcmillan\", \"hotly\", \"sheehan\", \"preamble\",\n    \"ramadan\", \"twine\", \"lunges\", \"brees\", \"ladders\", \"darby\", \"polluting\", \"rowdy\", \"crabtree\", \"unveiling\", \"flanagan\", \"cleans\", \"cravings\", \"mathews\", \"emptying\", \"backfire\"\n];\n\n", "// (c) 2023 384 (tm)\n\nimport { generatePassPhrase, generateStrongKey, recreateStrongKey } from './strongphrase';\n\nexport const strongphrase = {\n    generate: generatePassPhrase,\n    toKey: generateStrongKey,\n    recreateKey: recreateStrongKey\n};\n", "// (c) 2023 384 (tm)\n\nconst reverse: number[] = []\nconst B64_CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (let i = 0; i < B64_CODE.length; i++) reverse[B64_CODE.charCodeAt(i)] = i\nreverse['-'.charCodeAt(0)] = 62 // minus\nreverse['_'.charCodeAt(0)] = 63 // underscore\nconst simple_b64_regex = /^([A-Za-z0-9+/_\\-]{4})*$/ // tolerant of chars, multiple of 24 bits, no padding\n\n/**\n * Fast base64 to array buffer conversion for 'simple' b64 strings\n * (Multiple of 24 bits, no padding, no whitespace)\n */\nexport function simpleBase64ToArrayBuffer(base64: string) {\n  // make sure it matches regex\n  if (!simple_b64_regex.test(base64))\n    throw new TypeError(`Invalid ('simple') base64 string - must match '${simple_b64_regex}'`)\n  const buffer = new ArrayBuffer(base64.length * 3 / 4 + 1)\n  const view = new DataView(buffer)\n  for (let i = base64.length - 4, j = buffer.byteLength - 4; i >= 0; i -= 4, j -= 3) {\n    const a = reverse[base64.charCodeAt(i)]\n    const b = reverse[base64.charCodeAt(i + 1)]\n    const c = reverse[base64.charCodeAt(i + 2)]\n    const d = reverse[base64.charCodeAt(i + 3)]\n    view.setUint32(j, (a << 18) | (b << 12) | (c << 6) | d)\n  }\n  return new Uint8Array(buffer, 1)\n}", "// (c) 2023 384 (tm)\n\nimport { simpleBase64ToArrayBuffer } from './simpleB64';\nimport { base64ToArrayBuffer, arrayBufferToBase64 } from './b64';\n\nimport {\n    base62ToArrayBuffer32, arrayBuffer32ToBase62, base62ToBase64, base64ToBase62, isBase62Encoded,\n    assemblePayload, extractPayload\n} from '../snackabra/snackabra';\n\nexport const utils = {\n    simpleBase64ToArrayBuffer,\n    base64ToArrayBuffer,\n    arrayBufferToBase64,\n    base62ToArrayBuffer32, arrayBuffer32ToBase62, base62ToBase64, base64ToBase62, isBase62Encoded,\n    assemblePayload, extractPayload\n};\n", "// (c) 2023 384 (tm)\n\n// 384 file system\n\nimport { Snackabra, SBServer, SBChannelId, Interfaces } from '../snackabra/snackabra';\n\nexport class SBFileSystem {\n    server: Snackabra;\n    channelList: SBChannelId[] = [];\n\n    constructor(sbConfig: SBServer) {\n        // make sure we're given a valid config\n        if (typeof sbConfig !== 'object') {\n            throw new Error(\"SBFileSystem(): sbConfig is null (must give SBServer config)\")\n        }\n        this.server = new Snackabra(sbConfig);\n    }\n\n    // basic upload single buffer\n    uploadBuffer(myChannelId: SBChannelId, payload: BodyInit, name: string = ''): Promise<Interfaces.SBObjectHandle> {\n        if (!myChannelId) {\n            throw new Error(\"myChannelId is null\")\n        }\n        return new Promise((resolve) => {\n            if (!this.server.storage) {\n                console.log(\"'this.server': \", this.server);\n                throw new Error(\"storage not initialized\")\n            }\n            this.server.storage.storeData(payload, 'p', myChannelId).then((res) => {\n                res.fileName = name\n                res.dateAndTime = new Date().toISOString()\n                if (this.server.storage.shardServer) res.shardServer = this.server.storage.shardServer\n                delete res[\"iv\"] // hack\n                delete res[\"salt\"] // hack\n                Promise.resolve(res.verification).then((v) => {\n                    res.verification = v as string;\n                    resolve(res)\n                })\n            })\n        })\n    }\n    uploadBrowserFileList(myChannelId: SBChannelId, fileMap: Map<any, any>, bufferMap: Map<any, any>) {\n        console.info('uploadBrowserFileList() not implemented yet')\n        console.log(myChannelId, fileMap, bufferMap)\n        // return new Promise((resolve) => {\n        //     let promises: Promise<Interfaces.SBObjectHandle>[] = [];\n        //     for (let i = 0; i < fileList.length; i++) {\n        //         promises.push(this.uploadBuffer(myChannelId, fileList[i], fileList[i].name));\n        //     }\n        //     Promise.all(promises).then((res) => {\n        //         resolve(res);\n        //     });\n        // });\n    }\n\n}\n", "// (c) 2023 384 (tm)\n\nimport { SBFileSystem } from './system';\n\nexport const file = {\n    fs: SBFileSystem,\n};\n", "// (c) 2023 384 (tm)\n\n// primarily creates class FileHelper, which is used by the UI code\n// to parse any files or directories that have been selected\n\nimport { arrayBuffer32ToBase62 } from 'src/snackabra/snackabra';\nimport { crypto } from '../crypto/index';\n\n// SUBTLE note about this code:\n// we try hard to execute synchronously (against our nature), because\n// the order in which bits and pieces of information arrive is important.\n// for example, we try to process a directory before it's contents.\n\n\n// TODO ... working on it, this file should not have ANY snackabra references\n// import { Snackabra, SBServer } from \"../snackabra/snackabra\";\n// import type { SBChannelId, Interfaces } from \"../snackabra/snackabra\"\n\n// TODO\n// in many circumstances, we can infer directory structure from \n// the various sources of information.  doing this reliably\n// (for example handling \"dangling\" directories) is tricky to\n// get right. so for now we only include the structure that\n// is clearly indicated by the files.  instead of removing the\n// partial code, however, we just disable it:\n\nconst SKIP_DIR = true;  // if you turn this false, you have work to do \n\nconst DEBUG = false;\nconst DEBUG2 = false; // more verbose\nconst DEBUG3 = false; // etc\n\nexport const version = \"0.0.19\";\nif (DEBUG) console.warn(\"==== SBFileHelper.ts v\" + version + \" loaded ====\")\n\n//#region HELPER FUNCTIONS ************************************************************************************************\n\n// helper function to pull properties of interest out, resilient\n// to what is available on the object/class/whatever\n// const fileInfo = { ...getProperties(fileObject, propertyList) };\n\nfunction getProperties(obj: any, propertyList: Array<string>) {\n    const properties: { [key: string]: any } = {};\n    // First priority: regular properties (directly on the object)\n    propertyList.forEach((property) => {\n        if (obj.hasOwnProperty(property)) {\n            properties[property] = obj[property];\n        }\n    });\n    // Second priority: own properties (from Object.getOwnPropertyNames)\n    Object.getOwnPropertyNames(obj).forEach((property) => {\n        if (propertyList.includes(property) && !properties.hasOwnProperty(property)) {\n            properties[property] = obj[property];\n        }\n    });\n    // Third priority: properties up the prototype chain (from for...in loop)\n    for (const property in obj) {\n        if (propertyList.includes(property) && !properties.hasOwnProperty(property)) {\n            properties[property] = obj[property];\n        }\n    }\n    return properties;\n}\n\nfunction getMimeType(fileName: string): string {\n    // Mapping of file extensions to MIME types\n    const MIME_TYPES: Record<string, string> = {\n        '.aac': 'audio/aac',   // AAC audio\n        '.abw': 'application/x-abiword',   // AbiWord\u00A0document\n        '.arc': 'application/x-freearc',   // Archive document (multiple files embedded)\n        '.avif': 'image/avif',   // AVIF image\n        '.avi': 'video/x-msvideo',   // AVI: Audio Video Interleave\n        '.azw': 'application/vnd.amazon.ebook',   // Amazon Kindle eBook format\n        '.bin': 'application/octet-stream',   // Any kind of binary data\n        '.bmp': 'image/bmp',   // Windows OS/2 Bitmap Graphics\n        '.bz': 'application/x-bzip',   // BZip archive\n        '.bz2': 'application/x-bzip2',   // BZip2 archive\n        '.cda': 'application/x-cdf',   // CD audio\n        '.csh': 'application/x-csh',   // C-Shell script\n        '.css': 'text/css',   // Cascading Style Sheets (CSS)\n        '.csv': 'text/csv',   // Comma-separated values (CSV)\n        '.doc': 'application/msword',   // Microsoft Word\n        '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',   // Microsoft Word (OpenXML)\n        '.eot': 'application/vnd.ms-fontobject',   // MS Embedded OpenType fonts\n        '.epub': 'application/epub+zip',   // Electronic publication (EPUB)\n        '.gz': 'application/gzip',   // GZip Compressed Archive\n        '.gif': 'image/gif',   // Graphics Interchange Format (GIF)\n        '.htm': 'text/html',   // HyperText Markup Language (HTML)\n        '.html': 'text/html',   // HyperText Markup Language (HTML)\n        '.ico': 'image/vnd.microsoft.icon',   // Icon format\n        '.ics': 'text/calendar',   // iCalendar format\n        '.jar': 'application/java-archive',   // Java Archive (JAR)\n        '.jpeg': 'image/jpeg',   // JPEG images\n        '.jpg': 'image/jpeg',   // JPEG images\n        '.js': 'text/javascript\u00A0(Specifications:\u00A0HTML\u00A0and\u00A0RFC 9239)',   // JavaScript\n        '.json': 'application/json',   // JSON format\n        '.jsonld': 'application/ld+json',   // JSON-LD format\n        '.mid': 'audio/midi',   // Musical Instrument Digital Interface (MIDI)\n        '.midi': 'audio/midi',   // Musical Instrument Digital Interface (MIDI)\n        '.mjs': 'text/javascript',   // JavaScript module\n        '.mp3': 'audio/mpeg',   // MP3 audio\n        '.mp4': 'video/mp4',   // MP4 video\n        '.mpeg': 'video/mpeg',   // MPEG Video\n        '.mpkg': 'application/vnd.apple.installer+xml',   // Apple Installer Package\n        '.odp': 'application/vnd.oasis.opendocument.presentation',   // OpenDocument presentation document\n        '.ods': 'application/vnd.oasis.opendocument.spreadsheet',   // OpenDocument spreadsheet document\n        '.odt': 'application/vnd.oasis.opendocument.text',   // OpenDocument text document\n        '.oga': 'audio/ogg',   // OGG audio\n        '.ogv': 'video/ogg',   // OGG video\n        '.ogx': 'application/ogg',   // OGG\n        '.opus': 'audio/opus',   // Opus audio\n        '.otf': 'font/otf',   // OpenType font\n        '.png': 'image/png',   // Portable Network Graphics\n        '.pdf': 'application/pdf',   // Adobe\u00A0Portable Document Format\u00A0(PDF)\n        '.php': 'application/x-httpd-php',   // Hypertext Preprocessor (Personal Home Page)\n        '.ppt': 'application/vnd.ms-powerpoint',   // Microsoft PowerPoint\n        '.pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',   // Microsoft PowerPoint (OpenXML)\n        '.rar': 'application/vnd.rar',   // RAR archive\n        '.rtf': 'application/rtf',   // Rich Text Format (RTF)\n        '.sh': 'application/x-sh',   // Bourne shell script\n        '.svg': 'image/svg+xml',   // Scalable Vector Graphics (SVG)\n        '.tar': 'application/x-tar',   // Tape Archive (TAR)\n        '.tif': 'image/tiff',   // Tagged Image File Format (TIFF)\n        '.tiff': 'image/tiff',   // Tagged Image File Format (TIFF)\n        '.ts': 'video/mp2t',   // MPEG transport stream\n        '.ttf': 'font/ttf',   // TrueType Font\n        '.txt': 'text/plain',   // Text, (generally ASCII or ISO 8859-n)\n        '.vsd': 'application/vnd.visio',   // Microsoft Visio\n        '.wav': 'audio/wav',   // Waveform Audio Format\n        '.weba': 'audio/webm',   // WEBM audio\n        '.webm': 'video/webm',   // WEBM video\n        '.webp': 'image/webp',   // WEBP image\n        '.woff': 'font/woff',   // Web Open Font Format (WOFF)\n        '.woff2': 'font/woff2',   // Web Open Font Format (WOFF)\n        '.xhtml': 'application/xhtml+xml',   // XHTML\n        '.xls': 'application/vnd.ms-excel',   // Microsoft Excel\n        '.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',   // Microsoft Excel (OpenXML)\n        '.xml': 'application/xml',   // XML\n        '.xul': 'application/vnd.mozilla.xul+xml',   // XUL\n        '.zip': 'application/zip',   // ZIP archive\n        '.7z': 'application/x-7z-compressed',   // 7-zip\u00A0archive\n    };\n\n    // Extract the file extension from the file name\n    const fileExtension = fileName.slice(fileName.lastIndexOf('.'));\n\n    // Return the MIME type if it exists in the mapping, or an empty string otherwise\n    return MIME_TYPES[fileExtension];\n}\n//#endregion HELPER FUNCTIONS ************************************************************************************************\n\n//#region TYPESCRIPT TYPES ETC ************************************************************************************************\n\n// there are a few weird things we need to do, because some browser behavior is \n// not captured by standard typescript headers etc.  for example, for some\n// reason ... Microsoft header files don't support some stuff Apple uses ...\n\n// FileEntry is non standard ... so we need to have some definitions \ninterface Entry {\n    isFile: boolean;\n    isDirectory: boolean;\n    name: string;\n    fullPath: string;\n    filesystem: FileSystem;\n    getMetadata(successCallback: MetadataCallback, errorCallback?: ErrorCallback): void;\n}\ninterface FileSystemFileEntry extends Entry {\n    isFile: true;\n    isDirectory: false;\n    file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;\n}\n\n\ninterface Metadata {\n    modificationTime: Date;\n    size: number;\n}\ntype MetadataCallback = (metadata: Metadata) => void;\ntype ErrorCallback = (error: DOMException) => void;\ntype FileCallback = (file: File) => void;\n\ninterface CustomEventTarget extends EventTarget {\n    files?: FileList;\n    items?: DataTransferItemList;\n}\n\nexport interface SBFileMetaData {\n    name?: string;\n    fullPath?: string;\n    size?: number;\n    type?: string;\n    file?: (successCallback: FileCallback, errorCallback?: ErrorCallback) => void;\n    lastModified?: number;\n    lastModifiedDate?: Date;\n    webkitRelativePath?: string;\n    isDirectory?: boolean;\n    isFile?: boolean;\n    getMetaDataName?: string;\n    getMetaDataSize?: number;\n    getMetaDataType?: string;\n    getMetaDataLastModified?: number;\n    getMetaDataGetFileError?: any;\n    getMetaDataModificationTime?: Date;\n    getMetaDataFile?: File;\n    getMetaDataError?: string;\n    noGetMetaData?: boolean;\n}\n\n//#endregion TYPESCRIPT TYPES ETC ************************************************************************************************\n\n// these are the properties that we (potenially) care about\nconst propertyList = ['lastModified', 'name', 'type', 'size', 'webkitRelativePath', 'fullPath', 'isDirectory', 'isFile',\n    'SBitemNumber', 'SBitemNumberList', 'fileContentCandidates', 'fileContents', 'uniqueShardId',\n    'SBparentEntry', 'SBparentNumber', 'SBfoundMetaData', 'SBfullName'];\n\n(window as any).SBFileHelperReady = new Promise((resolve, reject) => {\n    (window as any).SBFileHelperReadyResolve = resolve;\n    (window as any).SBFileHelperReadyReject = reject;\n});\n\n(window as any).SBFileHelperReadyResolve()\n\nexport const SBFileHelperReady = (window as any).SBFileHelperReady\n\n\n// internal debug function, used to verify files can be accessed\nfunction testToRead(file: File | FileSystemEntry | FileSystemFileEntry, location: string) {\n    try {\n        const reader = new FileReader();\n        reader.readAsText(file as File);\n        reader.onload = (e) => {\n            if (DEBUG2) {\n                console.log(\"========================================================\")\n                console.log(`[${location}] was able to readAsText():`);\n                console.log(file)\n            }\n            if (e.target === null) {\n                if (DEBUG) console.log('**** e.target is null ****');\n            } else {\n                if (DEBUG2) console.log(`[${location}] (direct) successfully read file ${file.name}`);\n            }\n        }\n    } catch (error) {\n        try {\n            if ((file as any).file) {\n                let originalFile = file;\n                (file as any).file((file: File) => {\n                    if (DEBUG2) {\n                        console.log(\"========================================================\")\n                        console.log(`[${location}] was able to get a file() for object:`);\n                        console.log(originalFile)\n                        console.log(file)\n                    }\n                    const reader = new FileReader();\n                    reader.readAsText(file as File);\n                    reader.onload = (e) => {\n                        if (e.target === null) {\n                            console.log('**** e.target is null ****');\n                        } else {\n                            if (DEBUG2) console.log(`[${location}] (using file()) successfully read file ${file.name}`);\n                            // console.log(e.target.result);\n                        }\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(`[${location}] error reading file ${file.name}`);\n        }\n    }\n}\n\n// Global counter utility; works well with async/await etc\nconst createCounter = () => {\n    let counter = 0;\n    const inc = async (): Promise<number> => {\n        await new Promise((resolve) => setTimeout(resolve, 0)); // Simulate asynchronous operation\n        counter++;\n        return counter - 1; // we count starting at zero\n    };\n    return { inc };\n};\n\nlet printedWarning = false;\nexport function printWarning() {\n    if (!printedWarning) {\n        console.log(\"================================================\")\n        console.log(\"Warning: you are running in 'local web page' mode\")\n        console.log(\"on a browser that has some restrictions.\");\n        console.log(\"\");\n        console.log(\"So far, looks like this browser will not let you\");\n        console.log(\"navigate *into* directories that are drag-and-dropped\");\n        console.log(\"Might also be having issues getting meta data,\");\n        console.log(\"as well as getting the 'full' path of the file.\");\n        console.log(\"============================================\")\n        printedWarning = true;\n    }\n    if ((window as any).directoryDropText)\n        (window as any).directoryDropText!.innerHTML = \"Click to choose directories<br />(drag and drop might not work))\";\n\n}\n\n/*\n * This class is used by the UI code to parse any files or directories that have been selected\n * by the UI, whether through a file input or a drag-and-drop operation\n * \n * The key data structures to access are:\n * \n * finalFileList: a map of all files that have been processed\n * globalBufferMap: a map of all array buffers that have been read (\"seen\")\n * \n * These are accumulative and do not reset on any UI interaction that this\n * class can see, they need to be explicitly cleared by any application.\n * (For example after uploading a set)\n * \n */\nexport class FileHelper {\n    // server: Snackabra;\n\n    // todo: perhaps from configuration?\n    #ignoreFileSet = new Set()\n\n    // give any file or item \"seen\" a unique number (reset on every UI interaction)\n    #globalItemNumber = createCounter();\n\n    // if there are items, files will at first be numbered the same (reset on every UI interaction)\n    #globalFileItemNumber = createCounter();\n\n    // all of our scanning results go here, unabridged (reset on every UI interaction)\n    #globalFileMap = new Map();\n\n    // this is the distilled list of files we will add to finalFileList (reset on every UI interaction)\n    #currentFileList = new Map();\n\n    // this is one accumulative, and used directly for the table (NOT reset)\n    finalFileList = new Map();\n\n    // track all (unique) array buffers that have been read (NOT reset)\n    // TODO: strictly speaking we don't do garbage collection on this\n    globalBufferMap = new Map();\n\n    constructor() {\n        // add some files to ignore\n        this.#ignoreFileSet.add(\".DS_Store\");\n        this.#ignoreFileSet.add(\"/.DS_Store\");\n        // add a regex to catch emacs backup files\n        this.#ignoreFileSet.add(/.*~$/);\n        // console.log(this)\n    }\n\n    ignoreFile(fileName: string): boolean {\n        if (this.#ignoreFileSet.has(fileName)) return true;\n        for (let ignoreFile of this.#ignoreFileSet)\n            if (ignoreFile instanceof RegExp)\n                if (ignoreFile.test(fileName))\n                    return true;\n        return false;\n    }\n\n    //#region SCAN ITEMS AND FILES ****************************************************************************************\n\n    // these are called by the UI code to parse any files or directories that have been selected\n    // by the UI, whether through a file input or a drag-and-drop operation\n\n    // returns metadata for a file object whether it is a File or FileEntry\n    extractFileMetadata(fileObject: File | FileSystemEntry | FileSystemFileEntry): Promise<SBFileMetaData> {\n        function localResolve(metadata: SBFileMetaData): SBFileMetaData {\n            // console.log(\"Extracted metadata:\");\n            // console.log(metadata);\n            return metadata;\n        }\n        return new Promise<SBFileMetaData>((resolve) => {\n            const metadata: SBFileMetaData = {} as SBFileMetaData;\n            // console.log(\"Extracting metadata from object:\");\n            // console.log(fileObject);\n            if (fileObject instanceof File) {\n                if (fileObject.name)\n                    metadata.name = fileObject.name;\n                if (fileObject.size)\n                    metadata.size = fileObject.size;\n                if (fileObject.type)\n                    metadata.type = fileObject.type;\n                if (fileObject.lastModified)\n                    metadata.lastModified = fileObject.lastModified;\n                if (fileObject.webkitRelativePath)\n                    metadata.webkitRelativePath = fileObject.webkitRelativePath;\n            }\n            if ((typeof FileSystemEntry !== \"undefined\") && (fileObject instanceof FileSystemEntry)) {\n                if (fileObject.name)\n                    metadata.name = fileObject.name;\n                if (fileObject.fullPath)\n                    metadata.fullPath = fileObject.fullPath;\n                if (fileObject.isDirectory !== undefined)\n                    metadata.isDirectory = fileObject.isDirectory;\n                if (fileObject.isFile !== undefined)\n                    metadata.isFile = fileObject.isFile;\n                metadata.noGetMetaData = true;\n            }\n            if ((typeof FileSystemFileEntry !== \"undefined\") && (fileObject instanceof FileSystemFileEntry)) {\n                if (fileObject.fullPath)\n                    metadata.fullPath = fileObject.fullPath;\n                // if it's there, not so important:\n                // if (fileObject.lastModifiedDate)\n                //     metadata.lastModifiedDate = fileObject.lastModifiedDate;\n                if (fileObject.isDirectory !== undefined)\n                    metadata.isDirectory = fileObject.isDirectory;\n                if (fileObject.isFile !== undefined)\n                    metadata.isFile = fileObject.isFile;\n                if (fileObject.file)\n                    metadata.file = fileObject.file;\n            }\n            if ((typeof FileSystemFileEntry !== \"undefined\") && ((fileObject instanceof FileSystemFileEntry))\n                && ((fileObject as unknown as FileSystemFileEntry).getMetadata)) {\n                // this is the only situation where we have another promise \n                (fileObject as unknown as FileSystemFileEntry).getMetadata((fileMetadata) => {\n                    // console.log(\"Got meta data from file object:\");\n                    // console.log(fileMetadata);\n                    // metadata.getMetaDataName = fileMetadata.name; // apparently not available?\n                    metadata.getMetaDataSize = fileMetadata.size;\n                    metadata.getMetaDataModificationTime = fileMetadata.modificationTime;\n                    if (fileObject.file) fileObject.file((file) => {\n                        metadata.getMetaDataFile = file;\n                        metadata.getMetaDataType = file.type;\n                        resolve(localResolve(metadata));\n                    }, (error) => {\n                        metadata.getMetaDataGetFileError = error;\n                        resolve(localResolve(metadata));\n                    });\n                }, (error: any) => {\n                    metadata.getMetaDataError = error;\n                    resolve(localResolve(metadata));\n                });\n            } else {\n                // otherwise, all info should be immediately available\n                metadata.noGetMetaData = true;\n                resolve(localResolve(metadata));\n            }\n        });\n    }\n\n    async scanFile(file: File | FileSystemEntry | FileSystemFileEntry, fromItem: number) {\n        if (!file) return\n        if (DEBUG2) testToRead(file, 'scanFile');\n        if (this.ignoreFile(file.name)) return;\n\n        let path: string;\n        if (file instanceof File) {\n            path = file.webkitRelativePath;\n        } else if (file instanceof FileSystemEntry) {\n            path = file.fullPath;\n        } else if (file instanceof FileSystemFileEntry) {\n            path = file.fullPath;\n        } else {\n            console.warn(\"**** Unknown file type (should not happen):\");\n            console.log(file);\n            return;\n        }\n\n        let fileNumber = await (fromItem === -1 ? this.#globalFileItemNumber.inc() : fromItem);\n        (file as any).SBitemNumber = fileNumber;\n\n        let fromItemText = fromItem === -1 ? '' : ` (from item ${fromItem})`\n\n        // fileListFile1_Files.push(file);\n\n        await this.extractFileMetadata(file).then((metadata) => {\n            if (DEBUG2) console.log(`adding ${fileNumber}`);\n            (file as any).SBfoundMetaData = metadata\n\n            // globalFileMap.set(`file ${fileNumber} (item ${fromItem}): ` + \"/\" + metadata.name + \" [file] [2] (\" + metadata.size + \")\", file);\n            // if ((file instanceof File) && (file.type !== \"\")) {\n            //     globalFileMap.set(`file ${fileNumber} (item ${fromItem}): ` + \"/\" + metadata.name + \" [meta from file]\", metadata);\n            // }\n\n            if (path === '') {\n                // fileListFile1.push('/' + file.name);\n                this.#globalFileMap.set(`file ${fileNumber} ${fromItemText} name: '/` + file.name + \"' \", file);\n            } else {\n                // fileListFile1.push('/' + path);\n                this.#globalFileMap.set(`file ${fileNumber} ${fromItemText} path: '/` + path + \"'\", file);\n            }\n\n        }).catch((error) => {\n            console.log(\"Error getting meta data for FILE (should NOT happen):\")\n            console.log(file)\n            console.log(error);\n        });\n    }\n\n    scanFileList(files: FileList | undefined) {\n        if (!files) return;\n        if (DEBUG) console.log(`==== scanFileList called, files.length: ${files.length}`);\n        if (files)\n            for (let i = 0; i < files.length; i++)\n            /* await */ this.scanFile(files[i], -1);\n    }\n\n    async scanItem(item: FileSystemEntry | FileSystemFileEntry | null, parent: any) {\n        if (!item) return;\n        if (this.ignoreFile(item.name)) return;\n        if (DEBUG2) testToRead(item, 'scanItem');\n\n        let itemNumber = await this.#globalItemNumber.inc();\n\n        if (DEBUG2) { console.log(`scanItem ${itemNumber} ${item.name}`); console.log(item); }\n\n        let parentString = '';\n        (item as any).SBitemNumber = itemNumber;\n        if (parent !== null) {\n            (item as any).SBparentEntry = parent;\n            (item as any).SBparentNumber = parent.SBitemNumber;\n            parentString = ` (parent ${parent.SBitemNumber}) `;\n            if (!parent.SBfullName)\n                // if we're a child then parent must be a parent\n                parent.SBfullName = parent.name;\n            // only if parents are around do we assert any knowledge of path\n            (item as any).SBfullName = parent.SBfullName + \"/\" + item.name;\n        }\n\n        // if (item.fullPath)\n        //     globalFileMap.set(`item ${itemNumber}: ` + item.fullPath + ` [item] [0] - indent ${indent}`, item);\n\n        // globalFileMap.set(`item ${itemNumber}: ` + '/' + item.name + ` [item] [1] - indent ${indent}`, item);\n\n        await this.extractFileMetadata(item).then((metadata) => {\n            (item as any).SBfoundMetaData = metadata\n            // globalFileMap.set(`item ${itemNumber}: ` + item.fullPath + ` [item] [2] - indent ${indent} `, item);\n            // globalFileMap.set(`item ${itemNumber}: ` + item.fullPath + ` [meta from item] - indent ${indent} `, metadata);\n        }).catch((error) => {\n            console.log(\"Error getting meta data for ITEM (should not happen):\")\n            console.log(item)\n            console.log(error);\n        });\n\n        if (item.isDirectory) {\n            const myThis = this; // workaround (VS issue?)\n            let directoryReader = (item as unknown as FileSystemDirectoryEntry).createReader();\n            (item as any).SBdirectoryReader = directoryReader;\n            this.#globalFileMap.set(`item ${itemNumber}: '/` + item.name + `' [directory] ${parentString}`, item);\n            directoryReader.readEntries(function (entries) {\n                entries.forEach(async function (entry) {\n                    await myThis.scanItem(entry, item);\n                });\n            }, function (error: any) {\n                printWarning();\n                if (DEBUG) console.log(`Browser restriction: Unable to process this item as directory, '${item.name}':`);\n                if (DEBUG2) console.log(error)\n            });\n        } else {\n            this.#globalFileMap.set(`item ${itemNumber}: '/` + item.name + \"' \" + parentString, item);\n            (item as FileSystemFileEntry).file((file) => {\n                this.scanFile(file, itemNumber);\n            }, function () {\n                printWarning();\n            });\n        }\n\n    }\n\n    scanItemList(items: DataTransferItemList | undefined) {\n        if (!items) return;\n        if (DEBUG) console.log(`==== scanItemList called, items.length: ${items.length}`);\n        // console.log(items);\n        for (let i = 0; i < items.length; i++) {\n            let item = items[i].webkitGetAsEntry();\n            if (item) /* await */ this.scanItem(item, null);\n            else { console.log(\"just FYI, not a file/webkit entry:\"); console.log(items[i]); }\n        }\n    }\n    //#endregion SCAN ITEMS OR FILES *******************************************************************************************************\n\n\n\n    // called after every user interaction (eg any possible additions of files)\n    afterOperation(callback: (table: any[]) => void) {\n        setTimeout(() => {\n            (async () => {\n                console.log(\"-------DONE building globalFileMap---------\")\n                console.log(this.#globalFileMap);\n\n                let nameToFullPath = new Map<string, string>();\n\n                let candidateFileList = new Map();\n\n                this.#globalFileMap.forEach((value, _key) => {\n                    if (!this.ignoreFile(value.name)) {\n                        if (DEBUG2) { console.log(`[${value.name}] Processing global file map entry: `); console.log(value); }\n                        if (value.SBitemNumber !== undefined) {\n                            let currentInfo = candidateFileList.get(value.SBitemNumber);\n                            if (currentInfo) {\n                                // let altFullPath = value.fullPath;\n                                // let altFileContentCandidates = value.fileContentCandidates;\n                                let newInfo = getProperties(value, propertyList);\n                                // Object.assign(currentInfo, getProperties(value, propertyList));\n                                Object.assign(newInfo, currentInfo);\n                                if ((value.fullPath) && ((!newInfo.fullPath) || (value.fullPath.length > newInfo.fullPath.length)))\n                                    newInfo.fullPath = value.fullPath;\n                                newInfo.fileContentCandidates.push(value);\n                                // currentInfo.fileContentCandidates = altFileContentCandidates;\n                                candidateFileList.set(value.SBitemNumber, newInfo);\n                            } else {\n                                candidateFileList.set(value.SBitemNumber, Object.assign({}, getProperties(value, propertyList)));\n                                currentInfo = candidateFileList.get(value.SBitemNumber);\n                                currentInfo.fileContentCandidates = [value];\n                            }\n                        } else if (value.fullPath) {\n                            // in some cases we can pick up path from here\n                            if (DEBUG2) {\n                                console.log(`++++ adding path info for '${value.name}':`);\n                                console.log(value.fullPath);\n                                console.log(value)\n                            }\n                            nameToFullPath.set(value.name, value.fullPath);\n                        } else {\n                            if (DEBUG2) {\n                                console.log(`++++ ignoring file '${value.name}' in first phase (SHOULD NOT HAPPEN)`);\n                                console.log(value);\n                            }\n                        }\n                    } else {\n                        if (DEBUG2) console.log(`Ignoring file '${value.name}' (based on ignoreFile)`);\n                    }\n                });\n\n                console.log(\"-------DONE building candidateFileList---------\")\n                console.log(candidateFileList);\n                // now merge into currentFileList\n                candidateFileList.forEach((value, key) => {\n                    if ((value.SBfullName !== undefined) && ((\"/\" + value.SBfullName) !== value.fullPath)) {\n                        console.log(\"WARNING: SBfullName and fullPath/name do not match\");\n                        console.log(`Name: ${value.name}, fullPath: ${value.fullPath}, SBfullName: ${value.SBfullName}`);\n                        console.log(value)\n                    }\n                    // pullPath is not reliable in the absence of our ability to reconstruct from parent-child\n                    let uniqueName = value.SBfullName || value.webkitRelativePath + '/' + value.name;\n                    /* if ((value.isDirectory) && (SKIP_DIR)) {\n                        if (DEBUG) console.log(`Skipping directory '${uniqueName}'`);\n                    } else */ if (uniqueName !== undefined) {\n                        if (value.isDirectory === true) {\n                            uniqueName += \" [directory]\";\n                        } else if (value.isFile === true) {\n                            uniqueName += \" [file]\";\n                        }\n                        if ((value.size !== undefined) && (value.isDirectory != true)) {\n                            uniqueName += ` [${value.size} bytes]`;\n                        }\n                        if (value.lastModified !== undefined) {\n                            uniqueName += ` [${value.lastModified}]`;\n                        }\n                        if (DEBUG2) {\n                            console.log(`processing object ${key} unique name '${uniqueName}':`);\n                            console.log(value)\n                        }\n                        let currentInfo = this.#currentFileList.get(uniqueName);\n                        if (currentInfo) {\n                            let altFullPath = currentInfo.fullPath;\n                            let altFileContentCandidates = currentInfo.fileContentCandidates;\n                            let altSbItemNumberList = currentInfo.SBitemNumberList;\n                            Object.assign(currentInfo, getProperties(value, propertyList));\n                            if ((altFullPath) && ((!currentInfo.fullPath) || (altFullPath.length > currentInfo.fullPath.length)))\n                                currentInfo.fullPath = altFullPath;\n                            if (altFileContentCandidates) {\n                                if (currentInfo.fileContentCandidates === undefined) currentInfo.fileContentCandidates = [];\n                                currentInfo.fileContentCandidates.push(...altFileContentCandidates);\n                            }\n                            altSbItemNumberList.push(value.SBitemNumber);\n                            currentInfo.SBitemNumberList = altSbItemNumberList;\n                        } else {\n                            value.SBitemNumberList = [value.SBitemNumber];\n                            this.#currentFileList.set(uniqueName, value);\n                            currentInfo = candidateFileList.get(uniqueName);\n                        }\n                        if (DEBUG2) {\n                            console.log(`... currentInfo for '${uniqueName}' (${uniqueName}):`);\n                            console.log(currentInfo);\n                        }\n                    } else {\n                        if (DEBUG) {\n                            console.log(`++++ ignoring file - it's lacking fullPath (should be rare)`);\n                            console.log(value);\n                        }\n                    }\n                });\n\n                console.log(\"-------DONE building currentFileList---------\")\n                console.log(this.#currentFileList)\n\n                // we'll now try reading all the files, and gathering any missing metadata while we're at it\n\n                // attempts to read a file, returns promise with contents, or null if not readable\n                async function FP(file: File | FileSystemEntry | FileSystemFileEntry): Promise<ArrayBuffer | null> {\n                    return new Promise(async (resolve) => {\n                        try {\n                            const reader = new FileReader();\n                            reader.onload = (e) => {\n                                if ((e.target === null) || (e.target.result === null)) {\n                                    if (DEBUG2)\n                                        console.log(`+++++++ got a null back for '${file.name}' (??)`);\n                                    resolve(null)\n                                } else if (typeof e.target.result === 'string') {\n                                    if (DEBUG2)\n                                        console.log(`+++++++ got a 'string' back for '${file.name}' (??)`);\n                                    resolve(null)\n                                } else {\n                                    if (DEBUG2) {\n                                        console.log(`+++++++ read file '${file.name}'`);\n                                        console.log(e.target.result);\n                                    }\n                                    resolve(e.target.result)\n                                }\n                            }\n                            reader.onerror = (event) => {\n                                if (DEBUG2) { console.log(`Could not read: ${file.name}`); console.log(event); }\n                                resolve(null);\n                            }\n                            // we try to release pressure on the browser\n                            await new Promise((resolve) => setTimeout(resolve, 20));\n                            reader.readAsArrayBuffer(file as File);\n                        } catch (error) {\n                            try {\n                                if (DEBUG2) console.log(`+++++++ got error on '${file.name}', will try as FileSystemFileEntry`);\n                                if ((file as any).file) {\n                                    (file as any).file(async (file: File) => {\n                                        const reader = new FileReader();\n                                        reader.onload = (e) => {\n                                            if ((e.target === null) || (e.target.result === null)) resolve(null)\n                                            else if (typeof e.target.result === 'string') resolve(null)\n                                            else resolve(e.target.result)\n                                        }\n                                        reader.onerror = () => { resolve(null); }\n                                        // we try to release pressure on the browser\n                                        await new Promise((resolve) => setTimeout(resolve, 20));\n                                        reader.readAsArrayBuffer(file as File);\n                                    });\n                                } else {\n                                    if (DEBUG2) console.log(`... cannot treat as file: ${file.name}`);\n                                }\n                            } catch (error) {\n                                if (DEBUG2) console.log(`Could not read: ${file.name}`);\n                            }\n                            resolve(null);\n                        }\n                    });\n                }\n\n                async function findFirstResolved(fileList: Array<File | FileSystemEntry | FileSystemFileEntry>): Promise<ArrayBuffer | null> {\n                    for (let index = 0; index < fileList.length; index++) {\n                        let result = await FP(fileList[index]);\n                        if (result !== null) return result;\n                    }\n                    if (DEBUG) {\n                        console.log(\"findFirstResolved(): found nothing usable from this fileList\")\n                        console.log(fileList)\n                    }\n                    return null;\n                }\n\n                let listOfFilePromises: Array<Promise<void>> = [];\n                this.#currentFileList.forEach((value, key) => {\n                    if ((value.fileContentCandidates) && (!value.uniqueShardId)) {\n                        // listOfFilePromises.push(value);\n                        listOfFilePromises.push(\n                            new Promise<void>(async (resolve) => {\n                                findFirstResolved(value.fileContentCandidates)\n                                    .then(async (result: ArrayBuffer | null) => {\n                                        if (DEBUG3) console.log(`got response for ${value.name}`)\n                                        if (!result) {\n                                            if (DEBUG2) console.log(`... contents are empty for item ${key} (probably a directory)`)\n                                            // value.uniqueShardId = null;  // actually no, we'll leave it as undefined\n                                        } else {\n                                            const { id_binary } = await crypto.sbCrypto.generateIdKey(result!)\n                                            const id32 = arrayBuffer32ToBase62(id_binary);\n                                            let alreadyThere = this.globalBufferMap.get(id32);\n                                            if (alreadyThere) {\n                                                if (DEBUG2) console.log(`... duplicate file found for ${key}`)\n                                                result = alreadyThere; // memory conservation\n                                            } else {\n                                                this.globalBufferMap.set(id32, result);\n                                            }\n                                            if (value.size === undefined) {\n                                                if (DEBUG2) console.log(`... setting size for ${key} to ${result!.byteLength}`)\n                                                value.size = result!.byteLength;\n                                            } else if (value.size !== result!.byteLength) {\n                                                if (DEBUG) console.log(`WARNING: file ${value.name} has size ${value.size} but contents are ${result!.byteLength} bytes (ignoring)`)\n                                                resolve(); // not the droid we're looking for\n                                            }\n                                            value.uniqueShardId = id32;\n                                            if (DEBUG2) console.log(`... found contents for ${key} (${result!.byteLength} bytes)`)\n                                        }\n                                        resolve();\n                                    })\n                                    .catch((error: any) => {\n                                        if (DEBUG2) console.log(`couldn't read anything for ${key}`, error);\n                                        // value.uniqueShardId = null;\n                                        resolve();\n                                    });\n                            })\n                        );\n                    } else { if (DEBUG) console.log(`skipping ${value.name} (item ${key})`) }\n                });\n                if (DEBUG) console.log(\"... kicked off all file promises\")\n\n                // this now updates the table and the UI\n                await Promise.all(listOfFilePromises).then((_results) => {\n                    // let's see what's in array buffers:\n                    console.log(\"-------DONE building globalBufferMap ---------\")\n                    console.log(this.globalBufferMap)\n                });\n\n                this.#currentFileList.forEach((value) => {\n                    if (value.name) {\n                        let path = \"/\";\n                        if (value.SBfullName) {\n                            path = (\"/\" + value.SBfullName).substring(0, value.fullPath.lastIndexOf('/') + 1);\n                        } else if (value.webkitRelativePath) {\n                            path = (\"/\" + value.webkitRelativePath).substring(0, value.webkitRelativePath.lastIndexOf('/') + 1);\n                        } else if (value.fullPath) {\n                            path = value.fullPath.substring(0, value.fullPath.lastIndexOf('/') + 1);\n                        } else if (nameToFullPath.has(value.name)) {\n                            path = nameToFullPath.get(value.name)!.substring(0, nameToFullPath.get(value.name)!.lastIndexOf('/') + 1);\n                        } else {\n                            if (DEBUG2) {\n                                console.log(`... no (further) path info for '${value.name}'`);\n                                console.log(value);\n                            }\n                        }\n                        // make sure last character is \"/\"\n                        path = path.endsWith(\"/\") ? path : path.concat(\"/\");\n                        if (DEBUG2) console.log(`... path for '${value.name}' is '${path}'`);\n                        if (value.isDirectory === true) { value.type = \"directory\"; value.size = 0; }\n\n                        let finalFullName = path + value.name;\n\n                        let metaDataString = \"\";\n                        let lastModifiedString = \"\";\n                        if (value.lastModified) {\n                            lastModifiedString = (new Date(value.lastModified)).toLocaleString();\n                            metaDataString += ` [${lastModifiedString}]`;\n                        }\n                        if (value.size) {\n                            metaDataString += ` [${value.size} bytes]`;\n                        }\n                        if (value.uniqueShardId) {\n                            metaDataString += ` [${value.uniqueShardId.substr(0, 12)}]`;\n                        }\n                        finalFullName += metaDataString;\n\n                        let row = {\n                            name: value.name,\n                            size: value.size,\n                            type: value.type,\n                            lastModified: lastModifiedString,\n                            hash: value.uniqueShardId?.substr(0, 12),\n                            // these are extra / hidden:\n                            path: path,\n                            uniqueShardId: value.uniqueShardId,\n                            fullName: finalFullName,\n                            metaDataString: metaDataString,\n                            SBfullName: value.SBfullName\n                        };\n\n                        let currentRow = this.finalFileList.get(finalFullName);\n                        if (!currentRow)\n                            this.finalFileList.set(finalFullName, row);\n                        else {\n                            // just a handful of things worth overriding:\n                            if (DEBUG) console.log(`... overriding some values for ${finalFullName} (this is rare)`)\n                            if (currentRow!.size === undefined) currentRow!.size = row.size;\n                            if (currentRow!.type === undefined) currentRow!.type = row.type;\n                            if (currentRow!.lastModified === undefined) currentRow!.lastModified = row.lastModified;\n                            if (currentRow!.uniqueShardId === undefined) currentRow!.uniqueShardId = row.uniqueShardId;\n                        }\n\n                        if (DEBUG2) { console.log(`File ${value.name} has info`); console.log(row); }\n                    }\n                });\n\n                console.log(\"-------DONE building finalFileList ---------\")\n                console.log(this.finalFileList)\n\n                // final coalesing;\n                // we review the finalFileList, and remove directories, which includes everything\n                // that we were unable to read the contents of\n                if (SKIP_DIR) {\n                    let reverseBufferMap: Map<string, Map<string, any>> = new Map(\n                        Array.from(this.globalBufferMap.keys()).map((key) => [key, new Map()])\n                    );\n                    for (const key of this.finalFileList.keys()) {\n                        let entry = this.finalFileList.get(key);\n                        if ((entry!.type === \"directory\") || (entry.uniqueShardId === undefined)) {\n                            if (DEBUG2) console.log(`... removing ${key} from final list (directory)`)\n                            this.finalFileList.delete(key);\n                        } else {\n                            const uniqueShortName = entry.name + entry.metaDataString;\n                            if (entry.path !== \"/\") {\n                                const mapEntry = reverseBufferMap.get(entry.uniqueShardId)!.get(uniqueShortName);\n                                if (mapEntry) {\n                                    // we have a duplicate\n                                    if (mapEntry.path.length > entry.path.length) {\n                                        // we're the shorter one, so we remove ourselves\n                                        this.finalFileList.delete(key);\n                                    } else {\n                                        // we're the longer one, so we remove the old guy\n                                        this.finalFileList.delete(mapEntry.fullName);\n                                        reverseBufferMap.get(entry.uniqueShardId)!.set(uniqueShortName, entry);\n                                    }\n                                } else {\n                                    // otherwise we leave ourselves in\n                                    reverseBufferMap.get(entry.uniqueShardId)!.set(uniqueShortName, entry);\n                                }\n\n                            }\n                        }\n                    }\n\n                    if (DEBUG) console.log(reverseBufferMap)\n\n                    // after that first pass, we can now see whether short names are unique\n                    for (const key of this.finalFileList.keys()) {\n                        let entry = this.finalFileList.get(key);\n                        const uniqueShortName = entry.name + entry.metaDataString;\n                        if (entry.path === \"/\") {\n                            const mapEntry = reverseBufferMap.get(entry.uniqueShardId)!.get(uniqueShortName);\n                            if (mapEntry) {\n                                // we have a duplicate, and delete ourselves\n                                if (DEBUG2) console.log(`... removing ${key} from final list (duplicate short name)`)\n                                this.finalFileList.delete(key);\n                            } else {\n                                // otherwise we leave ourselves in\n                                if (DEBUG2) console.log(`... leaving ${key} in final list (unique short name)`)\n                            }\n                        }\n                    }\n\n                }\n\n                // finally we check if mime type is missing, and if so, try to figure it out\n                for (const key of this.finalFileList.keys()) {\n                    let entry = this.finalFileList.get(key);\n                    if (entry.type === undefined) {\n                        if (DEBUG2) console.log(`... trying to figure out mime type for ${key}`)\n                        let mimeType = await getMimeType(entry.uniqueShardId);\n                        if (mimeType) {\n                            entry.type = mimeType;\n                        } else {\n                            entry.type = \"\";\n                        }\n                    }\n                }\n\n                // \"export\" as a sorted array to our table\n                // let tableContents = Array.from(finalFileList).sort((a, b) => a[0].localeCompare(b[0]));\n                // let tableContents = Array.from(finalFileList.values()).sort((a, b) => a.toString().localeCompare(b.toString()));\n                let tableContents = Array.from(this.finalFileList.values()).sort((a, b) =>\n                    a.path.localeCompare(b.path) || a.name.localeCompare(b.name)\n                );\n\n                if (DEBUG) {\n                    console.log(\"Table contents:\")\n                    console.log(tableContents);\n                }\n\n                console.log(\"-------DONE with all file promises (clearing state) ---------\")\n\n                // now we clear for any additionl UI\n                this.#globalItemNumber = createCounter();\n                this.#globalFileItemNumber = createCounter();\n                this.#globalFileMap = new Map();\n                this.#currentFileList = new Map();\n                // we do NOT clear the globalBufferMap\n\n                if (callback) {\n                    callback(tableContents);\n                } else {\n                    console.info(\"Note: no callback, so no update on tableContents:\")\n                    console.log(tableContents);\n                }\n\n            })(); // async\n        }, 50);\n    }\n\n\n\n\n\n    //#region UI HOOKS ****************************************************************************************************\n    //\n    // Here's roughly how you would hook up from an HTML page to this code.\n    // It will handle clicks and drops, both \"file\" and \"directory\" zones.\n    //\n    // \"handleEvent()\" handles all such events. It will call\n    // scanItemList() and scanFileList() on all the data, then\n    // the above \"afteOperation()\"\n\n    // const fileDropZone = document.getElementById('fileDropZone');\n    // const directoryDropZone = document.getElementById('directoryDropZone');\n    // SBFileHelperReady.then(() => {\n    //     fileDropZone.addEventListener('drop', SBFileHelper.handleFileDrop);\n    //     directoryDropZone.addEventListener('drop', SBFileHelper.handleDirectoryDrop);\n\n    //     fileDropZone.addEventListener('click', SBFileHelper.handleFileClick);\n    //     directoryDropZone.addEventListener('click', SBFileHelper.handleDirectoryClick);\n    // }\n\n    handleFileDrop(event: DragEvent, callback: ((table: any[]) => void)) {\n        event.preventDefault();\n        return this.handleEvent(event, callback, \"[file drop]\");\n    }\n\n    handleDirectoryDrop(event: DragEvent, callback: ((table: any[]) => void)) {\n        event.preventDefault();\n        return this.handleEvent(event, callback, \"[directory drop]\");\n    }\n\n    handleFileClick(event: Event, callback: ((table: any[]) => void)) {\n        event.preventDefault();\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.multiple = true;\n        fileInput.accept = '*/*';\n        fileInput.addEventListener('change', (event) => {\n            this.handleEvent(event, callback, \"[file click]\");\n        });\n        fileInput.click();\n    }\n\n    handleDirectoryClick(event: Event, callback: ((table: any[]) => void)) {\n        event.preventDefault();\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.multiple = true;\n        fileInput.webkitdirectory = true;\n        fileInput.accept = '*/*';\n        fileInput.addEventListener('change', (event) => {\n            this.handleEvent(event, callback, \"[directory click]\")\n        });\n        fileInput.click();\n    }\n\n    // this gets both input type=file and drag and drop\n    async handleEvent(event: Event | DragEvent, callback: ((table: any[]) => void), _context: any) {\n        let files, items;\n        if ((event as DragEvent).dataTransfer) {\n            files = (event as DragEvent).dataTransfer!.files;\n            items = (event as DragEvent).dataTransfer!.items;\n        } else if (event.target) {\n            if ((event.target as any as CustomEventTarget).files)\n                files = (event.target as any as CustomEventTarget).files;\n            if ((event.target as any as CustomEventTarget).items)\n                items = (event.target as any as CustomEventTarget).items;\n        } else {\n            console.log(\"Unknown event type (should not happen):\");\n            console.log(event);\n            return;\n        }\n        if (DEBUG3) {\n            console.log(\"Received items (DataTransferItemList):\")\n            console.log(items);\n            console.log(\"Received files:\")\n            console.log(files);\n        }\n        this.scanItemList(items);\n        this.scanFileList(files);\n        this.afterOperation(callback);\n    }\n\n}", "// (c) 2023 384 (tm)\n\n// thank you Thomas Lochmatter, thomas.lochmatter@viereck.ch, for jpeg ref code\n\n// takes a JPEG image and extracts and returns key meta data\nexport function readJpegHeader(bytes: Uint8Array) {\t\n    console.log(\"==== loaded SBImageHelper lib version 0.0.10 ====\");\n    // Check for valid JPEG header (null terminated JFIF)\n    let position = 0\n    if (bytes[position ++] != 0xff) return\n    if (bytes[position ++] != 0xd8) return\n    // Go through all markers\n    const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n    // Marker format:\n    //   0xff, marker type, length in bytes\n    // Marker types are in the range 0xc0-0xfe\n    //   Skip markers that are not SOFn (Start of Frame)\n    //   SOFn markers have a length of 7-11 bytes\n    //   SOFn markers are either 0xc0 (baseline DCT) or 0xc2 (progressive DCT)\n    //   SOFn markers have 1 byte for the type, 2 bytes for the length\n    //   (1 byte for the precision, 2 for the height, and 2 for the width)\n    //   The rest of the data in the marker is variable\n    while (position + 4 < bytes.byteLength) {\n      // Check that it's a valid marker\n      // FF00 is a special marker used to stuff extra bits into the stream\n      // (it's a valid marker, but it's not actually a marker)\n      if (bytes[position ++] != 0xff)\n        continue\n      // Get the marker type\n      const type = bytes[position ++]\n      if (bytes[position] == 0xff)\n        // FF00 was found, so skip it\n        continue\n      const length = dv.getUint16(position, false) // big endian\n      if (position + length > bytes.byteLength) return null\n      if (length >= 7 && (type == 0xc0 || type == 0xc2)) {\n        const data = {\n            progressive: type == 0xc2,\n            bitDepth: bytes[position + 2],\n            height: dv.getUint16(position + 3, false),\n            width: dv.getUint16(position + 5, false),\n            components: bytes[position + 7]\n        }\n        return data\n      }\n      position += length\n    }\n    return null\n  }\n", "\n\nimport { FileHelper } from \"./files\";\n\nexport class FileTable {\n    SBFileHelper: FileHelper;\n\n    tableRows = new Map();\n    table: Element; // = document.querySelector('#myTable tbody');\n    // container: Element; // = document.querySelector(`#${location}`);\n    expandAll: HTMLElement; // = document.getElementById(\"expandAll\")\n    collapseAll: HTMLElement; // = document.getElementById(\"collapseAll\")\n    uploadNewSetButton: HTMLElement; // = document.getElementById(\"uploadNewSetButton\")\n    tableFileInfo: HTMLElement; // = document.getElementById(\"table-file-info\");\n    hasChanges = false;\n\n    knownShards: Map<any, any> // = new Map();\n\n    rowClicked: ((metaData: any) => void) | null = null;\n    previewFile: (path: string, hash: string, type: string) => void;\n    findFileDetails: (hash: string) => any;\n\n    constructor(\n        SBFileHelper: FileHelper,\n        table: Element,\n        expandAll: HTMLElement,\n        collapseAll: HTMLElement,\n        uploadNewSetButton: HTMLElement,\n        tableFileInfo: HTMLElement,\n        knownShards: Map<any, any>,\n        rowClicked: (metaData: any) => void | null,\n        previewFile: (path: string, hash: string, type: string) => void,\n        findFileDetails: (hash: string) => any\n    ) {\n        if (!SBFileHelper) throw new Error(\"SBFileHelper is null\")\n        this.SBFileHelper = SBFileHelper;\n\n        if (!previewFile) throw new Error(\"previewFile is null\")\n        this.previewFile = previewFile;\n\n        if (!findFileDetails) throw new Error(\"findFileDetails is null\")\n        this.findFileDetails = findFileDetails;\n\n        if (!tableFileInfo) throw new Error(\"tableFileInfo is null\")\n        this.tableFileInfo = tableFileInfo;\n\n        if (!uploadNewSetButton) throw new Error(\"uploadNewSetButton is null\")\n        this.uploadNewSetButton = uploadNewSetButton;\n\n        if (!knownShards) throw new Error(\"knownShards is null\")\n        this.knownShards = knownShards;\n\n        if (rowClicked) this.rowClicked = rowClicked;\n\n        if (!table) throw new Error(\"table is null\")\n        if (!expandAll) throw new Error(\"expandAll is null\")\n        if (!collapseAll) throw new Error(\"collapseAll is null\")\n\n        this.table = table;\n        this.expandAll = expandAll;\n        this.collapseAll = collapseAll;\n    }\n\n    addRow(lexicalOrder: any, rowContents: any, metaData: any) {\n        this.tableRows.set(lexicalOrder, { rowContents, metaData });\n\n        // Sort map keys in lexical order\n        this.tableRows = new Map([...this.tableRows.entries()].sort());\n\n        // Iterate over sorted map and add rows to the table\n        this.table.innerHTML = \"\";\n        for (let [_key, value] of this.tableRows) {\n            let row = document.createElement('tr');\n            let cell = document.createElement('td');\n            cell.textContent = value.rowContents;\n\n            // Attach click handler with metaData\n            if (this.rowClicked) {\n                cell.addEventListener('click', () => {\n                    this.expandAll.style.display = \"flex\";\n                    this.collapseAll.style.display = \"flex\";\n                    this.rowClicked!(value.metaData)\n                });\n            }\n\n            row.appendChild(cell);\n            this.table.appendChild(row);\n        }\n    }\n\n    // note: 'editable' also doubles as 'omit' when null\n    // first column is pretty much hard coded to expect a path\n    renderTable(data: any[], headings: any[], editable: string | any[], location: any, onSave: any, actionButtons = true) {\n        // console.log(\"Will render:\")\n        // console.log(data)\n        let originalData = JSON.parse(JSON.stringify(data));\n        let numberColumns = headings.length;\n        if (numberColumns !== editable.length) {\n            console.error(\"Number of headings and editable columns must match\")\n            return\n        }\n        let slatedForDeletion: any[] = [];\n        const table = document.createElement(\"table\");\n        const thead = document.createElement(\"thead\");\n        const headingRow = document.createElement(\"tr\");\n\n        const saveBtn = document.createElement(\"button\");\n        const cancelBtn = document.createElement(\"button\");\n\n        const container = document.querySelector(`#${location}`)!;\n\n        i = 0;\n        let propertyNames: string[] = [];\n        headings.forEach((heading: { label: string | null; key: any; }) => {\n            if (editable[i++] !== null) {\n                const headingCell = document.createElement(\"th\");\n                headingCell.textContent = heading.label;\n                propertyNames.push(heading.key);\n                headingRow.appendChild(headingCell);\n            }\n        });\n        thead.appendChild(headingRow);\n        table.appendChild(thead);\n\n        const tbody = document.createElement(\"tbody\");\n        let lastPath = '';\n        data.forEach((row: { [x: string]: string | null; path?: any; uniqueShardId?: any; type?: any; name?: any; }, index: any) => {\n            // Count the number of slashes in the path\n            const PATH_INDENT = 12;\n            const depthPad = PATH_INDENT * (2 / 3) + (((row?.path?.match(/\\//g) || []).length - 1)) * PATH_INDENT;\n\n\n            if (row.path !== lastPath) {\n                lastPath = row.path;\n                const tableRow = document.createElement(\"tr\");\n                const tableData = document.createElement(\"td\");\n                tableData.colSpan = numberColumns;\n                tableData.textContent = row.path;\n                tableData.style.paddingLeft = depthPad + \"px\";\n                tableRow.appendChild(tableData);\n                tableRow.classList.add(\"folder\");\n                tableRow.dataset.name = row.path;\n                tbody.appendChild(tableRow);\n            }\n\n            const tableRow = document.createElement(\"tr\");\n            tableRow.classList.add(\"file\");\n            tableRow.dataset.filePath = row.path;\n\n            if (numberColumns > Object.keys(row).length) {\n                // having extra (hidden) columns is fine\n                console.error(\"Not enough columns in table for row: \", index)\n                return\n            }\n\n            Object.keys(row).forEach((key, index) => {\n                if (!propertyNames.includes(key))\n                    return;\n\n                if (editable[index] !== null) {\n                    const tableData = document.createElement(\"td\");\n                    if (index == 0) {\n                        tableData.style.paddingLeft = depthPad + PATH_INDENT + \"px\";\n                    }\n                    if (editable[index]) {\n                        const input = document.createElement(\"input\");\n                        input.type = \"text\";\n                        input.value = row[key]!;\n                        input.addEventListener(\"input\", () => {\n                            row[key] = input.value;\n                        });\n                        tableData.appendChild(input);\n                    } else {\n                        if (editable[index] !== null) // null means skip\n                            if ((key === \"type\") && (row[key] !== '')) {\n                                tableData.dataset.hash = row.uniqueShardId;\n                                tableData.dataset.type = row.type;\n                                tableData.dataset.path = row.path;\n                                tableData.dataset.name = row.name;\n                                tableData.innerHTML += row[key].slice(0, 20) + \" <span class='preview-file-icon'>\uD83D\uDD0D\uD83D\uDC40</span>\";\n                            } else {\n                                tableData.textContent = row[key];\n                            }\n                    }\n                    tableRow.appendChild(tableData);\n                }\n            });\n\n            if (actionButtons) {\n                const deleteButton = document.createElement(\"button\");\n                deleteButton.textContent = \"Remove\";\n                deleteButton.addEventListener(\"click\", () => {\n                    // document.getElementById(\"uploadNewSetButton\")!.setAttribute(\"disabled\", \"true\");\n                    this.uploadNewSetButton.setAttribute(\"disabled\", \"true\");\n                    tableRow.classList.add(\"slated-for-deletion\");\n                    this.hasChanges = true;\n                    saveBtn.removeAttribute(\"disabled\");\n                    cancelBtn.removeAttribute(\"disabled\");\n                    deleteButton.setAttribute(\"disabled\", \"true\");\n                    console.log(\"slated for deletion: \", index)\n                    slatedForDeletion.push(row.uniqueShardId)\n                });\n                const actionData = document.createElement(\"td\");\n                actionData.appendChild(deleteButton);\n                tableRow.appendChild(actionData);\n                if (tableRow.classList.contains(\"slated-for-deletion\")) {\n                    tableRow.classList.remove(\"slated-for-deletion\");\n                }\n            }\n            tbody.appendChild(tableRow);\n        });\n        table.appendChild(tbody);\n\n        if (actionButtons) {\n            saveBtn.setAttribute(\"id\", \"saveBtn\")\n            saveBtn.textContent = \"Save\";\n            saveBtn.addEventListener(\"click\", () => {\n                // document.getElementById(\"uploadNewSetButton\")!.removeAttribute(\"disabled\");\n                this.uploadNewSetButton.removeAttribute(\"disabled\");\n                // data = data.filter(row => !document.querySelector(`tr[data-index=\"${data.indexOf(row)}\"]`).classList.contains(\"slated-for-deletion\"));\n                // data = data.filter(row => !row.classList.contains(\"slated-for-deletion\"));\n                console.log(\"hit save button. original:\")\n                console.log(originalData)\n                data.forEach((item: { uniqueShardId: any; }, index: /* string | */ number) => {\n                    if (slatedForDeletion.includes(item.uniqueShardId)) {\n                        console.log(this.SBFileHelper)\n                        console.log(this.SBFileHelper.finalFileList)\n                        console.log(data[index])\n                        this.SBFileHelper.finalFileList.delete(data[index].fullName)\n                        this.SBFileHelper.globalBufferMap.delete(data[index].uniqueShardId)\n                        console.log(\"deleting: \", index)\n                        console.log(data[index])\n                        delete data[index];\n                    }\n                });\n                console.log(\"new:\")\n                console.log(data)\n                // onSave(data);\n                // originalData = JSON.parse(JSON.stringify(data));\n                this.hasChanges = false;\n                saveBtn.setAttribute(\"disabled\", \"true\");\n                cancelBtn.setAttribute(\"disabled\", \"true\");\n\n                this.renderTable(data, headings, editable, location, onSave);\n            });\n            table.appendChild(saveBtn);\n\n            cancelBtn.setAttribute(\"id\", \"cancelBtn\")\n            cancelBtn.textContent = \"Cancel\";\n            cancelBtn.addEventListener(\"click\", () => {\n                // document.getElementById(\"uploadNewSetButton\")!.removeAttribute(\"disabled\");\n                this.uploadNewSetButton.removeAttribute(\"disabled\");\n                // data = JSON.parse(JSON.stringify(originalData));\n                this.hasChanges = false;\n                saveBtn.setAttribute(\"disabled\", \"true\");\n                cancelBtn.setAttribute(\"disabled\", \"true\");\n                console.log(\"hit cancel button. original:\", data)\n                this.renderTable(originalData, headings, editable, location, onSave);\n            });\n\n            if (this.hasChanges) {\n                saveBtn.removeAttribute(\"disabled\");\n                cancelBtn.removeAttribute(\"disabled\");\n            } else {\n                saveBtn.setAttribute(\"disabled\", \"true\");\n                cancelBtn.setAttribute(\"disabled\", \"true\");\n            }\n            table.appendChild(cancelBtn);\n        }\n        container.innerHTML = \"\";\n        container.appendChild(table);\n\n        function toggleChildren(path: string) {\n            var children = document.querySelectorAll<HTMLElement>('tr[data-file-path=\"' + path + '\"]');\n            for (var j = 0; j < children.length; j++) {\n                children[j].style.display = (children[j].style.display == 'none') ? '' : 'none';\n            }\n        }\n\n        var nameCells = document.querySelectorAll('tr.folder');\n        // console.log(nameCells)\n        for (var i = 0; i < nameCells.length; i++) {\n            nameCells[i].addEventListener('click', function (this: HTMLTableRowElement) {\n                // copilot: \"this\" referes to the event target for the event listener for the \"click\" event\n                // how do i tell typescript what \"this\" is referring to?\n                if (this.dataset.name) {\n                    toggleChildren(this.dataset.name);\n                } else {\n                    console.error(\"this.dataset.name is null\")\n                }\n\n                // var children = document.querySelectorAll('tr[data-file-path=\"' + this.dataset.name + '\"]');\n                // console.log(\"click on\")\n                // console.log(this)\n                // console.log(this.dataset.name)\n                // console.log(\"found these children\")\n                // console.log(children)\n                // for (var j = 0; j < children.length; j++) {\n                //     children[j].style.display = (children[j].style.display == 'none') ? '' : 'none';\n                // }\n            });\n        }\n\n        // add an event listener for \"click\" on any of the preview-file-icon elements\n        // we want to pass it the \"type\" and \"hash\" that will be in the \"data\" attribute of the element\n        // and then we want to call the \"previewFile\" function with those arguments\n        // we can do this by using the \"addEventListener\" function\n\n        document.querySelectorAll(\".preview-file-icon\").forEach((element) => {\n            element.addEventListener(\"click\", (event) => {\n                if (!(event.target instanceof HTMLElement)) throw new Error(\"event.target is not an HTMLElement\");\n                const path = (<HTMLElement>event.target).parentElement?.dataset.path;\n                const name = (<HTMLElement>event.target).parentElement?.dataset.name;\n                const type = (<HTMLElement>event.target).parentElement?.dataset.type;\n                const hash = (<HTMLElement>event.target).parentElement?.dataset.hash;\n                const file = this.findFileDetails(hash!);\n                console.log(\"file\", file);\n                if (!file) throw new Error(\"file not found in fileSetMap (?) ... new issue\");\n                // const tableFileInfo = document.getElementById(\"table-file-info\");\n                if (this.tableFileInfo) {\n                    this.tableFileInfo.innerHTML = \"\";\n                    const theader = document.createElement(\"thead\");\n                    const tbody = document.createElement(\"tbody\");\n                    const shard = /* web384.DataRoom. */ this.knownShards.get(hash);\n                    const details = {\n                        name: file.name,\n                        size: file.size,\n                        type: file.type,\n                        lastModified: file.lastModified,\n                        SBDetails: null as string | null,\n                    }\n                    if (shard) {\n                        details.SBDetails = `${shard.id}.${shard.verification}`\n                    }\n                    for (const [key, value] of Object.entries(details)) {\n                        const tr = document.createElement(\"tr\");\n                        const th = document.createElement(\"th\");\n                        th.textContent = key;\n                        const td = document.createElement(\"td\");\n                        td.textContent = value;\n                        tr.appendChild(th);\n                        tr.appendChild(td);\n                        tbody.appendChild(tr);\n                    }\n                    this.tableFileInfo.appendChild(theader);\n                    this.tableFileInfo.appendChild(tbody);\n\n                    this.previewFile(path! + name, hash!, type!);\n                }\n\n                // for (const [key, value] of Object.entries(details)) {\n                //     const tr = document.createElement(\"tr\");\n                //     const th = document.createElement(\"th\");\n                //     th.textContent = key;\n                //     const td = document.createElement(\"td\");\n                //     td.textContent = value;\n                //     tr.appendChild(th);\n                //     tr.appendChild(td);\n                //     tbody.appendChild(tr);\n                // }\n                // tableFileInfo!.appendChild(theader);\n                // tableFileInfo!.appendChild(tbody);\n                // this.previewFile(path + name, hash, type);\n            });\n        });\n\n    }\n    \n}\n// window.renderTable = renderTable;\n\n", "// (c) 2023 384 (tm)\n\nimport { FileHelper } from './files';\nimport { readJpegHeader } from './images';\nimport { FileTable } from './fileTable';\nimport { SBServiceWorker } from '../boot/serviceWorker';\n\nexport const browser = {\n    files: FileHelper,\n    fileTable: FileTable,\n    serviceWorker: SBServiceWorker,\n    images: {\n        readJpegHeader: readJpegHeader\n    },\n};\n", "// (c) 2023 384 (tm)\n\nexport enum MessageType {\n    MSG_SIMPLE_CHAT = \"9WbWE53HnRy6\", // simple chat message (just text)\n\n    // shard/file sharing\n    MSG_FILE_SET = \"FEm4a3EW0cn1\", // upon sharing \"set\" of files (only meta data)\n    MSG_NEW_SHARD = \"eUp2cR96dH3E\", // sent every time a shard/file is seen that's new\n\n    // user private data\n    MSG_USER_PRIVATE_DATA = \"R0FR1LWRRddE\", // any private (meta whatever) data a user wants to record\n\n    // communication around user identities\n    MSG_NEW_USER_KEY = \"20m0r6rFedac\", // when users lock in their key they send this\n    MSG_CLAIM_PUBLIC_KEY = \"8pc2FamHdrhW\", // when a user claims a public key, they send this\n\n    // 'parent' channel communication\n    MSG_CONTACT_ANNOUNCEMENT = \"mEe6d97kEbhR\", // Announces a new contact based on the configuration and new public key in main channel\n    MSG_REQUEST_MAIN = \"1pE8de4bEWRE\", // sent to request the main channel (which is another one)\n    MSG_PROVIDE_MAIN = \"Ea66FnFE9f5F\", // reply to request; the provision needs to be encrypted for the recipient\n}\n\nexport const MessageTypeList = [\n    MessageType.MSG_SIMPLE_CHAT,\n    MessageType.MSG_FILE_SET,\n    MessageType.MSG_NEW_SHARD,\n    MessageType.MSG_NEW_USER_KEY,\n    MessageType.MSG_USER_PRIVATE_DATA,\n    MessageType.MSG_CLAIM_PUBLIC_KEY,\n    MessageType.MSG_REQUEST_MAIN,\n    MessageType.MSG_PROVIDE_MAIN,\n    MessageType.MSG_CONTACT_ANNOUNCEMENT,\n];\n", "// (c) 2023 384 (tm)\n\nimport { MessageType, MessageTypeList } from './messageTypes';\n\nexport const channel = {\n    types: MessageType,\n    typeList: MessageTypeList,\n};\n", "// (c) 2023 384 (tm)\n\nimport {\n    Channel,\n    SBMessage,\n    Snackabra,\n    SBCrypto,\n    SB384,\n    version,\n    ChannelEndpoint,\n    ChannelSocket,\n    arrayBufferToBase64,\n    compareBuffers\n} from './snackabra';\n\nexport const NewSB = {\n    Channel,\n    SBMessage,\n    Snackabra,\n    SBCrypto,\n    SB384,\n    version,\n    ChannelEndpoint,\n    ChannelSocket,\n    arrayBufferToBase64,\n    compareBuffers\n}\n", "// (c) 2023 384 (tm)\n\n// \"Main\" 384 library\n\n// this is LIBRARY version, not necessarily jslib\nexport const version = '1.0.0-beta.17'\n\nexport { boot } from './boot/index'\nexport { crypto } from './crypto/index'\nexport { strongphrase } from './strongphrase/index'\nexport { utils } from './utils/index'\nexport { file } from './file/index'\nexport { browser } from './browser/index'\nexport { channel } from './channel/index'\n\nexport { bootstrapLoaderClass } from './boot/loaderLoader' // also in boot\n\nexport { NewSB } from './snackabra/index'\n\nimport { \n    ChannelMessage, \n    SBServer, \n    ChannelEndpoint, \n    SBChannelHandle, \n    ChannelSocket, \n    SB384,\n    Interfaces,\n    SBPayload\n} from './snackabra/snackabra'\n\nimport { SBFileSystem } from './file/system'\n\n// we need to do this workaround for the dts bundler we are using:\n// this will provide something in the \"global\" namespace through\n// which we can export types.\nexport type ChannelMessageTypeAlias = ChannelMessage\nexport type SBServerTypeAlias = SBServer\nexport type ChannelEndpointTypeAlias = ChannelEndpoint\nexport type SBChannelHandleTypeAlias = SBChannelHandle\nexport type ChannelSocketTypeAlias = ChannelSocket\nexport type SB384TypeAlias = SB384\n// export type SBObjectHandleTypeAlias = Interfaces.SBObjectHandle // this one is special\nexport type SBObjectHandleTypeAlias = Interfaces.SBObjectHandle_v1 | Interfaces.SBObjectHandle_v2\nexport type SBPayloadAlias = SBPayload\n\nexport type SBFileSystemTypeAlias = SBFileSystem\n\nexport namespace SnackabraTypes {\n    export type ChannelMessage = ChannelMessageTypeAlias\n    export type SBServer = SBServerTypeAlias\n    export type ChannelEndpoint = ChannelEndpointTypeAlias\n    export type SBChannelHandle = SBChannelHandleTypeAlias\n    export type ChannelSocket = ChannelSocketTypeAlias\n    export type SB384 = SB384TypeAlias\n    export type SBObjectHandle = SBObjectHandleTypeAlias // this one is special\n    export type SBPayload = SBPayloadAlias\n}\n\nexport namespace SB384Types {\n    export type SBFileSystem = SBFileSystemTypeAlias\n}\n\nexport { Snackabra } from './snackabra/snackabra'\n", "import { makeAutoObservable, onBecomeUnobserved, onBecomeObserved, toJS, computed, action } from \"mobx\";\nimport { orderBy } from 'lodash';\nimport IndexedKV from \"../utils/IndexedKV\";\nimport MessageWorker from \"../workers/MessageWorker.js\";\nimport * as __ from \"lib384/dist/384.esm.js\";\nconst blob = new Blob([`(${MessageWorker})()`]);\nconst messageWorker = new Worker(URL.createObjectURL(blob), { name: '384 Message Worker' });\nlet SB = __.NewSB;\nlet Crypto = new SB.SBCrypto();\n\nlet cacheDb = new IndexedKV({\n    db: 'sb_data',\n    table: 'cache'\n});\n\nexport interface ChannelStoreType {\n    id: any;\n    key: any;\n    alias: any;\n    socket: __.SnackabraTypes.ChannelSocket;\n    capacity: any;\n    motd: any;\n    owner: any;\n    status: any;\n    messages: __.SnackabraTypes.ChannelMessage[];\n    getMessages: () => __.SnackabraTypes.ChannelMessage[];\n    getOldMessages: (length: number | undefined) => Promise<unknown>;\n    getStorageAmount: () => Promise<unknown>;\n    replyEncryptionKey: (recipientPubkey: string) => Promise<unknown>;\n    sendMessage: (body: {[key: string]: any},  message?: string) => Promise<unknown>;\n    lock: () => Promise<unknown>;\n    create: (secret: string) => Promise<unknown>;\n    connect: (messageCallback?: ((...data: any[]) => void) | undefined) => Promise<unknown>;\n\n}\n\n// export type ChannelStoreTypeAlias = ChannelStoreType;\n\nexport class ChannelStore implements ChannelStoreType{\n    private _id: any;\n    private _alias: any;\n    private _status = 'CLOSED'\n    private _key: any;\n    private _keys: any;\n    private _socket?: __.SnackabraTypes.ChannelSocket;\n    private _messages: __.SnackabraTypes.ChannelMessage[] = [];\n    private _ready = false;\n    private _owner = false;\n    private _capacity = 20;\n    private _motd = '';\n    private _messageCallback?: CallableFunction;\n    private _visible = true;\n    private _savingTimout?: number;\n    workerPort: MessageChannel;\n    readyResolver!: () => void;\n    ChannelStoreReadyFlag = new Promise((resolve) => {\n        this._ready = true;\n        this.readyResolver = resolve as any;\n    });\n    lastSeenMessage = 0;\n    SB;\n    config: __.SBServerTypeAlias;\n\n    constructor(config: __.SBServerTypeAlias, channelId?: string) {\n        this.config = config;\n        // this.config.onClose = () => {\n        //   console.log('onClose hook called')\n        //   this.status = 'CLOSED'\n        //   if (this._visible) {\n        //     this.makeVisible()\n        //   }\n        // }\n\n        // this.config.onOpen = () => {\n        //   console.log('onOpen hook called')\n        //   this.status = 'OPEN'\n        // }\n        // this.config.onError = (e: any) => {\n        //   console.log('onError hook called')\n        //   this.status = 'ERROR'\n        //   console.error(e)\n        //   if (this._visible) {\n        //     console.log('reconnecting')\n        //     this.makeVisible()\n        //   }\n        // }\n        this.SB = new SB.Snackabra(this.config);\n\n        makeAutoObservable(this, {\n            id: computed,\n            key: computed,\n            alias: computed,\n            socket: computed,\n            capacity: computed,\n            motd: computed,\n            owner: computed,\n            status: computed,\n            messages: computed,\n            getOldMessages: action,\n            downloadData: action,\n            replyEncryptionKey: action,\n            lock: action,\n            create: action,\n            connect: action,\n        });\n\n        onBecomeUnobserved(this, \"messages\", () => {\n            console.log('messages unobserved')\n            this.save()\n        });\n\n        onBecomeObserved(this, \"messages\", () => {\n            console.log('messages observed')\n        });\n\n        document.addEventListener('visibilitychange', (e) => {\n            if (document.visibilityState === 'hidden') {\n                this._visible = false;\n                this.status = 'UNFOCUSED'\n            }\n\n            if (document.visibilityState === 'visible') {\n                this._visible = true;\n                if (this.socket) {\n                    console.log('visbility change: setting status to', this.socket.status)\n                    this.status = 'LOADING'\n                    this.makeVisible()\n                }\n            }\n        });\n\n        window.addEventListener(\"offline\", (e) => {\n            console.log(\"browser has gone offline\");\n            this.status = 'CLOSED'\n            console.log('settings stateus status to', this.status)\n        });\n\n        window.addEventListener(\"online\", (e) => {\n            console.log(\"browser is now online\");\n            this.makeVisible()\n        });\n\n        if (channelId) {\n            this.id = channelId;\n            this.getChannel(this.id);\n        }\n\n        this.workerPort = new MessageChannel();\n        this.workerPort.port2.onmessageerror = (e: any) => {\n            console.error('message error', e)\n        }\n\n        this.workerPort.port2.onmessage = (e: MessageEvent) => {\n            if (e.data.channel_id !== this._id) {\n                console.log('message not for this channel', e.data, this._id)\n                return\n            }\n            console.log('message processed by worker', e.data.channel_id, this._id)\n            switch (e.data.method) {\n                case 'addMessage':\n                    console.log('adding message', e)\n                    if (e.data.args.updateState) {\n                        this.messages = [...this._messages, e.data.data]\n                    }\n                    // this.messages = [...this._messages, e.data.data]\n                    break;\n                case 'getMessages':\n                    console.log(e)\n                    if (e.data.data.length !== this._messages.length) {\n                        this.messages = e.data.data\n                    }\n\n                    break\n                default:\n                    console.warn('unknown worker message', e.data)\n            }\n\n        }\n        this.workerPort.port2.onmessageerror = (e: any) => {\n            console.error('message error', e)\n        }\n        messageWorker.postMessage({ port: this.workerPort.port1 }, [this.workerPort.port1]);\n    }\n\n    private getChannel = (channel: string) => {\n        return new Promise((resolve) => {\n            cacheDb.getItem('sb_data_' + channel).then(async (data) => {\n                if (data) {\n                    this.id = data.id;\n                    this.alias = data.alias;\n                    this.key = data.key;\n                    this.keys = data.keys;\n                    this.messages = data.messages;\n                    this.lastSeenMessage = data.lastSeenMessage;\n                    this.motd = data.motd;\n                    this.capacity = data.capacity;\n                    // this.getChannelMessages()\n                    resolve(data)\n                } else {\n                    resolve(false)\n                }\n            })\n        })\n    }\n\n    private makeVisible = () => {\n        this.connect().then((result) => {\n            if (result) {\n                this._visible = true;\n                if (this._socket)\n                    this.status = this._socket.status\n                this.getOldMessages(0)\n            }\n        })\n\n    }\n    private save = async () => {\n        await this.ChannelStoreReadyFlag\n        if (this._savingTimout) {\n            window.clearTimeout(this._savingTimout)\n        }\n        this._savingTimout = window.setTimeout(async () => {\n            try {\n                if (this.id) {\n                    const save = {\n                        id: toJS(this._id),\n                        alias: toJS(this._alias),\n                        messages: orderBy(toJS(this._messages), ['createdAt'], ['asc']),\n                        owner: toJS(this._owner),\n                        key: toJS(this._key),\n                        keys: toJS(this._keys),\n                        motd: toJS(this._motd),\n                        capacity: toJS(this._capacity),\n                        lastSeenMessage: toJS(this.lastSeenMessage)\n                    }\n                    console.warn('saving channel state', save)\n                    await cacheDb.setItem('sb_data_' + this.id, save)\n                }\n            } catch (e) {\n                if (e instanceof Error)\n                    console.warn('There was an issue saving the channel state.', e.message)\n            }\n        }, 250)\n\n    }\n\n    getChannelMessages = async () => {\n        this.workerPort.port2.postMessage({ method: 'getMessages', channel_id: this._id })\n    }\n\n    get id() {\n        return toJS(this._id);\n    }\n\n    set id(id) {\n        if (!id) {\n            console.error('no id set for channel')\n            return\n        }\n        this._id = id;\n        this.save();\n    }\n\n    get key() {\n        return toJS(this._key);\n    }\n\n    set key(key) {\n        if (!key) {\n            console.warn('no key set for channel')\n            return\n        }\n        this._key = key;\n        this.save();\n    }\n\n    get keys() {\n        return this._keys;\n    }\n\n    set keys(keys) {\n        this._keys = keys;\n        this.save();\n    }\n\n    get messages() {\n        return this._messages;\n    }\n\n    getMessages = () => {\n        return toJS(this._messages)\n    }\n\n    set messages(messages) {\n        this._messages = messages;\n        this.save();\n    }\n\n    set alias(alias) {\n        if (!alias) {\n            // console.trace()\n            return\n        }\n        this._alias = alias;\n        this.save();\n    }\n\n    get alias() {\n        return this._alias;\n    }\n\n    get socket() {\n        return this._socket as any;\n    }\n\n    set socket(socket) {\n        if (!socket) {\n            console.trace()\n            return\n        }\n        this._socket = socket;\n        if (this._socket) {\n            this.status = this._socket.status\n            this.save();\n        }\n    }\n\n    get capacity() {\n        return this._capacity;\n    }\n\n    set capacity(capacity) {\n        this._capacity = capacity;\n        if (this.owner && this._socket) {\n            this._socket.api.updateCapacity(capacity);\n        }\n        this.save();\n    };\n\n    get motd() {\n        return this._motd;\n    }\n\n    set motd(motd) {\n        if (this.owner && this._socket) {\n            this._socket.api.setMOTD(motd);\n        }\n        this._motd = motd;\n        this.save();\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    set status(status) {\n        this._status = status;\n    }\n\n    get owner() {\n        return this._owner\n    }\n\n    set owner(owner) {\n        this._owner = owner\n    }\n\n    getStorageAmount = (): any => {\n        return this._socket?.api.getStorageLimit()\n    }\n\n    getOldMessages = (length: number | undefined) => {\n        return new Promise((resolve, reject) => {\n            if (!this._socket) throw new Error(\"no socket\")\n            try {\n                this._socket.api.getOldMessages(length).then((r_messages: Array<__.SnackabraTypes.ChannelMessage>) => {\n                    console.log(\"==== got these old messages:\")\n                    // this.messages = r_messages\n                    for (let x in r_messages) {\n                        let m = r_messages[x]\n                        this.receiveMessage(m)\n                    }\n                    this.save();\n                    this.getChannelMessages()\n                    resolve(r_messages);\n                });\n            } catch (e) {\n                reject(e)\n            }\n\n        });\n    };\n\n    replyEncryptionKey = async (recipientPubkey: string) => {\n        if (!this._socket) throw new Error(\"no socket\")\n        if (!this._socket.keys.privateKey) throw new Error(\"no private key, this shouldn't happen!\")\n        return Crypto.deriveKey(this._socket.keys.privateKey, await Crypto.importKey(\"jwk\", JSON.parse(recipientPubkey), \"ECDH\", true, []), \"AES\", false, [\"encrypt\", \"decrypt\"])\n    }\n\n    sendMessage = (body: {[key: string]: any},  message?: string) => {\n        if (!this._socket) throw new Error(\"no socket\")\n            const SBM = new SB.SBMessage(this._socket, message ? message : '') as any\n            SBM.contents = body\n            return this._socket.send(SBM);\n    }\n\n    // This isnt in the the jslib atm\n    // PSM: it is now but needs testing\n    lock = () => {\n        return new Promise((resolve, reject) => {\n            if (!this._socket) throw new Error(\"no socket\")\n            try {\n                this._socket.api.lock().then((locked: any) => {\n                    console.log(locked)\n                    resolve(locked)\n                })\n            } catch (e) {\n                reject(e)\n            }\n        })\n    };\n\n    downloadData = async () => {\n        try {\n            if (!this._socket) throw new Error(\"no socket\")\n\n            let data = await this._socket.api.downloadData() as { storage: { target: string } }\n            // @ts-ignore\n            delete data.channel.SERVER_SECRET\n            data.storage.target = window.location.host\n            return data\n        } catch (e) {\n            console.error(e)\n            return false\n        }\n    };\n\n    // MTG: this will be changed inthe future to work with budding\n    create = (secret: string) => {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const c = await this.SB.create(this.config, secret);\n                console.log(\"==== created channel:\"); console.log(c);\n                this.id = c.channelId\n                this.key = c.key\n                resolve(this);\n            } catch (e) {\n                console.error(e)\n                reject(e)\n            }\n        })\n    };\n\n    connect = async (messageCallback?: ((...data: any[]) => void) | undefined) => {\n        this._messageCallback = messageCallback;\n        if (this._socket && this._socket.status === 'OPEN') {\n            console.log(\"==== already connected to channel:\" + this.id)\n            return true\n        }\n        if (!this.id) {\n            throw new Error(\"no channel id\")\n        }\n        try {\n            console.log(this)\n            console.log(\"==== connecting to channel:\" + this.id)\n            console.log(\"==== with key:\" + this.key)\n            const c = await this.SB.connect(\n                m => { this.receiveMessage(m, true); },\n                this.key,\n                this.id\n            );\n            console.log(\"==== connected to channel:\"); console.log(c);\n            if (c) {\n                await c.channelSocketReady;\n                this.key = c.exportable_privateKey\n                this.socket = c;\n                this.keys = c.keys;\n                this.owner = c.owner\n                try {\n                    const r = await c.api.getCapacity();\n                    this.capacity = r.capacity;\n                } catch (e) {\n                    console.warn(e)\n                }\n\n                this.motd = c.motd || '';\n                this.getOldMessages(0);\n                this.readyResolver();\n                await this.save();\n                return this\n            } else {\n                return false\n            }\n        } catch (e) {\n            console.error(e)\n            return false\n        }\n\n    };\n\n    receiveMessage = (m: __.ChannelMessage, updateState = false) => {\n        console.log(\"==== received this message:\", this._id, m)\n        if (updateState) {\n            this.messages = [...this._messages, m]\n        }\n        this.workerPort.port2.postMessage({ method: 'addMessage', channel_id: this._id, message: m, args: { updateState: updateState } })\n    };\n\n}\n\nexport default ChannelStore;", "import * as __ from \"lib384/dist/384.esm.js\";\n\n\nexport function bytesToMegabytes(bytes: number) {\n  if (typeof bytes !== 'number') {\n    throw new TypeError('Input must be a number');\n  }\n\n  const megabytes = bytes / (1024 * 1024);\n  return parseFloat(megabytes.toFixed(2)); // Keep two decimal places\n}\n\nexport function _sb_assert(val: unknown, msg: string) {\n  if (!(val)) {\n    const m = `<< SB assertion error: ${msg} >>`;\n    // debugger;\n    throw new Error(m);\n  }\n}\n\nexport async function generateHash(data: ArrayBuffer) {\n  try {\n    const digest = await crypto.subtle.digest('SHA-512', data);\n    const _id = digest.slice(0, 32);\n    const _key = digest.slice(32);\n    return {\n      id: encodeURIComponent(__.utils.arrayBufferToBase64(_id)),\n      key: encodeURIComponent(__.utils.arrayBufferToBase64(_key))\n    };\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n}\n\nexport function text2Thumbnail(text: string, element: HTMLElement & {getContext: (s: string) => CanvasRenderingContext2D} ) {\n  var canvas = element;\n  var context = canvas.getContext(\"2d\");\n  var v = 50;\n  const h = 550;\n  const fs = 7;\n  const lm = 15;\n  const lx = 92;\n  context.font = `${fs}px monospace`;\n  for (let l of text.split(/[\\r\\n\\f\\v]/)) {\n    context.fillText(l.slice(0, lx), lm, v);\n    v += (fs + 1);\n    console.log(l);\n    if (v > h) {\n      break;\n    }\n  }\n}", "import { _sb_assert } from \"./Misc\"\n\n// Decorator\nexport function Memoize(target: any, propertyKey: string /* ClassGetterDecoratorContext */, descriptor?: PropertyDescriptor) {\n    if ((descriptor) && (descriptor.get)) {\n      let get = descriptor.get\n      descriptor.get = function () {\n        const prop = `__${target.constructor.name}__${propertyKey}__`\n        if (this.hasOwnProperty(prop)) {\n          const returnValue = this[prop as keyof PropertyDescriptor]\n          return (returnValue)\n        } else {\n          const returnValue = get.call(this)\n          Object.defineProperty(this, prop, { configurable: false, enumerable: false, writable: false, value: returnValue })\n          return returnValue\n        }\n      }\n    }\n  }\n\n  // Decorator\n  export function Ready(target: any, propertyKey: string /* ClassGetterDecoratorContext */, descriptor?: PropertyDescriptor) {\n    if ((descriptor) && (descriptor.get)) {\n      let get = descriptor.get\n      descriptor.get = function () {\n        const obj = target.constructor.name\n        const prop = `${obj}ReadyFlag`\n        if (prop in this) {\n          const rf = \"readyFlag\" as keyof PropertyDescriptor\n          _sb_assert(this[rf], `${propertyKey} getter accessed but object ${obj} not ready (fatal)`)\n        }\n        const retValue = get.call(this)\n        _sb_assert(retValue != null, `${propertyKey} getter accessed in object type ${obj} but returns NULL (fatal)`)\n        return retValue\n      }\n    }\n  }", "import { Ready } from './Decorators'\n/**\n* @description\n* IndexedKV is a wrapper around IndexedDB that provides a simple interface for\n* storing and retrieving data.\n*/\n\ntype IndexedKVOptions = { db: string; table: string; }\n\n\nclass IndexedKV {\n    readyResolver: Function | undefined;\n    db: IDBDatabase | undefined;\n    version: number | undefined;\n    openDatabaseIterations: number = 0;\n    IndexedKVReadyFlag: Promise<boolean> = new Promise((resolve) => {\n        this.readyResolver = resolve;\n    });\n    options: IndexedKVOptions = {\n        db: 'MyDB',\n        table: 'default'\n    };\n    constructor(options: IndexedKVOptions) {\n\n        this.options = Object.assign(this.options, options);\n        if (!globalThis.indexedDB) {\n            throw new Error(\"Your browser doesn't support a stable version of IndexedDB.\");\n        }\n        this.openDataBase();\n    }\n\n    openDataBase = (version: undefined | number = undefined) => {\n        this.openDatabaseIterations++;\n        console.log(`Opening database ${this.options.db}... version ${version ? version : 0}`)\n        const openReq = globalThis.indexedDB.open(this.options.db, version);\n        openReq.onerror = event => {\n            console.error(\"Database error: \" + event);\n        };\n        openReq.onsuccess = () => {\n            this.db = openReq.result;\n            const version = this.db.version;\n            console.log(`Database version: {${version}  ${this.options.db} ${this.options.table}}`);\n            // this.version = version;\n            if (this.db.objectStoreNames.contains(this.options.table)) {\n                console.log(`Object store '${this.options.table}' exists in the database.`);\n                if (this.readyResolver) {\n                    this.readyResolver(true);\n                }\n                this.openDatabaseIterations = 0;\n            } else {\n                if(this.openDatabaseIterations > 1){\n                    throw new Error(`Object store '${this.options.table}' does not exist in the database. Aborting...`);\n                }else{\n                    this.db.close();\n                    console.log(`Object store '${this.options.table}' does not exist in the database. Upgrading schema...`);\n                    this.openDataBase(version + 1);\n                }\n            }\n        };\n        openReq.onupgradeneeded = () => {\n            this.db = openReq.result;\n            this.db.createObjectStore(this.options.table, { keyPath: \"key\" });\n        };\n    }\n\n    /**\n     * Similar to \"Select * WHERE $regex\" implementation\n     * Matches the key against the regex and returns the value\n     *\n     * @param regex {Regular expression matcher}\n     * @param {Function=} callback\n     * @returns {Promise<Array<IDBRequest[\"result\"]>>}\n     */\n    openCursor(regex: RegExp, callback?: Function): Promise<Array<{ value: IDBCursorWithValue | unknown, key: string }>> {\n        return new Promise(async (resolve, reject) => {\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n                    const transaction = this.db.transaction([this.options.table], \"readonly\");\n                    const objectStore = transaction.objectStore(this.options.table);\n                    const request: IDBRequest = objectStore.openCursor(null, 'next');\n                    let returnArray: Array<{ value: IDBCursorWithValue, key: string }> = [];\n                    request.onsuccess = function () {\n                        const cursor: IDBCursorWithValue | null = request.result;\n                        if (cursor) {\n                            if (String(cursor.key).match(regex)) {\n                                returnArray.push({ value: cursor.value.value, key: cursor.value.key });\n                            }\n                            cursor.continue();\n                        }\n                        else {\n                            if (callback) {\n                                callback(returnArray);\n                            }\n                            resolve(returnArray);\n                        }\n                    };\n                }\n                else {\n                    reject('DB is not defined');\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * setItem will add or replace an entry by key\n     *\n     * @param {string | number} key\n     * @param {StructuredCloneData} value\n     * @returns {Promise<IDBValidKey>}\n     */\n\n    @Ready\n    setItem(key: IDBValidKey, value: string | number | boolean | object | Array<any>) {\n        return new Promise(async (resolve, reject) => {\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n\n                    const objectStore = this.db.transaction([this.options.table], \"readwrite\").objectStore(this.options.table);\n                    const request: IDBRequest = objectStore.get(key);\n                    request.onerror = event => {\n                        reject(event);\n                    };\n                    request.onsuccess = () => {\n                        const data = request.result;\n                        if (data?.value) {\n                            //Data exists we update the value\n                            data.value = value;\n                            try {\n                                const requestUpdate = objectStore.put(data);\n                                requestUpdate.onerror = (event) => {\n                                    reject(event);\n                                };\n                                requestUpdate.onsuccess = () => {\n                                    resolve(requestUpdate.result);\n                                };\n                            } catch (e) {\n                                console.error(e);\n                            }\n                        }\n                        else {\n                            const requestAdd = objectStore.add({ key: key, value: value });\n                            requestAdd.onsuccess = () => {\n                                resolve(requestAdd.result);\n                            };\n                            requestAdd.onerror = event => {\n                                console.error(event);\n                                reject(event);\n                            };\n                        }\n                    };\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * @description\n     * Add an item to the database\n     *\n     * @param {string | number} key\n     * @param {StructuredCloneData} value\n     * @returns {Promise<IDBValidKey | IDBRequest[\"result\"]>}\n     */\n    @Ready\n    add(key: IDBValidKey, value: string | number | boolean | object | Array<any>) {\n        return new Promise(async (resolve, reject) => {\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n                    const objectStore = this.db.transaction([this.options.table], \"readwrite\").objectStore(this.options.table);\n                    const request: IDBRequest = objectStore.get(key);\n                    request.onerror = event => {\n                        reject(event);\n                    };\n                    request.onsuccess = () => {\n                        const data = request.result;\n                        if (data?.value) {\n                            resolve(data.value);\n                        }\n                        else {\n                            const requestAdd = objectStore.add({ key: key, value: value });\n                            requestAdd.onsuccess = () => {\n                                resolve(requestAdd.result);\n                            };\n                            requestAdd.onerror = event => {\n                                reject(event);\n                            };\n                        }\n                    };\n                }\n                else {\n                    reject(new Error('db is not defined'));\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * @description\n     * Get an item from the database\n     *\n     * @param {string | number} key\n     * @returns\n     */\n    @Ready\n    getItem(key: IDBValidKey): Promise<IDBRequest[\"result\"] | null> {\n        return new Promise(async (resolve, reject) => {\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n                    const transaction = this.db.transaction([this.options.table]);\n                    const objectStore = transaction.objectStore(this.options.table);\n                    const request: IDBRequest = objectStore.get(key);\n                    request.onerror = event => {\n                        reject(event);\n                    };\n                    request.onsuccess = () => {\n                        const data = request.result;\n                        if (data?.value) {\n                            resolve(data.value);\n                        }\n                        else {\n                            resolve(null);\n                        }\n                    };\n                }\n                else {\n                    reject(new Error('db is not defined'));\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     *@description\n     * Get all items from the database\n     *\n     * @returns {Promise<Array<any> | null>}\n     */\n    @Ready\n    getAll(): Promise<any[]> {\n        return new Promise(async (resolve, reject) => {\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n                    const transaction = this.db.transaction([this.options.table]);\n                    const objectStore = transaction.objectStore(this.options.table);\n                    const request: IDBRequest = objectStore.getAll();\n                    request.onerror = event => {\n                        reject(event);\n                    };\n                    request.onsuccess = () => {\n                        const data = request.result;\n                        if (data) {\n                            resolve(data);\n                        }\n                        else {\n                            resolve([]);\n                        }\n                    };\n                }\n                else {\n                    reject(new Error('db is not defined \"getAll()\"'));\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * @description\n     * Remove an item from the database\n     *\n     * @param {string | number} key\n     * @returns {Promise<boolean>}\n     */\n    @Ready\n    removeItem(key: IDBValidKey): Promise<boolean> {\n        return new Promise(async (resolve, reject) => {\n            console.log(this.IndexedKVReadyFlag)\n            await this.IndexedKVReadyFlag;\n            try {\n                if (this.db) {\n                    const request = this.db.transaction([this.options.table], \"readwrite\")\n                        .objectStore(this.options.table)\n                        .delete(key);\n                    request.onsuccess = () => {\n                        resolve(true);\n                    };\n                    request.onerror = event => {\n                        console.error(event);\n                        reject(false);\n                    };\n                }\n                else {\n                    console.error('db is not defined \"removeItem()\"');\n                    reject(false);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n}\n\nexport default IndexedKV;\n", "/* eslint-disable */\n\nexport default () => {\n    console.log(`starting message worker`);\n    let readyResolver;\n    const IndexedKVReadyFlag = new Promise((resolve) => {\n        readyResolver = resolve;\n    });\n    let db;\n    let options = {\n        db: 'sb_messages',\n        table: 'messages'\n    }\n    let openReq = self.indexedDB.open(options.db);\n\n    openReq.addEventListener('error', (e) => {\n        console.error(\"Database error: \" + e);\n        throw new Error(\"Database error: \" + e);\n    });\n    openReq.addEventListener('success', (e) => {\n        db = e.target.result;\n        console.log('success')\n        if (typeof readyResolver !== 'undefined') {\n            readyResolver(true);\n        }\n    });\n    openReq.addEventListener('upgradeneeded', (e) => {\n        db = e.target.result;\n        db.createObjectStore(options.table, { keyPath: \"key\" });\n        console.log('upgradeneeded')\n\n    });\n\n    function openCursor(regex, callback) {\n        return new Promise((resolve, reject) => {\n\n            IndexedKVReadyFlag.then(() => {\n                if (db) {\n                    const transaction = db.transaction([options.table], \"readonly\");\n                    const objectStore = transaction.objectStore(options.table);\n                    const request = objectStore.openCursor(null, 'next');\n                    let returnArray = [];\n                    request.onsuccess = function () {\n                        const cursor = request.result;\n                        if (cursor) {\n                            if (String(cursor.key).match(regex)) {\n                                returnArray.push({ value: cursor.value.value, key: cursor.value.key });\n                            }\n                            cursor.continue();\n                        }\n                        else {\n                            if (callback) {\n                                callback(returnArray);\n                            }\n                            resolve(returnArray);\n                        }\n                    };\n                }\n                else {\n                    reject('DB is not defined');\n                }\n            })\n        });\n    }\n\n    function add(key, value) {\n        return new Promise((resolve, reject) => {\n            IndexedKVReadyFlag.then(() => {\n                if (db) {\n                    const transaction = db.transaction([options.table], \"readwrite\")\n                    const objectStore = transaction.objectStore(options.table);\n                    const request = objectStore.get(key);\n                    request.onerror = event => {\n                        reject(event);\n                    };\n                    request.onsuccess = () => {\n                        const data = request.result;\n                        if (data?.value) {\n                            //Data exists we update the value\n                            data.value = value;\n                            try {\n                                const requestUpdate = objectStore.put(data);\n                                requestUpdate.onerror = event => {\n                                    reject(event);\n                                };\n                                requestUpdate.onsuccess = (event) => {\n                                    resolve(requestUpdate.result);\n                                };\n                            } catch (e) {\n                                console.error(e);\n                            }\n                        }\n                        else {\n                            const requestAdd = objectStore.add({ key: key, value: value });\n                            requestAdd.onsuccess = () => {\n                                resolve(requestAdd.result);\n                            };\n                            requestAdd.onerror = event => {\n                                console.error(event);\n                                reject(event);\n                            };\n                        }\n                    };\n                }\n                else {\n                    reject(new Error('db is not defined'));\n                }\n            });\n        });\n    }\n\n    function getDateTimeFromTimestampPrefix(prefix) {\n\n\n        const binaryTimestamp = prefix;\n        const decimalTimestamp = parseInt(binaryTimestamp, 2);\n\n        const datetime = new Date(decimalTimestamp);\n        const year = datetime.getFullYear();\n        const month = datetime.getMonth() + 1; // Adding 1 because months are zero-based (January is 0)\n        const day = datetime.getDate();\n        const hours = datetime.getHours();\n        const minutes = datetime.getMinutes();\n        const seconds = datetime.getSeconds();\n        const millisecondsOutput = datetime.getMilliseconds();\n\n        // Format the datetime components into a string\n        return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')} ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${millisecondsOutput.toString().padStart(3, '0')}`;\n\n    }\n\n    let level = process.env.NODE_ENV;\n    console.log('Message Worker: level: ', level);\n    if (level === 'development') {\n    }\n    if (level === 'stage') {\n        console.log = function () { }\n        console.assert = function () { }\n        console.count = function () { }\n        console.debug = function () { }\n        console.dir = function () { }\n        console.dirxml = function () { }\n        console.group = function () { }\n        console.table = function () { }\n        console.tine = function () { }\n        console.timeEnd = function () { }\n        console.timeLog = function () { }\n        console.trace = function () { }\n    }\n    if (level === 'production') {\n        console.log = function () { }\n        console.warn = function () { }\n        console.assert = function () { }\n        console.count = function () { }\n        console.debug = function () { }\n        console.dir = function () { }\n        console.dirxml = function () { }\n        console.group = function () { }\n        console.table = function () { }\n        console.tine = function () { }\n        console.timeEnd = function () { }\n        console.timeLog = function () { }\n        console.trace = function () { }\n    }\n\n    self.onerror = (e) => {\n        console.log('Message Worker: Error: ', e);\n        postMessage({ error: e, status: 'error', data: { message: e.message }, method: 'onerror' });\n\n    }\n\n    self.onunhandledrejection = (e) => {\n        console.log('Message Worker: Unhandled Rejection: ', e);\n        postMessage({ error: e, status: 'error', data: { message: e.message }, method: 'unhandledrejection' });\n    }\n\n    function mergeMessages(existing, received) {\n        let merged = [];\n        for (let i = 0; i < existing.length + received.length; i++) {\n            if (received.find(itmInner => itmInner._id === existing[i]?._id)) {\n                merged.push({\n                    ...existing[i],\n                    ...received.find(itmInner => itmInner._id === existing[i]?._id)\n                });\n            } else {\n                if (received[i]) {\n                    merged.push(received[i]);\n                }\n            }\n        }\n        return merged.sort((a, b) => a._id > b._id ? 1 : -1);\n    };\n\n    const getMessages = (channel_id, port) => {\n        try {\n            let _messageValues = [];\n            openCursor(new RegExp(`^${channel_id}`)).then((messages) => {\n                for (let i = 0; i < messages.length; i++) {\n                    _messageValues.push(messages[i].value);\n                }\n                port.postMessage({ error: false, status: 'ok', data: mergeMessages([], _messageValues), method: 'getMessages', channel_id: channel_id });\n            })\n        } catch (e) {\n            throw new Error(`Message Worker: Error(getMessages(${channel_id}) ): ${e.message}`)\n        }\n    }\n\n    const addMessage = (message, args, channel_id, port) => {\n        try {\n            message.createdAt = getDateTimeFromTimestampPrefix(message.timestampPrefix);\n            add(message._id, message)\n            console.log('addMessage', message)\n            port.postMessage({ error: false, status: 'ok', data: message, method: 'addMessage', args: args, channel_id: channel_id });\n        } catch (e) {\n            throw new Error(`Message Worker: Error(addMessage() ): ${e.message}`)\n        }\n    }\n\n\n    self.onmessage = (event) => {\n        console.log('Message Worker: Received message from main script', event);\n        const port = event.ports[0];\n        console.log('Message Worker: port', port)\n        port.onmessage = (msg) => {\n            console.log('Message Worker: Received message from main script', msg);\n            const digest = msg.data\n            if (digest.channel_id !== undefined) {\n                switch (digest.method) {\n                    case 'getMessages':\n                        getMessages(digest.channel_id, port);\n                        break;\n                    case 'addMessage':\n                        addMessage(digest.message, digest.args, digest.channel_id, port);\n                        break;\n                    default:\n                        throw new Error(`No such message worker method (${digest.method})`);\n                }\n            } else {\n                throw new Error(`No channel_id in message worker method (${digest.method})`);\n            }\n        }\n    }\n}", "import { makeAutoObservable, onBecomeUnobserved, configure, toJS, autorun } from \"mobx\";\nimport * as __ from \"lib384/dist/384.esm.js\";\nimport ChannelStore, {ChannelStoreType} from \"./Channel.Store\";\nimport IndexedKV from \"../utils/IndexedKV\";\n\n\nconsole.log(\"=========== mobx-snackabra-store loading ===========\")\n\nlet SB = __.NewSB;\nlet cacheDb: IndexedKV;\n\n\nconfigure({\n  useProxies: \"always\",\n  enforceActions: \"observed\",\n  computedRequiresReaction: false,\n  reactionRequiresObservable: false,\n  observableRequiresReaction: false,\n  disableErrorBoundaries: false\n});\n\nexport interface SnackabraStoreType {\n  readyResolver: (value: unknown) => void;\n  config: __.SnackabraTypes.SBServer;\n  SB: __.Snackabra;\n  ready: Promise<unknown>;\n  channels: { [key: string]: ({ id: string, alias?: string, key?: JsonWebKey, readyResolver?: any } | ChannelStoreType) };\n  contacts: { [key: string]: string };\n  join: (channelId: string, key?: JsonWebKey) => Promise<ChannelStore>;\n  create: (secret: any, alias: any) => Promise<ChannelStore>;\n  importKeys: (importedData: { roomData: { [x: string]: any; }; roomMetadata: { [x: string]: any; }; contacts: any; }) => Promise<boolean>;\n  createContact: (alias: any, keyOrPubIdentifier: string | JsonWebKey) => string;\n  getContact: (keyOrPubIdentifier: string | JsonWebKey) => { _id: string; name: string; };\n}\nexport class SnackabraStore implements SnackabraStoreType {\n\n  readyResolver!: (value: unknown) => void;\n  config: __.SnackabraTypes.SBServer = {\n    channel_server: \"\",\n    channel_ws: \"\",\n    storage_server: \"\"\n  };\n  private _channels: { [key: string]: ({ id: string, alias?: string, key?: JsonWebKey, readyResolver?: any } | ChannelStore) } = {};\n  private _contacts: { [key: string]: string } = {};\n  SB: __.Snackabra;\n  ready = new Promise((resolve) => {\n    this.readyResolver = resolve\n  })\n\n  constructor(sbConfig: __.SnackabraTypes.SBServer) {\n    if (!sbConfig) {\n      throw new Error(\"SnackabraStore requires a config object\")\n    }\n    this.config = sbConfig\n    this.SB = new SB.Snackabra(this.config);\n\n    makeAutoObservable(this);\n\n    onBecomeUnobserved(this, \"channels\", this.save);\n    cacheDb = new IndexedKV({\n      db: 'sb_data',\n      table: 'cache'\n    });\n\n    cacheDb.getItem('sb_data_migrated').then((migrated: { version: any; }) => {\n      this.migrate(migrated?.version || 1)\n    })\n\n    autorun(() => {\n      if (Object.keys(this._contacts).length > 0) {\n        cacheDb.setItem('sb_data_contacts', toJS(this._contacts))\n      }\n    })\n  }\n\n  private save = async () => {\n    try {\n      let channels = {} as typeof this._channels\n      for (let x in this.channels) {\n        console.log(x, this.channels[x])\n        if (x) {\n          channels[x] = { id: x }\n        }\n      }\n      await cacheDb.setItem('sb_data_channels', channels)\n      return true;\n    } catch (e: unknown) {\n      if (e instanceof Error)\n        console.warn('There was an issue saving the snackabra state.', e.message)\n      return false;\n    }\n\n  }\n\n  private getChannelsCache = async () => {\n    let channels = await cacheDb.getItem('sb_data_channels');\n    console.log(channels)\n    if (channels && Object.keys(channels).length > 0) {\n      this.channels = channels;\n    } else {\n      let _channels = await cacheDb.openCursor(/^sb_data_[A-Za-z0-9]{64}$/) as Array<{ value: { id: string } }>\n      console.log(_channels)\n      channels = {} as typeof this._channels\n      for (let x in _channels) {\n        if (channels[_channels[x].value!.id]) {\n          channels[_channels[x].value!.id] = _channels[x].value\n        }\n\n      }\n      this.channels = channels;\n    }\n    return channels;\n  }\n\n  private migrate = async (v: any) => {\n    const sb_data = JSON.parse(await cacheDb.getItem('sb_data'));\n    let channels = await this.getChannelsCache();\n    switch (v) {\n      case 1:\n        if (sb_data) {\n          Object.keys(sb_data.rooms).forEach((roomId) => {\n            for (let x in sb_data.rooms[roomId]) {\n              // @ts-ignore\n              this.channels[roomId][x] = sb_data.rooms[roomId][x];\n            }\n            cacheDb.setItem('sb_data_' + roomId, toJS(this.channels[roomId])).then(() => {\n              delete this.channels[roomId];\n            })\n          })\n        }\n        this.migrate(2)\n        return;\n      case 2:\n        if (channels) {\n          this.channels = channels\n        }\n        this.migrate(3)\n        return;\n      case 3:\n        this.getContacts();\n        let migrationPromises = [];\n        for (let x in channels) {\n          if (channels[x]) {\n            migrationPromises.push(this.migrateChannel(channels[x].id))\n          }\n        }\n        this.finalizeMigration(migrationPromises)\n        break;\n      default:\n        throw new Error(`Unknown snackabra store migration version ${v}`)\n    }\n  }\n\n  private finalizeMigration = (migrationPromise: Promise<void>[] = []) => {\n    Promise.allSettled(migrationPromise).then(() => {\n      cacheDb.setItem('sb_data_migrated', {\n        timestamp: Date.now(),\n        version: 3\n      }).then(() => {\n        // @ts-ignore\n        this.readyResolver()\n      })\n    })\n  }\n\n  private migrateChannel = async (channelId: string) => {\n    cacheDb.getItem('sb_data_' + channelId).then((channel: { contacts: any; id: any; _id: any; name: any; alias: any; key: any; }) => {\n      if (channel) {\n        console.warn('Migrating channel', channel)\n        this.mergeContacts(channel.contacts)\n        const id = channel.id || channel._id;\n        this._channels[channelId] = new ChannelStore(this.config, id)\n        let alias = channel.name || channel.alias\n        this._channels[channelId].alias = alias\n        this._channels[channelId].key = channel.key\n      }\n    })\n  }\n\n  mergeContacts = (contacts: any) => {\n    this.contacts = Object.assign(this.contacts, contacts)\n  }\n\n  getContacts = async () => {\n    let contacts = await cacheDb.getItem('sb_data_contacts') || {};\n    this.contacts = Object.assign(this.contacts, contacts);\n  }\n\n  getContact = (keyOrPubIdentifier: string | JsonWebKey) => {\n    if (typeof keyOrPubIdentifier === 'string') {\n      const name = typeof this.contacts[keyOrPubIdentifier] !== 'undefined' ? this.contacts[keyOrPubIdentifier] : 'Unamed';\n      return { _id: keyOrPubIdentifier, name: name }\n    } else {\n      const key = keyOrPubIdentifier;\n      const name = typeof this.contacts[key?.x + ' ' + key?.y] !== 'undefined' ? this.contacts[key?.x + ' ' + key?.y] : 'Unamed';\n      return { _id: key.x + ' ' + key.y, name: name }\n    }\n\n  }\n\n  createContact = (alias: any, keyOrPubIdentifier: string | JsonWebKey) => {\n    if (!keyOrPubIdentifier || !alias) {\n      throw new Error('createContact requires a key and alias')\n    }\n\n    if (typeof keyOrPubIdentifier === 'string') {\n      this._contacts[keyOrPubIdentifier] = alias\n      this.save()\n      return this._contacts[keyOrPubIdentifier]\n    }\n    const key = keyOrPubIdentifier;\n    this._contacts[key.x + ' ' + key.y] = alias\n    this.save()\n    return this._contacts[key.x + ' ' + key.y]\n  }\n\n  get channels() {\n    return this._channels as { [key: string]: ChannelStoreType }\n  }\n\n  set channels(channels) {\n    this._channels = channels\n  }\n\n  set contacts(contacts) {\n    this._contacts = Object.assign(this._contacts, contacts)\n  }\n  get contacts() {\n    return toJS(this._contacts)\n  }\n\n  join = (channelId: string, key?: JsonWebKey): Promise<ChannelStore> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let channelStore = new ChannelStore(this.config, channelId);\n        if (key) {\n          channelStore.key = key\n        }\n        let channel = await channelStore.connect(console.log)\n        if (channel instanceof ChannelStore) {\n          this._channels[channel.id] = channel;\n          await this.save();\n          resolve(channel);\n        } else {\n          throw new Error('Channel not created')\n        }\n      } catch (e) {\n        console.error(e)\n        reject(e)\n      }\n    })\n  }\n\n\n  create = (secret: any, alias: any): Promise<ChannelStore> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const channel = new ChannelStore(this.config);\n        await channel.create(secret);\n        this.channels[channel.id] = channel;\n        this.channels[channel.id].alias = alias;\n        this.save();\n        resolve(this.channels[channel.id] as ChannelStore);\n      } catch (e) {\n        console.error(e)\n        reject(e)\n      }\n    });\n  }\n\n  importKeys = (importedData: { roomData: { [x: string]: any; }; roomMetadata: { [x: string]: any; }; contacts: any; }): Promise<boolean> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        console.log('importing keys')\n        console.log(importedData)\n        for (let id in importedData.roomData) {\n          console.log(id)\n          const importedChannel = importedData.roomData[id]\n          console.log(importedChannel)\n          const metaData = importedData.roomMetadata[id]\n          console.log(metaData)\n          let knownRoom = this._channels[id];\n          console.log(knownRoom)\n          if (!knownRoom) {\n            this._channels[id] = new ChannelStore(this.config, id)\n          }\n          this._channels[id].readyResolver()\n          this._channels[id].alias = metaData.alias ? metaData.alias : metaData.name || `Room ${Object.keys(this._channels).length}`\n          this._channels[id].key = importedChannel.key\n\n        }\n        this.contacts = Object.assign(this.contacts, importedData.contacts)\n        this.save()\n        resolve(true)\n      } catch (e) {\n        console.error(e)\n        reject(e)\n      }\n\n    })\n\n  };\n}\n\nexport default SnackabraStore;", "import SnackabraStore from \"./Snackabra.Store\"\n\nexport const stores = {\n    SB: SnackabraStore,\n}"],
  "mappings": "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A,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAC1B,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACtF,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACtF,UAAU;AAAA,QAAM,UAAU;AAAA,QAC1B,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UA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",
  "names": ["undefined", "array", "collection", "object", "comparer", "cache", "map", "set", "runInContext", "_", "Array", "Date", "Error", "Function", "Math", "Object", "RegExp", "String", "TypeError", "Buffer", "Symbol", "Uint8Array", "splice", "defineProperty", "DataView", "Map", "Promise", "Set", "isObject", "result", "iteratee", "computed", "size", "values", "eq", "get", "key", "setTimeout", "includes", "isFunction", "caches", "isPlainObject", "indexOf", "action", "toString", "clearTimeout", "index", "ary", "noop", "othValue", "transform", "remove", "reverse", "parent", "clone", "orderBy", "once", "isNaN", "assign", "has", "parseInt", "replace", "flow", "chain", "value", "niceErrors", "_", "annotationType", "key", "toString", "index", "length", "other", "constructor", "name", "dataStructure", "thing", "property", "derivation", "method", "errors", "process", "die", "error", "args", "Array", "_len", "_key", "arguments", "e", "apply", "Error", "map", "String", "join", "mockGlobal", "getGlobal", "globalThis", "window", "global", "self", "assign", "Object", "getDescriptor", "getOwnPropertyDescriptor", "defineProperty", "objectPrototype", "prototype", "EMPTY_ARRAY", "freeze", "EMPTY_OBJECT", "hasProxy", "Proxy", "plainObjectString", "assertProxies", "warnAboutProxyRequirement", "msg", "globalState", "verifyProxies", "getNextId", "mobxGuid", "once", "func", "invoked", "noop", "isFunction", "fn", "isStringish", "value", "t", "isObject", "isPlainObject", "proto", "getPrototypeOf", "protoConstructor", "hasOwnProperty", "call", "isGenerator", "obj", "displayName", "addHiddenProp", "object", "propName", "enumerable", "writable", "configurable", "addHiddenFinalProp", "createInstanceofPredicate", "theClass", "x", "isES6Map", "Map", "isES6Set", "Set", "hasGetOwnPropertySymbols", "getOwnPropertySymbols", "getPlainObjectKeys", "keys", "symbols", "concat", "filter", "s", "propertyIsEnumerable", "ownKeys", "Reflect", "getOwnPropertyNames", "stringifyKey", "toPrimitive", "hasProp", "target", "prop", "getOwnPropertyDescriptors", "res", "forEach", "storedAnnotationsSymbol", "Symbol", "createDecoratorAnnotation", "annotation", "decorator", "is20223Decorator", "decorate_20223_", "storeAnnotation", "_extends", "isOverride", "fieldName", "assertNotDecorated", "currentAnnotationType", "annotationType_", "requestedAnnotationType", "is20223Decorator", "context", "assert20223DecoratorType", "types", "includes", "kind", "die", "String", "name", "$mobx", "Symbol", "Atom", "name_", "process", "getNextId", "isPendingUnobservation_", "isBeingObserved_", "observers_", "Set", "diffValue_", "lastAccessedBy_", "lowestObserverState_", "IDerivationState_", "NOT_TRACKING_", "onBOL", "onBUOL", "_proto", "prototype", "onBO", "forEach", "listener", "onBUO", "reportObserved", "reportChanged", "startBatch", "propagateChanged", "endBatch", "toString", "isAtom", "createInstanceofPredicate", "createAtom", "onBecomeObservedHandler", "onBecomeUnobservedHandler", "noop", "atom", "onBecomeObserved", "onBecomeUnobserved", "identityComparer", "a", "b", "structuralComparer", "deepEqual", "shallowComparer", "defaultComparer", "Object", "is", "comparer", "identity", "structural", "shallow", "deepEnhancer", "v", "_", "isObservable", "Array", "isArray", "observable", "array", "isPlainObject", "object", "undefined", "isES6Map", "map", "isES6Set", "set", "isAction", "isFlow", "isGenerator", "flow", "autoAction", "shallowEnhancer", "isObservableObject", "isObservableArray", "isObservableMap", "isObservableSet", "deep", "referenceEnhancer", "newValue", "refStructEnhancer", "oldValue", "OVERRIDE", "isOverride", "annotation", "annotationType_", "OVERRIDE", "createActionAnnotation", "name", "options", "annotationType_", "options_", "make_", "extend_", "decorate_20223_", "adm", "key", "descriptor", "source", "_this$options_", "bound", "target_", "isAction", "value", "actionDescriptor", "createActionDescriptor", "defineProperty", "proxyTrap", "defineProperty_", "mthd", "context", "process", "assert20223DecoratorType", "kind", "addInitializer", "ann", "_createAction", "m", "_ann$options_$name", "_ann$options_", "_ann$options_$autoAct", "_ann$options_2", "createAction", "toString", "autoAction", "storeAnnotation", "_this$options_2", "self", "bind", "isMobxAction", "die", "String", "assertActionDescriptor", "_ref", "_ref2", "isFunction", "name_", "annotation", "safeDescriptors", "globalState", "_annotation$options_", "_adm$proxy_", "proxy_", "_annotation$options_$", "_annotation$options_2", "_annotation$options_$2", "_annotation$options_3", "_annotation$options_4", "_adm$proxy_2", "undefined", "configurable", "isPlainObject_", "enumerable", "writable", "createFlowAnnotation", "hasProp", "isFlow", "flowDescriptor", "createFlowDescriptor", "flow", "_this$options_3", "isMobXFlow", "assertFlowDescriptor", "createComputedAnnotation", "assertComputedDescriptor", "defineComputedProperty_", "_extends", "get", "set", "asObservableObject", "$mobx", "values_", "ComputedValue", "getObservablePropValue_", "createObservableAnnotation", "assertObservableDescriptor", "defineObservableProperty_", "_this$options_$enhanc", "enhancer", "deepEnhancer", "desc", "initializedObjects", "WeakSet", "initializeObservable", "target", "observable", "ObservableValue", "_ann$options_$enhance", "add", "has", "call", "setObservablePropValue_", "init", "AUTO", "autoAnnotation", "createAutoAnnotation", "computed", "isGenerator", "flowAnnotation", "autoBind", "actionAnnotation", "observableAnnotation", "deep", "ref", "_this$options_4", "_this$options_5", "_this$options_6", "OBSERVABLE", "OBSERVABLE_REF", "OBSERVABLE_SHALLOW", "OBSERVABLE_STRUCT", "defaultCreateObservableOptions", "defaultDecorator", "proxy", "Object", "freeze", "asCreateObservableOptions", "thing", "observableRefAnnotation", "referenceEnhancer", "observableShallowAnnotation", "shallowEnhancer", "observableStructAnnotation", "refStructEnhancer", "observableDecoratorAnnotation", "createDecoratorAnnotation", "getEnhancerFromOptions", "getEnhancerFromAnnotation", "getAnnotationFromOptions", "_options$defaultDecor", "createObservable", "v", "arg2", "arg3", "is20223Decorator", "isStringish", "isObservable", "isPlainObject", "object", "Array", "isArray", "array", "isES6Map", "map", "isES6Set", "box", "assign", "observableFactories", "o", "equals", "initialValues", "useProxies", "createLegacyArray", "createObservableArray", "ObservableMap", "ObservableSet", "props", "decorators", "initObservable", "extendObservable", "asDynamicObservableObject", "shallow", "struct", "COMPUTED", "COMPUTED_STRUCT", "computedAnnotation", "computedStructAnnotation", "comparer", "structural", "arg1", "opts", "currentActionId", "nextActionId", "isFunctionNameConfigurable", "_getDescriptor$config", "_getDescriptor", "getDescriptor", "tmpNameDescriptor", "actionName", "fn", "res", "executeAction", "arguments", "canRunAsDerivation", "scope", "args", "runInfo", "_startAction", "apply", "err", "error_", "_endAction", "notifySpy_", "isSpyEnabled", "startTime_", "Date", "now", "flattenedArgs", "from", "EMPTY_ARRAY", "spyReportStart", "type", "ACTION", "prevDerivation_", "trackingDerivation", "runAsAction", "startBatch", "prevAllowStateChanges_", "allowStateChanges", "untrackedStart", "allowStateChangesStart", "prevAllowStateReads_", "allowStateReadsStart", "runAsAction_", "actionId_", "parentActionId_", "suppressReactionErrors", "allowStateChangesEnd", "allowStateReadsEnd", "endBatch", "untrackedEnd", "spyReportEnd", "time", "allowStateChangesStart", "allowStateChanges", "prev", "globalState", "allowStateChangesEnd", "CREATE", "_Symbol$toPrimitive", "Symbol", "toPrimitive", "ObservableValue", "_Atom", "_inheritsLoose", "value", "enhancer", "name_", "notifySpy", "equals", "process", "getNextId", "comparer", "_this", "call", "hasUnreportedChange_", "interceptors_", "changeListeners_", "value_", "dehancer", "undefined", "isSpyEnabled", "spyReport", "type", "object", "_assertThisInitialized", "observableKind", "debugObjectName", "newValue", "_proto", "prototype", "dehanceValue", "set", "oldValue", "prepareNewValue_", "UNCHANGED", "spyReportStart", "UPDATE", "setNewValue_", "spyReportEnd", "checkIfStateModificationsAreAllowed", "hasInterceptors", "change", "interceptChange", "reportChanged", "hasListeners", "notifyListeners", "get", "reportObserved", "intercept_", "handler", "registerInterceptor", "observe_", "listener", "fireImmediately", "registerListener", "raw", "toJSON", "toString", "valueOf", "Atom", "isObservableValue", "createInstanceofPredicate", "ComputedValue", "options", "dependenciesState_", "IDerivationState_", "NOT_TRACKING_", "observing_", "newObserving_", "isBeingObserved_", "isPendingUnobservation_", "observers_", "Set", "diffValue_", "runId_", "lastAccessedBy_", "lowestObserverState_", "UP_TO_DATE_", "unboundDepsCount_", "CaughtException", "triggeredBy_", "isComputing_", "isRunningSetter_", "derivation", "setter_", "isTracing_", "TraceMode", "NONE", "scope_", "equals_", "requiresReaction_", "keepAlive_", "onBOL", "onBUOL", "die", "name", "createAction", "compareStructural", "struct", "structural", "context", "requiresReaction", "keepAlive", "onBecomeStale_", "propagateMaybeChanged", "onBO", "forEach", "onBUO", "inBatch", "size", "shouldCompute", "warnAboutUntrackedRead_", "startBatch", "computeValue_", "endBatch", "prevTrackingContext", "trackingContext", "trackAndCompute", "propagateChangeConfirmed", "result", "isCaughtException", "cause", "wasSuspended", "changed", "track", "res", "trackDerivedFunction", "disableErrorBoundaries", "e", "suspend_", "clearObserving", "console", "log", "firstTime", "prevValue", "autorun", "prevU", "untrackedStart", "untrackedEnd", "computedRequiresReaction", "warn", "isComputedValue", "STALE_", "POSSIBLY_STALE_", "prevAllowStateReads", "allowStateReadsStart", "prevUntracked", "obs", "l", "length", "i", "obj", "allowStateReadsEnd", "changeDependenciesStateTo0", "checkIfStateModificationsAreAllowed", "atom", "hasObservers", "observers_", "size", "globalState", "allowStateChanges", "enforceActions", "console", "warn", "name_", "checkIfStateReadsAreAllowed", "observable", "allowStateReads", "observableRequiresReaction", "trackDerivedFunction", "derivation", "f", "context", "prevAllowStateReads", "allowStateReadsStart", "changeDependenciesStateTo0", "newObserving_", "Array", "observing_", "length", "unboundDepsCount_", "runId_", "runId", "prevTracking", "trackingDerivation", "inBatch", "result", "disableErrorBoundaries", "call", "e", "CaughtException", "bindDependencies", "warnAboutDerivationWithoutDependencies", "allowStateReadsEnd", "requiresObservable_", "reactionRequiresObservable", "prevObserving", "observing", "lowestNewObservingDerivationState", "IDerivationState_", "UP_TO_DATE_", "i0", "l", "i", "dep", "diffValue_", "dependenciesState_", "removeObserver", "addObserver", "onBecomeStale_", "clearObserving", "obs", "NOT_TRACKING_", "untracked", "action", "prev", "untrackedStart", "untrackedEnd", "lowestObserverState_", "MobXGlobals", "version", "UNCHANGED", "trackingDerivation", "trackingContext", "runId", "mobxGuid", "inBatch", "pendingUnobservations", "pendingReactions", "isRunningReactions", "allowStateChanges", "allowStateReads", "enforceActions", "spyListeners", "globalReactionErrorHandlers", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "suppressReactionErrors", "useProxies", "verifyProxies", "safeDescriptors", "canMergeGlobalState", "isolateCalled", "globalState", "global", "getGlobal", "__mobxInstanceCount", "__mobxGlobals", "setTimeout", "die", "isolateGlobalState", "length", "undefined", "addObserver", "observable", "node", "observers_", "add", "lowestObserverState_", "dependenciesState_", "removeObserver", "size", "queueForUnobservation", "isPendingUnobservation_", "globalState", "pendingUnobservations", "push", "startBatch", "inBatch", "endBatch", "runReactions", "list", "i", "length", "isBeingObserved_", "onBUO", "ComputedValue", "suspend_", "reportObserved", "checkIfStateReadsAreAllowed", "derivation", "trackingDerivation", "runId_", "lastAccessedBy_", "newObserving_", "unboundDepsCount_", "trackingContext", "onBO", "propagateChanged", "IDerivationState_", "STALE_", "forEach", "d", "UP_TO_DATE_", "isTracing_", "TraceMode", "NONE", "logTraceInfo", "onBecomeStale_", "propagateChangeConfirmed", "POSSIBLY_STALE_", "propagateMaybeChanged", "console", "log", "name_", "BREAK", "lines", "printDepTree", "getDependencyTree", "Function", "toString", "replace", "join", "tree", "depth", "repeat", "name", "dependencies", "child", "Reaction", "onInvalidate_", "errorHandler_", "requiresObservable_", "process", "getNextId", "observing_", "NOT_TRACKING_", "diffValue_", "isDisposed_", "isScheduled_", "isTrackPending_", "isRunning_", "_proto", "prototype", "schedule_", "pendingReactions", "isScheduled", "runReaction_", "prev", "shouldCompute", "isSpyEnabled", "spyReport", "type", "e", "reportExceptionInDerivation_", "track", "fn", "notify", "startTime", "Date", "now", "spyReportStart", "prevReaction", "result", "trackDerivedFunction", "undefined", "clearObserving", "isCaughtException", "cause", "spyReportEnd", "time", "error", "disableErrorBoundaries", "message", "suppressReactionErrors", "warn", "globalReactionErrorHandlers", "f", "_this", "dispose", "getDisposer_", "abortSignal", "_this2", "removeEventListener", "addEventListener", "$mobx", "trace", "enterBreakPoint", "MAX_REACTION_ITERATIONS", "reactionScheduler", "f", "runReactions", "globalState", "inBatch", "isRunningReactions", "runReactionsHelper", "allReactions", "pendingReactions", "iterations", "length", "console", "error", "process", "splice", "remainingReactions", "i", "l", "runReaction_", "isReaction", "createInstanceofPredicate", "Reaction", "setReactionScheduler", "fn", "baseScheduler", "isSpyEnabled", "spyListeners", "spyReport", "event", "listeners", "spyReportStart", "change", "_extends", "END_EVENT", "type", "spyReportEnd", "spy", "listener", "warn", "push", "once", "filter", "ACTION", "ACTION_BOUND", "AUTOACTION", "AUTOACTION_BOUND", "DEFAULT_ACTION_NAME", "actionAnnotation", "createActionAnnotation", "actionBoundAnnotation", "bound", "autoActionAnnotation", "autoAction", "autoActionBoundAnnotation", "createActionFactory", "res", "action", "arg1", "arg2", "isFunction", "createAction", "name", "is20223Decorator", "decorate_20223_", "isStringish", "storeAnnotation", "createDecoratorAnnotation", "die", "Object", "assign", "isAction", "thing", "isFunction", "isMobxAction", "autorun", "view", "opts", "EMPTY_OBJECT", "process", "die", "name", "_opts$name", "_opts", "getNextId", "runSync", "scheduler", "delay", "reaction", "Reaction", "track", "reactionRunner", "onError", "requiresObservable", "createSchedulerFromOptions", "isScheduled", "isDisposed_", "_opts2", "_opts2$signal", "signal", "aborted", "schedule_", "getDisposer_", "_opts3", "run", "f", "setTimeout", "ON_BECOME_OBSERVED", "ON_BECOME_UNOBSERVED", "onBecomeObserved", "thing", "arg2", "arg3", "interceptHook", "onBecomeUnobserved", "hook", "atom", "getAtom", "cb", "isFunction", "listenersKey", "add", "Set", "hookListeners", "size", "NEVER", "ALWAYS", "OBSERVED", "configure", "options", "isolateGlobalState", "useProxies", "enforceActions", "undefined", "globalState", "Proxy", "verifyProxies", "ea", "allowStateChanges", "forEach", "key", "allowStateReads", "observableRequiresReaction", "disableErrorBoundaries", "console", "warn", "reactionScheduler", "setReactionScheduler", "extendObservable", "target", "properties", "annotations", "process", "arguments", "length", "die", "isObservableMap", "isPlainObject", "isObservable", "descriptors", "getOwnPropertyDescriptors", "initObservable", "adm", "asObservableObject", "$mobx", "ownKeys", "extend_", "getDependencyTree", "property", "nodeToDependencyTree", "node", "result", "name", "name_", "observing_", "dependencies", "unique", "map", "unique", "list", "Array", "from", "Set", "generatorId", "FlowCancellationError", "message", "prototype", "Object", "create", "Error", "flowAnnotation", "createFlowAnnotation", "flowBoundAnnotation", "bound", "flow", "Object", "assign", "arg1", "arg2", "is20223Decorator", "decorate_20223_", "isStringish", "storeAnnotation", "arguments", "length", "die", "generator", "name", "res", "ctx", "args", "runId", "generatorId", "gen", "action", "apply", "rejector", "pendingPromise", "undefined", "promise", "Promise", "resolve", "reject", "stepId", "onFulfilled", "ret", "next", "call", "e", "onRejected", "err", "isFunction", "then", "done", "value", "cancel", "cancelPromise", "yieldedPromise", "noop", "FlowCancellationError", "isMobXFlow", "createDecoratorAnnotation", "isFlow", "fn", "isMobXFlow", "_isObservable", "value", "property", "undefined", "isObservableMap", "isObservableArray", "die", "isObservableObject", "$mobx", "values_", "has", "isAtom", "isReaction", "isComputedValue", "isObservable", "arguments", "length", "apiOwnKeys", "obj", "isObservableObject", "$mobx", "ownKeys_", "die", "cache", "map", "key", "value", "set", "toJSHelper", "source", "__alreadySeen", "Date", "isObservable", "isObservableValue", "isComputedValue", "get", "has", "isObservableArray", "res", "Array", "length", "forEach", "idx", "isObservableSet", "Set", "add", "isObservableMap", "Map", "apiOwnKeys", "objectPrototype", "propertyIsEnumerable", "call", "toJS", "options", "die", "trace", "enterBreakPoint", "_len", "arguments", "args", "_key", "pop", "derivation", "getAtomFromArgs", "isTracing_", "TraceMode", "NONE", "console", "log", "name_", "BREAK", "LOG", "globalState", "trackingDerivation", "getAtom", "transaction", "action", "thisArg", "undefined", "startBatch", "apply", "endBatch", "getAdm", "target", "$mobx", "objectProxyTraps", "has", "name", "globalState", "trackingDerivation", "warnAboutProxyRequirement", "has_", "get", "get_", "set", "value", "isStringish", "values_", "_getAdm$set_", "set_", "deleteProperty", "process", "_getAdm$delete_", "delete_", "defineProperty", "descriptor", "_getAdm$definePropert", "defineProperty_", "ownKeys", "ownKeys_", "preventExtensions", "die", "asDynamicObservableObject", "options", "assertProxies", "asObservableObject", "_target$$mobx$proxy_", "_target$$mobx", "proxy_", "Proxy", "hasInterceptors", "interceptable", "interceptors_", "undefined", "length", "registerInterceptor", "handler", "interceptors", "push", "once", "idx", "indexOf", "splice", "interceptChange", "change", "prevU", "untrackedStart", "concat", "i", "l", "type", "untrackedEnd", "hasListeners", "listenable", "changeListeners_", "registerListener", "listeners", "notifyListeners", "slice", "keysSymbol", "Symbol", "makeAutoObservable", "target", "overrides", "options", "process", "isPlainObject", "Object", "getPrototypeOf", "die", "isObservableObject", "extendObservable", "initObservable", "adm", "asObservableObject", "$mobx", "proto", "keys", "Set", "concat", "ownKeys", "addHiddenProp", "forEach", "key", "make_", "SPLICE", "UPDATE", "MAX_SPLICE_SIZE", "arrayTraps", "get", "name", "getArrayLength_", "isNaN", "get_", "parseInt", "hasProp", "arrayExtensions", "set", "value", "setArrayLength_", "set_", "preventExtensions", "ObservableArrayAdministration", "enhancer", "owned_", "legacyMode_", "getNextId", "atom_", "values_", "interceptors_", "changeListeners_", "enhancer_", "dehancer", "proxy_", "lastKnownLength_", "Atom", "newV", "oldV", "_proto", "prototype", "dehanceValue_", "undefined", "dehanceValues_", "values", "length", "map", "intercept_", "handler", "registerInterceptor", "observe_", "listener", "fireImmediately", "observableKind", "object", "debugObjectName", "name_", "type", "index", "added", "slice", "addedCount", "removed", "removedCount", "registerListener", "reportObserved", "newLength", "currentLength", "newItems", "Array", "i", "spliceWithArray_", "updateArrayLength_", "oldLength", "delta", "reserveArrayBuffer", "deleteCount", "checkIfStateModificationsAreAllowed", "Math", "max", "arguments", "min", "EMPTY_ARRAY", "hasInterceptors", "change", "interceptChange", "v", "_this", "lengthDelta", "res", "spliceItemsIntoValues_", "notifyArraySplice_", "_this$values_", "splice", "apply", "oldItems", "notifyArrayChildUpdate_", "newValue", "oldValue", "notifySpy", "isSpyEnabled", "notify", "hasListeners", "spyReportStart", "reportChanged", "notifyListeners", "spyReportEnd", "console", "warn", "changed", "createObservableArray", "initialValues", "owned", "assertProxies", "addHiddenFinalProp", "proxy", "Proxy", "clear", "replace", "toJSON", "_len", "_key", "spliceWithArray", "push", "_len2", "items", "_key2", "pop", "shift", "unshift", "_len3", "_key3", "reverse", "globalState", "trackingDerivation", "sort", "copy", "remove", "idx", "indexOf", "addArrayExtension", "simpleFunc", "mapLikeFunc", "reduceLikeFunc", "funcName", "funcFactory", "dehancedValues", "callback", "thisArg", "element", "call", "_this2", "accumulator", "currentValue", "_this3", "isObservableArrayAdministration", "createInstanceofPredicate", "isObservableArray", "thing", "isObject", "ObservableMapMarker", "ADD", "DELETE", "_Symbol$iterator", "iterator", "_Symbol$toStringTag", "toStringTag", "ObservableMap", "initialData", "deepEnhancer", "data_", "hasMap_", "keysAtom_", "isFunction", "Map", "createAtom", "merge", "has_", "has", "entry", "newEntry", "ObservableValue", "referenceEnhancer", "stringifyKey", "onBecomeUnobserved", "hasKey", "updateValue_", "addValue_", "_delete", "value_", "transaction", "_this3$hasMap_$get", "setNewValue_", "observable", "prepareNewValue_", "UNCHANGED", "_this4", "_this4$hasMap_$get", "self", "makeIterable", "next", "_keys$next", "done", "entries", "_keys$next2", "_iterator", "_createForOfIteratorHelperLoose", "_step", "_step$value", "other", "isObservableMap", "getPlainObjectKeys", "_this5", "isArray", "_ref", "isES6Map", "constructor", "untracked", "_iterator2", "_this6", "_step2", "replacementMap", "convertToMap", "orderedData", "keysReportChangedCalled", "_iterator3", "_this7", "_step3", "deleted", "_iterator4", "_step4", "_step4$value", "keyExisted", "size", "iter1", "iter2", "next1", "next2", "toString", "from", "_createClass", "dataStructure", "ObservableSetMarker", "ObservableSet", "callbackFn", "add", "nextIndex", "observableValues", "isObservableSet", "isES6Set", "descriptorCache", "create", "REMOVE", "ObservableObjectAdministration", "target_", "defaultAnnotation_", "autoAnnotation", "isPlainObject_", "appliedAnnotations_", "pendingKeys_", "isAnnotation", "getObservablePropValue_", "setObservablePropValue_", "ComputedValue", "proxyTrap", "Reflect", "extend_", "enumerable", "writable", "configurable", "annotation", "assertAnnotable", "_this$target_$storedA", "storedAnnotationsSymbol", "annotationType_", "source", "objectPrototype", "descriptor", "getDescriptor", "outcome", "recordAnnotationApplied", "defineProperty_", "startBatch", "deleteOutcome", "delete_", "_extends", "defineProperty", "notifyPropertyAddition_", "endBatch", "defineObservableProperty_", "cachedDescriptor", "getCachedObservablePropDescriptor", "safeDescriptors", "defineComputedProperty_", "context", "_this$pendingKeys_", "_this$pendingKeys_$ge", "_getDescriptor", "deleteProperty", "propagateChanged", "_this$pendingKeys_2", "_this$pendingKeys_2$g", "ownKeys_", "keys_", "getAdministration", "getDebugName", "isExtensible", "_options$name", "String", "getAnnotationFromOptions", "isObservableObjectAdministration", "_adm$target_$storedAn", "isOverride", "fieldName", "currentAnnotationType", "requestedAnnotationType", "ENTRY_0", "createArrayEntryDescriptor", "safariPrototypeSetterInheritanceBug", "p", "OBSERVABLE_ARRAY_BUFFER_SIZE", "StubArray", "inherit", "ctor", "setPrototypeOf", "__proto__", "LegacyObservableArray", "_StubArray", "_inheritsLoose", "_assertThisInitialized", "arrays", "a", "prop", "fn", "createArrayBufferItem", "createLegacyArray", "getAtom", "property", "isAtom", "isComputedValue", "isReaction", "named", "isAction", "cb", "derivation", "untrackedStart", "allowStateChanges", "allowStateChangesStart", "allowStateChangesEnd", "untrackedEnd", "deepEqual", "b", "depth", "eq", "aStack", "bStack", "className", "valueOf", "unwrap", "areArrays", "aCtor", "bCtor", "getSelf", "m", "g", "getGlobal", "__MOBX_DEVTOOLS_GLOBAL_HOOK__", "injectMobx", "spy", "extras", "base64ToArrayBuffer", "b64lookup", "urlLookup", "revLookup", "CODE", "CODE_B64", "CODE_URL", "PAD", "MAX_CHUNK_LENGTH", "getLens", "tripletToBase64", "encodeChunk", "bs2dv", "arrayBufferToBase64", "base64ToArrayBuffer", "KeyPrefix", "arrayBufferToBase64", "array", "get", "__decorateClass", "channel", "m", "message", "msg", "version", "data", "result", "DEBUG", "base62", "base62Regex", "process", "crypto", "reverse", "DEBUG", "version", "DEBUG", "arrayBufferToBase64", "_sb_assert", "Ready", "get", "_sb_assert", "version", "transaction", "Ready", "transaction", "SB", "SB", "cacheDb"]
}
